{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void;\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: \"turbopack-connected\";\r\n    }\r\n  | {\r\n      type: \"turbopack-message\";\r\n      data: Record<string, any>;\r\n    };\r\n\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\r\n  sendMessage: SendMessage;\r\n  onUpdateError: (err: unknown) => void;\r\n};\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case \"turbopack-connected\":\r\n        handleSocketConnected(sendMessage);\r\n        break;\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage);\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage);\r\n          }\r\n          applyAggregatedUpdates();\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            \"[Fast Refresh] performing full reload\\n\\n\" +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\r\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\r\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\r\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\r\n          );\r\n          onUpdateError(e);\r\n          location.reload();\r\n        }\r\n        break;\r\n    }\r\n  });\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error(\"A separate HMR handler was already registered\");\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    },\r\n  };\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>;\r\n  unsubscribe: () => void;\r\n};\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message));\r\n}\r\n\r\ntype ResourceKey = string;\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  });\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: \"turbopack-subscribe\",\r\n    ...resource,\r\n  });\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: \"turbopack-unsubscribe\",\r\n      ...resource,\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key));\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map();\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  let aggregated = chunkListsWithPendingUpdates.get(key);\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    );\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg);\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return;\r\n  hooks.beforeRefresh();\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg);\r\n  }\r\n  chunkListsWithPendingUpdates.clear();\r\n  finalizeUpdate();\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks;\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks;\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks;\r\n  }\r\n\r\n  let merged;\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged;\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0];\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        );\r\n      }\r\n\r\n      merged = [update];\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged;\r\n  }\r\n\r\n  return {\r\n    type: \"ChunkListUpdate\",\r\n    chunks,\r\n    merged,\r\n  };\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\r\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"partial\") {\r\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  if (updateB.type === \"partial\") {\r\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\r\n\r\n  return {\r\n    type: \"EcmascriptMergedUpdate\",\r\n    entries,\r\n    chunks,\r\n  };\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB };\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB;\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA;\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      );\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\r\n    // These two completely cancel each other out.\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\r\n    const added = [];\r\n    const deleted = [];\r\n    const deletedModules = new Set(updateA.modules ?? []);\r\n    const addedModules = new Set(updateB.modules ?? []);\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId);\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId);\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added,\r\n      deleted,\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ]);\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ]);\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId);\r\n    }\r\n\r\n    return {\r\n      type: \"added\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? []);\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"deleted\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`);\r\n}\r\n\r\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length;\r\n  const bI = list.indexOf(b) + 1 || list.length;\r\n  return aI - bI;\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\r\n\r\nfunction emitIssues() {\r\n  const issues = [];\r\n  const deduplicationSet = new Set();\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\r\n\r\n      issues.push(chunkIssue);\r\n      deduplicationSet.add(chunkIssue.formatted);\r\n    }\r\n  }\r\n\r\n  sortIssues(issues);\r\n\r\n  hooks.issues(issues);\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource);\r\n  let hasCriticalIssues = false;\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true;\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues);\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key);\r\n  }\r\n\r\n  emitIssues();\r\n\r\n  return hasCriticalIssues;\r\n}\r\n\r\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\r\nconst CATEGORY_ORDER = [\r\n  \"parse\",\r\n  \"resolve\",\r\n  \"code generation\",\r\n  \"rendering\",\r\n  \"typescript\",\r\n  \"other\",\r\n];\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\r\n    if (first !== 0) return first;\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\r\n  });\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n};\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks);\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues);\r\n\r\n  handleIssues(msg);\r\n\r\n  switch (msg.type) {\r\n    case \"issues\":\r\n      // issues are already handled\r\n      break;\r\n    case \"partial\":\r\n      // aggregate updates\r\n      aggregateUpdates(msg);\r\n      break;\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\r\n      if (runHooks) hooks.beforeRefresh();\r\n      triggerUpdate(msg);\r\n      if (runHooks) finalizeUpdate();\r\n      break;\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh();\r\n  hooks.buildOk();\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB();\r\n    globalThis.__NEXT_HMR_CB = null;\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  );\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource);\r\n  let callbackSet: UpdateCallbackSet;\r\n  const existingCallbackSet = updateCallbackSets.get(key);\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    };\r\n    updateCallbackSets.set(key, callbackSet);\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback);\r\n    callbackSet = existingCallbackSet;\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback);\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe();\r\n      updateCallbackSets.delete(key);\r\n    }\r\n  };\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  const callbackSet = updateCallbackSets.get(key);\r\n  if (!callbackSet) {\r\n    return;\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg);\r\n  }\r\n\r\n  if (msg.type === \"notFound\") {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/utils/storage.js"],"sourcesContent":["import Cookies from 'js-cookie';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst REFRESH_TOKEN_KEY = 'refreshToken';\r\nconst USER_ID_KEY = 'userId';\r\nconst SESSION_ID_KEY = 'sessionId';\r\nconst CART_ID_KEY = 'cartId';\r\nconst ROLE = 'role';\r\n\r\n// Set token in cookies\r\nexport const setToken = (token) => Cookies.set(TOKEN_KEY, token, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n// Get token from cookies\r\nexport const getToken = () => Cookies.get(TOKEN_KEY);\r\n\r\n// Remove token from cookies\r\nexport const removeToken = () => Cookies.remove(TOKEN_KEY);\r\n\r\n// Set refresh token in cookies\r\nexport const setRefreshToken = (token) => Cookies.set(REFRESH_TOKEN_KEY, token, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n// Get refresh token from cookies\r\nexport const getRefreshToken = () => Cookies.get(REFRESH_TOKEN_KEY);\r\n\r\n// Remove refresh token from cookies\r\nexport const removeRefreshToken = () => Cookies.remove(REFRESH_TOKEN_KEY);\r\n\r\n// Set user ID in cookies\r\nexport const setUserId = (userId) => Cookies.set(USER_ID_KEY, userId, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n// Get user ID from cookies\r\nexport const getUserId = () => Cookies.get(USER_ID_KEY);\r\n\r\n// Remove user ID from cookies\r\nexport const removeUserId = () => Cookies.remove(USER_ID_KEY);\r\n\r\n// Set session ID in cookies\r\nexport const setSessionId = (sessionId) =>\r\n    Cookies.set(SESSION_ID_KEY, sessionId, { expires: 7, secure: false, sameSite: 'Strict' });\r\n\r\n// Get session ID from cookies\r\nexport const getSessionId = () => Cookies.get(SESSION_ID_KEY);\r\n\r\n// Remove session ID from cookies\r\nexport const removeSessionId = () => Cookies.remove(SESSION_ID_KEY);\r\n\r\n// Set cart ID in cookies\r\nexport const setCartId = (cartId) => Cookies.set(CART_ID_KEY, cartId, { expires: 7, secure: false, sameSite: 'Strict' });\r\n\r\n// Get cart ID from cookies\r\nexport const getCartId = () => Cookies.get(CART_ID_KEY);\r\n\r\n// Remove cart ID from cookies\r\nexport const removeCartId = () => Cookies.remove(CART_ID_KEY);\r\n\r\n// Set role in cookies\r\nexport const setRole = (role) => Cookies.set(ROLE, role, { expires: 7, secure: false, sameSite: 'Strict' });\r\n\r\n// Get role from cookies\r\nexport const getRole = () => Cookies.get(ROLE);\r\n\r\n// Remove role from cookies\r\nexport const removeRole = () => Cookies.remove(ROLE);\r\n\r\n// Clear all cookies\r\nexport const clearAllCookies = () => {\r\n    Cookies.remove(TOKEN_KEY);\r\n    Cookies.remove(REFRESH_TOKEN_KEY);\r\n    Cookies.remove(USER_ID_KEY);\r\n    Cookies.remove(SESSION_ID_KEY);\r\n    Cookies.remove(CART_ID_KEY);\r\n    Cookies.remove(ROLE);\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,MAAM,YAAY;AAClB,MAAM,oBAAoB;AAC1B,MAAM,cAAc;AACpB,MAAM,iBAAiB;AACvB,MAAM,cAAc;AACpB,MAAM,OAAO;AAGN,MAAM,WAAW,CAAC,QAAU,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,WAAW,OAAO;QAAE,SAAS;QAAG,QAAQ;QAAM,UAAU;IAAS;AAGzG,MAAM,WAAW,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGnC,MAAM,cAAc,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAGzC,MAAM,kBAAkB,CAAC,QAAU,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB,OAAO;QAAE,SAAS;QAAG,QAAQ;QAAM,UAAU;IAAS;AAGxH,MAAM,kBAAkB,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAG1C,MAAM,qBAAqB,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAGhD,MAAM,YAAY,CAAC,SAAW,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,aAAa,QAAQ;QAAE,SAAS;QAAG,QAAQ;QAAM,UAAU;IAAS;AAG9G,MAAM,YAAY,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGpC,MAAM,eAAe,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAG1C,MAAM,eAAe,CAAC,YACzB,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,gBAAgB,WAAW;QAAE,SAAS;QAAG,QAAQ;QAAO,UAAU;IAAS;AAGpF,MAAM,eAAe,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGvC,MAAM,kBAAkB,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAG7C,MAAM,YAAY,CAAC,SAAW,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,aAAa,QAAQ;QAAE,SAAS;QAAG,QAAQ;QAAO,UAAU;IAAS;AAG/G,MAAM,YAAY,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGpC,MAAM,eAAe,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAG1C,MAAM,UAAU,CAAC,OAAS,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,MAAM,MAAM;QAAE,SAAS;QAAG,QAAQ;QAAO,UAAU;IAAS;AAGlG,MAAM,UAAU,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGlC,MAAM,aAAa,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAGxC,MAAM,kBAAkB;IAC3B,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AACnB","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/store/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { userApi } from '../../utils/apiClient.js';\r\n\r\n// Async actions\r\nexport const registerUser = createAsyncThunk(\r\n    'auth/registerUser',\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.register(userData);\r\n            return response;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const verifyOtp = createAsyncThunk(\r\n    'auth/verifyOtp',\r\n    async (otpData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.verifyOtp(otpData);\r\n            return response;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk(\r\n    'auth/loginUser',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.login(credentials);\r\n            return response;\r\n        } catch (error) {\r\n            // Chuẩn hóa thông báo lỗi\r\n            return rejectWithValue({\r\n                status: 'error',\r\n                code: error.response?.data?.code || 400,\r\n                message: error.response?.data?.message === \"User not found\" || \r\n                        error.response?.data?.message === \"Invalid password\"\r\n                    ? \"Tài khoản hoặc mật khẩu không đúng\"\r\n                    : error.response?.data?.message || \"Đã có lỗi xảy ra\",\r\n                data: null\r\n            });\r\n        }\r\n    }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n    'auth/logoutUser',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            await userApi.logout();\r\n            return true;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const getUserInfo = createAsyncThunk(\r\n    'auth/getUserInfo',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.getUserProfile();\r\n            return response; // Trả về dữ liệu người dùng\r\n        } catch (error) {\r\n            // Xử lý lỗi từ apiClient\r\n            console.error('Error fetching user info:', error);\r\n            return rejectWithValue(error.message || 'Failed to fetch user info');\r\n        }\r\n    }\r\n);\r\n\r\nexport const updateProfile = createAsyncThunk(\r\n    'auth/updateProfile',\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.updateUserProfile(userData);\r\n            // Đảm bảo trả về đúng dữ liệu user đã cập nhật\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue({\r\n                message: error.response?.data?.message || 'Không thể cập nhật thông tin.'\r\n            });\r\n        }\r\n    }\r\n);\r\n\r\n// Slice\r\nconst userSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        resetAuthState: (state) => {\r\n            state.user = null;\r\n            state.token = null;\r\n            state.loading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Register\r\n        builder.addCase(registerUser.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(registerUser.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload.user;\r\n        });\r\n        builder.addCase(registerUser.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n        // Verify OTP\r\n        builder.addCase(verifyOtp.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(verifyOtp.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload.user;\r\n        });\r\n        builder.addCase(verifyOtp.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n\r\n        // Login\r\n        builder.addCase(loginUser.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(loginUser.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.accessToken; \r\n        });\r\n        builder.addCase(loginUser.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n\r\n        // Logout\r\n        builder.addCase(logoutUser.pending, (state) => {\r\n            state.loading = true;\r\n        });\r\n        builder.addCase(logoutUser.fulfilled, (state) => {\r\n            state.user = null;\r\n            state.token = null;\r\n            state.loading = false;\r\n        });\r\n        builder.addCase(logoutUser.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n\r\n        // Get User Info\r\n        builder.addCase(getUserInfo.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(getUserInfo.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(getUserInfo.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload || 'Failed to fetch user info';\r\n        });\r\n\r\n        // Update Profile\r\n        builder.addCase(updateProfile.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        // Sửa lại reducer updateProfile.fulfilled\r\n        builder.addCase(updateProfile.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            // Cập nhật state với dữ liệu mới\r\n            state.user = {\r\n                ...state.user,\r\n                ...action.payload\r\n            };\r\n            state.error = null;\r\n        });\r\n        builder.addCase(updateProfile.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n    },\r\n});\r\n\r\n// Export actions và reducer\r\nexport const { resetAuthState } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAGO,MAAM,eAAe,CAAA,GAAA,uLAAA,CAAA,mBAAgB,AAAD,EACvC,qBACA,OAAO,UAAU,EAAE,eAAe,EAAE;IAChC,IAAI;QACA,MAAM,WAAW,MAAM,qHAAA,CAAA,UAAO,CAAC,QAAQ,CAAC;QACxC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,OAAO,gBAAgB,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO;IAChE;AACJ;AAGG,MAAM,YAAY,CAAA,GAAA,uLAAA,CAAA,mBAAgB,AAAD,EACpC,kBACA,OAAO,SAAS,EAAE,eAAe,EAAE;IAC/B,IAAI;QACA,MAAM,WAAW,MAAM,qHAAA,CAAA,UAAO,CAAC,SAAS,CAAC;QACzC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,OAAO,gBAAgB,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO;IAChE;AACJ;AAGG,MAAM,YAAY,CAAA,GAAA,uLAAA,CAAA,mBAAgB,AAAD,EACpC,kBACA,OAAO,aAAa,EAAE,eAAe,EAAE;IACnC,IAAI;QACA,MAAM,WAAW,MAAM,qHAAA,CAAA,UAAO,CAAC,KAAK,CAAC;QACrC,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,0BAA0B;QAC1B,OAAO,gBAAgB;YACnB,QAAQ;YACR,MAAM,MAAM,QAAQ,EAAE,MAAM,QAAQ;YACpC,SAAS,MAAM,QAAQ,EAAE,MAAM,YAAY,oBACnC,MAAM,QAAQ,EAAE,MAAM,YAAY,qBACpC,uCACA,MAAM,QAAQ,EAAE,MAAM,WAAW;YACvC,MAAM;QACV;IACJ;AACJ;AAGG,MAAM,aAAa,CAAA,GAAA,uLAAA,CAAA,mBAAgB,AAAD,EACrC,mBACA,OAAO,GAAG,EAAE,eAAe,EAAE;IACzB,IAAI;QACA,MAAM,qHAAA,CAAA,UAAO,CAAC,MAAM;QACpB,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,OAAO,gBAAgB,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO;IAChE;AACJ;AAGG,MAAM,cAAc,CAAA,GAAA,uLAAA,CAAA,mBAAgB,AAAD,EACtC,oBACA,OAAO,GAAG,EAAE,eAAe,EAAE;IACzB,IAAI;QACA,MAAM,WAAW,MAAM,qHAAA,CAAA,UAAO,CAAC,cAAc;QAC7C,OAAO,UAAU,4BAA4B;IACjD,EAAE,OAAO,OAAO;QACZ,yBAAyB;QACzB,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,OAAO,gBAAgB,MAAM,OAAO,IAAI;IAC5C;AACJ;AAGG,MAAM,gBAAgB,CAAA,GAAA,uLAAA,CAAA,mBAAgB,AAAD,EACxC,sBACA,OAAO,UAAU,EAAE,eAAe,EAAE;IAChC,IAAI;QACA,MAAM,WAAW,MAAM,qHAAA,CAAA,UAAO,CAAC,iBAAiB,CAAC;QACjD,+CAA+C;QAC/C,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,OAAO,gBAAgB;YACnB,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAC9C;IACJ;AACJ;AAGJ,QAAQ;AACR,MAAM,YAAY,CAAA,GAAA,uLAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,MAAM;IACN,cAAc;QACV,MAAM;QACN,OAAO;QACP,SAAS;QACT,OAAO;IACX;IACA,UAAU;QACN,gBAAgB,CAAC;YACb,MAAM,IAAI,GAAG;YACb,MAAM,KAAK,GAAG;YACd,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAClB;IACJ;IACA,eAAe,CAAC;QACZ,WAAW;QACX,QAAQ,OAAO,CAAC,aAAa,OAAO,EAAE,CAAC;YACnC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAClB;QACA,QAAQ,OAAO,CAAC,aAAa,SAAS,EAAE,CAAC,OAAO;YAC5C,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;QACpC;QACA,QAAQ,OAAO,CAAC,aAAa,QAAQ,EAAE,CAAC,OAAO;YAC3C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;QACA,aAAa;QACb,QAAQ,OAAO,CAAC,UAAU,OAAO,EAAE,CAAC;YAChC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAClB;QACA,QAAQ,OAAO,CAAC,UAAU,SAAS,EAAE,CAAC,OAAO;YACzC,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;QACpC;QACA,QAAQ,OAAO,CAAC,UAAU,QAAQ,EAAE,CAAC,OAAO;YACxC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;QAEA,QAAQ;QACR,QAAQ,OAAO,CAAC,UAAU,OAAO,EAAE,CAAC;YAChC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAClB;QACA,QAAQ,OAAO,CAAC,UAAU,SAAS,EAAE,CAAC,OAAO;YACzC,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO,CAAC,IAAI;YAChC,MAAM,KAAK,GAAG,OAAO,OAAO,CAAC,WAAW;QAC5C;QACA,QAAQ,OAAO,CAAC,UAAU,QAAQ,EAAE,CAAC,OAAO;YACxC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;QAEA,SAAS;QACT,QAAQ,OAAO,CAAC,WAAW,OAAO,EAAE,CAAC;YACjC,MAAM,OAAO,GAAG;QACpB;QACA,QAAQ,OAAO,CAAC,WAAW,SAAS,EAAE,CAAC;YACnC,MAAM,IAAI,GAAG;YACb,MAAM,KAAK,GAAG;YACd,MAAM,OAAO,GAAG;QACpB;QACA,QAAQ,OAAO,CAAC,WAAW,QAAQ,EAAE,CAAC,OAAO;YACzC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;QAEA,gBAAgB;QAChB,QAAQ,OAAO,CAAC,YAAY,OAAO,EAAE,CAAC;YAClC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAClB;QACA,QAAQ,OAAO,CAAC,YAAY,SAAS,EAAE,CAAC,OAAO;YAC3C,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC/B;QACA,QAAQ,OAAO,CAAC,YAAY,QAAQ,EAAE,CAAC,OAAO;YAC1C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO,IAAI;QACpC;QAEA,iBAAiB;QACjB,QAAQ,OAAO,CAAC,cAAc,OAAO,EAAE,CAAC;YACpC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAClB;QACA,0CAA0C;QAC1C,QAAQ,OAAO,CAAC,cAAc,SAAS,EAAE,CAAC,OAAO;YAC7C,MAAM,OAAO,GAAG;YAChB,iCAAiC;YACjC,MAAM,IAAI,GAAG;gBACT,GAAG,MAAM,IAAI;gBACb,GAAG,OAAO,OAAO;YACrB;YACA,MAAM,KAAK,GAAG;QAClB;QACA,QAAQ,OAAO,CAAC,cAAc,QAAQ,EAAE,CAAC,OAAO;YAC5C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,OAAO;QAChC;IACJ;AACJ;AAGO,MAAM,EAAE,cAAc,EAAE,GAAG,UAAU,OAAO;uCACpC,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/utils/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    getToken,\r\n    setToken,\r\n    getRefreshToken,\r\n    setRefreshToken,\r\n    getUserId,\r\n    setSessionId,\r\n    getSessionId,\r\n    removeSessionId,\r\n    removeRefreshToken,\r\n    removeUserId,\r\n    removeToken,\r\n    setCartId,\r\n    getCartId,\r\n    removeCartId,\r\n    clearAllCookies,\r\n    removeRole,\r\n    setRole,\r\n} from './storage';\r\nimport { resetAuthState } from '../store/slices/userSlice';\r\n\r\n// https://kltn-1a.onrender.com hihi, http://localhost:5551/v1/api/, https://c918-118-71-16-139.ngrok-free.app\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'https://533d-113-161-54-208.ngrok-free.app/v1/api/',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'ngrok-skip-browser-warning': 'true'\r\n    },\r\n    withCredentials: true\r\n});\r\n\r\n// **Request Interceptor**\r\napiClient.interceptors.request.use(\r\n    async (config) => {\r\n        try {\r\n            // Retrieve access token and session ID from cookies\r\n            const accessToken = getToken();\r\n            const sessionId = getSessionId();\r\n\r\n            // Add Authorization header if token exists\r\n            if (accessToken) {\r\n                config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n            }\r\n\r\n            // Add session ID header if session ID exists\r\n            if (sessionId) {\r\n                config.headers['x-session-id'] = sessionId; // Add session ID to headers\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding headers:', error);\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\nconst MAX_RETRY_COUNT = 5; // Giới hạn số lần retry\r\n\r\n// Hàm delay với backoff logic\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n// Interceptor xử lý response\r\napiClient.interceptors.response.use(\r\n    (response) => {\r\n        console.log('Response received:', response);\r\n\r\n        // Lưu session ID nếu có trong response headers\r\n        const sessionId = response.headers?.['x-session-id'];\r\n        if (sessionId) {\r\n            setSessionId(sessionId); // Lưu vào cookie hoặc storage\r\n            console.log('Session ID saved from response:', sessionId);\r\n        }\r\n\r\n        return response;\r\n    },\r\n    async (error) => {\r\n        const originalRequest = error.config;\r\n\r\n        console.log('Error response:', error.response || 'No response available');\r\n\r\n        // Thêm thuộc tính _retryCount nếu chưa có\r\n        if (!originalRequest._retryCount) {\r\n            originalRequest._retryCount = 0;\r\n        }\r\n\r\n        // Kiểm tra lỗi từ Refresh Token\r\n        if (\r\n            error.response?.status === 403 &&\r\n            error.response?.data?.message === \"Refresh Token không tồn tại\"\r\n        ) {\r\n            console.log('Refresh token does not exist. Logging out...');\r\n            clearAllCookies(); // Xóa tất cả cookies\r\n            store.dispatch(resetAuthState()); // Reset trạng thái auth\r\n            return new Promise(() => { }); // Trả về Promise không lỗi\r\n        }\r\n\r\n        // Dừng retry nếu là request tới /users/refresh-token\r\n        if (originalRequest.url.includes('/users/refresh-token')) {\r\n            console.log('Refresh token request failed. Stopping retries.');\r\n            removeSessionId(); // Xóa session ID\r\n            store.dispatch(resetAuthState()); // Reset trạng thái auth\r\n            return new Promise(() => { }); // Trả về Promise không lỗi\r\n        }\r\n\r\n        // Nếu lỗi 403 và chưa đạt giới hạn retry\r\n        if (error.response?.status === 403 && originalRequest._retryCount < MAX_RETRY_COUNT) {\r\n            originalRequest._retryCount += 1; // Tăng số lần retry\r\n            console.log(`Retrying request (${originalRequest._retryCount}/${MAX_RETRY_COUNT})...`);\r\n\r\n            try {\r\n                // Lấy token mới\r\n                const newAccessToken = await userApi.refreshToken();\r\n                // Gắn token mới vào header\r\n                originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\r\n                return apiClient(originalRequest); // Retry request\r\n            } catch (refreshError) {\r\n                console.log('Error during token refresh:', refreshError);\r\n                return new Promise(() => { }); // Trả về Promise không lỗi\r\n            }\r\n        }\r\n\r\n        // Nếu vượt quá số lần retry\r\n        if (originalRequest._retryCount >= MAX_RETRY_COUNT) {\r\n            console.log('Maximum retry attempts reached.');\r\n            return new Promise(() => { }); // Trả về Promise không lỗi\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n\r\n// **User API**\r\nconst userApi = {\r\n    // Register user\r\n    register: async (userData) => {\r\n        try {\r\n            const response = await apiClient.post('users/register', userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    resend_otp: async (email) => {\r\n        try {\r\n            const response = await apiClient.post('users/resend-otp', { email });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Verify OTP for registration\r\n    verifyOtp: async (otpData) => {\r\n        try {\r\n            const response = await apiClient.post('users/verify-otp', otpData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Login user\r\n    login: async (credentials) => {\r\n        try {\r\n            const response = await apiClient.post('users/login', credentials);\r\n            const { accessToken, refreshToken, user } = response.data.data;\r\n\r\n            if (accessToken && refreshToken) {\r\n                // Lấy cart_id trực tiếp từ user object\r\n                const cart_id = user.cart_id;\r\n\r\n                // Lưu các thông tin cần thiết\r\n\r\n                setRole('');\r\n                setToken(accessToken);\r\n                setRefreshToken(refreshToken);\r\n                removeCartId(); // Xóa cart ID cũ nếu có\r\n                // setCartId(cart_id); // Lưu cart ID mới\r\n            }\r\n\r\n            // Kiểm tra và lưu session ID từ headers\r\n            const sessionId = response.headers['x-session-id'];\r\n            if (sessionId) {\r\n                setSessionId(sessionId);\r\n                console.log('Session ID received and saved during login:', sessionId);\r\n            }\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Logout user\r\n    logout: async () => {\r\n        try {\r\n            const refreshToken = getRefreshToken();\r\n            const userId = getUserId();\r\n            await apiClient.post('users/logout', { refreshToken, userId });\r\n            // Clear all stored tokens and session ID\r\n            removeSessionId();\r\n            removeRefreshToken();\r\n            removeUserId();\r\n            removeSessionId();\r\n            removeToken();\r\n            removeCartId();\r\n            removeRole();\r\n\r\n            return { message: 'Logout successful' };\r\n        } catch (error) {\r\n            throw error.response?.data || 'Logout failed';\r\n        }\r\n    },\r\n\r\n    // Get user profile\r\n    getUserProfile: async () => {\r\n        try {\r\n            const response = await apiClient.get('users/profile');\r\n            return response.data.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch user profile';\r\n        }\r\n    },\r\n\r\n    // Refresh token\r\n    refreshToken: async () => {\r\n        try {\r\n            const get_refreshToken = getRefreshToken();\r\n            const get_userId = getUserId();\r\n            const response = await apiClient.post('users/refresh-token', { get_refreshToken });\r\n\r\n            const { accessToken, refreshToken: newRefreshToken } = response.data.data;\r\n\r\n            if (accessToken && newRefreshToken) {\r\n                setToken(accessToken); // Update access token\r\n                setRefreshToken(newRefreshToken); // Update refresh token\r\n            }\r\n\r\n            return accessToken; // Return the new access token\r\n        } catch (error) {\r\n            throw new Error('Token refresh failed. Please log in again.');\r\n        }\r\n    },\r\n\r\n    // Cập nhật thông tin profile người dùng\r\n    updateUserProfile: async (userData) => {\r\n        try {\r\n            const response = await apiClient.put('users/profile', userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật thông tin người dùng.';\r\n        }\r\n    },\r\n\r\n    /**\r\n * Request password reset OTP\r\n * @param {Object} data - Request data\r\n * @param {string} data.email - User's email address\r\n * @returns {Promise<Object>} - API response\r\n */\r\n    forgotPassword: async (data) => {\r\n        try {\r\n            const response = await apiClient.post('users/forgot-password', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể gửi yêu cầu đặt lại mật khẩu.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Reset password using OTP\r\n     * @param {Object} data - Reset password data\r\n     * @param {string} data.email - User's email\r\n     * @param {string} data.otp - One-time password\r\n     * @param {string} data.newPassword - New password\r\n     * @returns {Promise<Object>} - API response\r\n     */\r\n    resetPassword: async (data) => {\r\n        try {\r\n            const response = await apiClient.post('users/reset-password', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể đặt lại mật khẩu.';\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst adminApi = {\r\n    /**\r\n     * Đăng nhập admin\r\n     * @param {Object} credentials - Dữ liệu đăng nhập (email và password)\r\n     * @returns {Promise<Object>} - Phản hồi từ API\r\n     */\r\n    loginForAdmin: async (credentials) => {\r\n        try {\r\n            const response = await apiClient.post('users/login-admin', credentials);\r\n\r\n            // Lấy token và vai trò từ phản hồi\r\n            const { accessToken, refreshToken, role } = response.data.data;\r\n\r\n            // Lưu token và role\r\n            if (accessToken && refreshToken) {\r\n                setToken(accessToken);\r\n                setRefreshToken(refreshToken);\r\n                setRole(role);\r\n\r\n            }\r\n\r\n            // Lưu session ID nếu có trong header\r\n            const sessionId = response.headers['x-session-id'];\r\n            if (sessionId) {\r\n                setSessionId(sessionId);\r\n            }\r\n\r\n            return { user: response.data.user, role }; // Trả về thông tin người dùng và vai trò\r\n        } catch (error) {\r\n            throw error.response?.data || error.message;\r\n        }\r\n    },\r\n\r\n    // Get all users (Admin only) \r\n    getAllUsers: async (params = {}) => {\r\n        try {\r\n            const { page = 1, limit = 10, email, phone, name } = params;\r\n            const query = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            if (email) query.append('email', email);\r\n            if (phone) query.append('phone', phone);\r\n            if (name) query.append('name', name);\r\n\r\n            const response = await apiClient.get(`users/admin/users?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch users list';\r\n        }\r\n    },\r\n\r\n    // Create new user (Admin only)\r\n    createUser: async (userData) => {\r\n        try {\r\n            const response = await apiClient.post('users/admin/users', userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create user';\r\n        }\r\n    },\r\n\r\n    // Update user (Admin only) \r\n    updateUser: async (userId, userData) => {\r\n        try {\r\n            const response = await apiClient.put(`users/admin/users/${userId}`, userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update user';\r\n        }\r\n    },\r\n\r\n    deleteUser: async (userId) => {\r\n        try {\r\n            const response = await apiClient.delete(`users/admin/users/${userId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete user';\r\n        }\r\n    },\r\n\r\n};\r\n\r\n// **Product API**\r\nconst productApi = {\r\n    // Create a new product\r\n    createProduct: async (productData) => {\r\n        const response = await apiClient.post('products/', productData);\r\n        return response.data;\r\n    },\r\n\r\n    // Get all products\r\n    getProducts: async () => {\r\n        const response = await apiClient.get('products');\r\n        return response.data.data;\r\n    },\r\n\r\n    // Get product details by slug\r\n    getProductDetail: async (slug) => {\r\n        const response = await apiClient.get(`products/${slug}`);\r\n        return response.data.data;\r\n    },\r\n\r\n    // Update product by slug\r\n    updateProduct: async (slug, productData) => {\r\n        const response = await apiClient.put(`products/${slug}`, productData);\r\n        return response.data;\r\n    },\r\n\r\n    // Delete product by slug\r\n    deleteProduct: async (slug) => {\r\n        const response = await apiClient.delete(`products/${slug}`);\r\n        return response.data;\r\n    },\r\n\r\n    // Get products with pagination\r\n    getProductsByPagination: async (params = {}) => {\r\n        try {\r\n            const {\r\n                page = 1,\r\n                limit = 20,\r\n                name,\r\n                categories,\r\n                colorIds,\r\n                sizes,\r\n                priceRange,\r\n                sort = 'newest'\r\n            } = params;\r\n\r\n            // Xây dựng query parameters\r\n            const queryParams = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            // Thêm các filter tùy chọn\r\n            if (name) queryParams.append('name', name);\r\n            if (categories) queryParams.append('categories', categories);\r\n            if (colorIds) queryParams.append('colors', colorIds);\r\n            if (sizes) queryParams.append('sizes', sizes);\r\n            if (priceRange) queryParams.append('priceRange', priceRange);\r\n            if (sort) queryParams.append('sort', sort);\r\n\r\n            console.log('API call to:', `products/pagination?${queryParams.toString()}`);\r\n\r\n            const response = await apiClient.get(`products/pagination?${queryParams.toString()}`);\r\n            console.log('API response:', response.data);\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error.response?.data || 'Failed to fetch products.';\r\n        }\r\n    },\r\n\r\n    // Get new products with pagination\r\n    getNewProductsByPagination: async (page, limit, sort, priceRange, colorIds) => {\r\n        try {\r\n            const query = new URLSearchParams({\r\n                page,\r\n                limit,\r\n                sort,\r\n                priceRange: priceRange || '',\r\n                colorIds: colorIds || '',\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products/new?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching new products:', error);\r\n            throw error.response?.data || 'Failed to fetch new products.';\r\n        }\r\n    },\r\n\r\n    // Get featured products with pagination\r\n    getFeaturedProductsByPagination: async (page, limit, sort, priceRange, colorIds) => {\r\n        try {\r\n            const query = new URLSearchParams({\r\n                page,\r\n                limit,\r\n                sort,\r\n                priceRange: priceRange || '',\r\n                colorIds: colorIds || '',\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products/featured?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching featured products:', error);\r\n            throw error.response?.data || 'Failed to fetch featured products.';\r\n        }\r\n    },\r\n\r\n    searchProductsByNameAndColor: async (keyword, options = {}) => {\r\n        try {\r\n            const {\r\n                page = 1,\r\n                limit = 20,\r\n                sort = 'newest'\r\n            } = options;\r\n\r\n            const query = new URLSearchParams({\r\n                keyword: keyword || '',\r\n                page: String(page),\r\n                limit: String(limit),\r\n                sort\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products/search/name-color?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error searching products:', error);\r\n            throw error.response?.data || 'Không thể tìm kiếm sản phẩm.';\r\n        }\r\n    },\r\n\r\n};\r\n\r\n\r\nconst cartApi = {\r\n    // Tạo giỏ hàng cho khách\r\n    createCartForGuest: async (cartData) => {\r\n        try {\r\n            const response = await apiClient.post('carts/guest', cartData);\r\n            const { id } = response.data.data;\r\n            if (id) {\r\n                console.log('Cart ID:', id);\r\n                setCartId(id); // Lưu cart ID vào cookie hoặc storage\r\n            }\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create cart for guest.';\r\n        }\r\n    },\r\n\r\n    // Tạo hoặc lấy giỏ hàng cho người dùng đã đăng nhập\r\n    createCartForUser: async () => {\r\n        try {\r\n            const response = await apiClient.post('carts/user');\r\n            const { id } = response.data.data;\r\n            if (id) {\r\n                console.log('Cart ID:', id);\r\n                setCartId(id); // Lưu cart ID vào cookie hoặc storage\r\n            }\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create or retrieve cart for user.';\r\n        }\r\n    },\r\n\r\n    // Lấy chi tiết giỏ hàng theo ID\r\n    getCartById: async (cartId) => {\r\n        try {\r\n            const response = await apiClient.get(`carts/${cartId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch cart details.';\r\n        }\r\n    },\r\n\r\n    // Thêm sản phẩm vào giỏ hàng\r\n    addItemToCart: async (cartId, itemData) => {\r\n        try {\r\n            const response = await apiClient.post(`carts/${cartId}/items`, itemData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to add item to cart.';\r\n        }\r\n    },\r\n\r\n\r\n    // Xóa sản phẩm khỏi giỏ hàng\r\n    removeCartItem: async (itemId) => {\r\n        try {\r\n            const response = await apiClient.delete(`carts/items/${itemId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to remove item from cart.';\r\n        }\r\n    },\r\n\r\n    // Lấy tất cả sản phẩm trong giỏ hàng\r\n    getCartItems: async (cartId) => {\r\n        try {\r\n            const response = await apiClient.get(`carts/${cartId}/items`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch cart items.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật số lượng sản phẩm trong giỏ hàng\r\n    updateCartItemQuantity: async (itemId, quantity) => {\r\n        try {\r\n            const response = await apiClient.put(`carts/item/${itemId}`, { quantity });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update cart item quantity.';\r\n        }\r\n    },\r\n};\r\n\r\nconst reviewApi = {\r\n    // Tạo mới một review\r\n    createReview: async (reviewData) => {\r\n        try {\r\n            const response = await apiClient.post('reviews/', reviewData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create review.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách review của một sản phẩm\r\n    getReviewsByProduct: async (productId, page, limit) => {\r\n        try {\r\n            const response = await apiClient.get(`reviews/product/${productId}?page=${page}&limit=${limit}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch reviews.';\r\n        }\r\n    },\r\n\r\n    // Lấy điểm trung bình của một sản phẩm\r\n    getAverageRating: async (productId) => {\r\n        try {\r\n            const response = await apiClient.get(`reviews/product/${productId}/average-rating`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch average rating.';\r\n        }\r\n    },\r\n\r\n    // Xóa một review\r\n    deleteReview: async (reviewId) => {\r\n        try {\r\n            const response = await apiClient.delete(`reviews/${reviewId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete review.';\r\n        }\r\n    },\r\n};\r\n\r\nconst productsByCategoryApi = {\r\n    // Fetch all products by category\r\n    getProductsByCategory: async (categoryId, page, limit, sort, priceRange, colorIds) => {\r\n        try {\r\n            const query = new URLSearchParams({\r\n                page,\r\n                limit,\r\n                sort,\r\n                priceRange: priceRange || '',\r\n                colorIds: colorIds || '',\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products-by-category/${categoryId}?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch products by category.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật danh mục cho sản phẩm\r\n    updateProductCategories: async (productId, categoryIds) => {\r\n        try {\r\n            // Validate input\r\n            if (!Array.isArray(categoryIds)) {\r\n                throw new Error('categoryIds phải là một mảng');\r\n            }\r\n\r\n            if (categoryIds.length === 0) {\r\n                throw new Error('Phải có ít nhất một danh mục');\r\n            }\r\n\r\n            const response = await apiClient.put(\r\n                `products-by-category/product/${productId}/categories`,\r\n                { categoryIds }\r\n            );\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            // Xử lý các loại lỗi cụ thể\r\n            if (error.response) {\r\n                switch (error.response.status) {\r\n                    case 400:\r\n                        throw new Error(error.response.data.message || 'Dữ liệu đầu vào không hợp lệ');\r\n                    case 404:\r\n                        throw new Error(error.response.data.message || 'Không tìm thấy sản phẩm hoặc danh mục');\r\n                    case 500:\r\n                        throw new Error(error.response.data.message || 'Lỗi máy chủ khi cập nhật danh mục sản phẩm');\r\n                    default:\r\n                        throw new Error(error.response.data.message || 'Lỗi không xác định');\r\n                }\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst colorsApi = {\r\n    // Fetch all colors\r\n    getColors: async () => {\r\n        try {\r\n            const response = await apiClient.get('colors');\r\n            return response.data.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch colors.';\r\n        }\r\n    },\r\n}\r\n\r\nconst indexApi = {\r\n    getNewProducts: async (page, limit) => {\r\n        const response = await apiClient.get('/products/news', {\r\n            params: { page, limit },\r\n        });\r\n        return response.data;\r\n    },\r\n    getFeaturedProducts: async (page, limit) => {\r\n        const response = await apiClient.get('/products/featureds', {\r\n            params: { page, limit },\r\n        });\r\n        return response.data;\r\n    },\r\n};\r\n\r\nconst orderApi = {\r\n    /**\r\n     * Create a new order\r\n     * @param {Object} orderData - Order details\r\n     * @returns {Promise<Object>} - Created order response\r\n     */\r\n    createOrder: async (orderData) => {\r\n        try {\r\n            const response = await apiClient.post('orders', orderData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create order.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get an order by ID\r\n     * @param {number} orderId - ID of the order\r\n     * @returns {Promise<Object>} - Order details\r\n     */\r\n    getOrderById: async (orderId) => {\r\n        try {\r\n            const response = await apiClient.get(`orders/${orderId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch order details.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update order status\r\n     * @param {number} orderId - ID of the order\r\n     * @param {string} status - New status ('pending', 'completed', 'canceled', etc.)\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    updateOrderStatus: async (orderId, status) => {\r\n        try {\r\n            const response = await apiClient.patch(`orders/${orderId}/status`, { status });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update order status.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Cancel expired orders\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    cancelExpiredOrders: async () => {\r\n        try {\r\n            const response = await apiClient.post('orders/cancel-expired');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to cancel expired orders.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Complete an order\r\n     * @param {number} orderId - ID of the order\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    completeOrder: async (orderId) => {\r\n        try {\r\n            const response = await apiClient.post(`orders/${orderId}/complete`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to complete order.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Delete an order by ID\r\n     * @param {number} orderId - ID of the order\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    deleteOrder: async (orderId) => {\r\n        try {\r\n            const response = await apiClient.delete(`orders/${orderId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete order.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get orders by user with pagination\r\n     * @param {Object} params - Query parameters\r\n     * @param {number} params.page - Page number\r\n     * @param {number} params.limit - Items per page\r\n     * @returns {Promise<Object>} - Paginated user orders\r\n     */\r\n    getOrdersByUser: async ({ page = 1, limit = 10 }) => {\r\n        try {\r\n            const response = await apiClient.get(`orders/user`, {\r\n                params: { page, limit }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách đơn hàng.';\r\n        }\r\n    },\r\n\r\n    getAllOrders: async ({\r\n        page = 1,\r\n        limit = 10,\r\n        status,\r\n        startDate,\r\n        endDate,\r\n        orderId,           // Thêm filter mã đơn hàng\r\n        customerName,      // Thêm filter tên khách hàng  \r\n        customerEmail,     // Thêm filter email\r\n        customerPhone      // Thêm filter số điện thoại\r\n    }) => {\r\n        try {\r\n            // Tạo query params\r\n            const params = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            // Thêm các filter hiện tại\r\n            if (status) {\r\n                params.append('status', status);\r\n            }\r\n            if (startDate) {\r\n                params.append('startDate', startDate);\r\n            }\r\n            if (endDate) {\r\n                params.append('endDate', endDate);\r\n            }\r\n\r\n            // Thêm các filter mới\r\n            if (orderId) {\r\n                params.append('orderId', orderId);\r\n            }\r\n            if (customerName) {\r\n                params.append('customerName', customerName);\r\n            }\r\n            if (customerEmail) {\r\n                params.append('customerEmail', customerEmail);\r\n            }\r\n            if (customerPhone) {\r\n                params.append('customerPhone', customerPhone);\r\n            }\r\n\r\n            const response = await apiClient.get(`orders?${params}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách đơn hàng.';\r\n        }\r\n    },\r\n\r\n    /**\r\n * Gửi email xác nhận đơn hàng\r\n * @param {Object} data - Dữ liệu đơn hàng\r\n * @param {Array} data.checkoutItems - Danh sách sản phẩm đặt hàng\r\n * @param {Object} data.orderDetails - Chi tiết đơn hàng\r\n * @returns {Promise<Object>} - Kết quả gửi email\r\n */\r\n    sendOrderConfirmation: async (data) => {\r\n        try {\r\n            const response = await apiClient.post('orders/send-order-confirmation', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể gửi email xác nhận đơn hàng.';\r\n        }\r\n    },\r\n};\r\n\r\nconst paymentApi = {\r\n    /**\r\n     * Tạo thanh toán qua PayOS\r\n     * @param {Object} paymentData - Dữ liệu thanh toán\r\n     * @returns {Promise<Object>} - Thông tin thanh toán\r\n     */\r\n    createPayOSPayment: async (paymentData) => {\r\n        try {\r\n            const response = await apiClient.post('payments/payos', paymentData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo thanh toán PayOS.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Tạo thanh toán COD (Cash On Delivery)\r\n     * @param {Object} codData - Dữ liệu thanh toán COD\r\n     * @returns {Promise<Object>} - Thông tin thanh toán COD\r\n     */\r\n    createCODPayment: async (codData) => {\r\n        try {\r\n            const response = await apiClient.post('payments/cod', codData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo thanh toán COD.';\r\n        }\r\n    },\r\n\r\n    updatePaymentStatus: async (statusData) => {\r\n        try {\r\n            const response = await apiClient.post('payments/payos-webhook', statusData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật trạng thái thanh toán.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Cập nhật trạng thái thanh toán\r\n     * @param {Object} statusData - Dữ liệu cập nhật trạng thái\r\n     * @param {string} statusData.orderId - ID đơn hàng\r\n     * @param {string} statusData.paymentMethod - Phương thức thanh toán ('payos' hoặc 'cash_on_delivery')\r\n     * @param {string} statusData.paymentStatus - Trạng thái thanh toán ('pending', 'processing', 'paid', 'cancelled')\r\n     * @returns {Promise<Object>} - Kết quả cập nhật\r\n     */\r\n    updatePaymentMethodStatus: async (statusData) => {\r\n        try {\r\n            const response = await apiClient.put('payments/update-status', statusData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật trạng thái thanh toán.';\r\n        }\r\n    }\r\n};\r\n\r\nconst stockApi = {\r\n    // Lấy thông tin tồn kho\r\n    getProductStocks: async () => {\r\n        try {\r\n            const response = await apiClient.get('product-stocks');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch product stocks.';\r\n        }\r\n    },\r\n\r\n    updateStock: async (stockId, stockData) => {\r\n        try {\r\n            const response = await apiClient.put(`product-stocks/${stockId}`, stockData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update stock.';\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst carrierApi = {\r\n    // Tạo nhà vận chuyển mới\r\n    createCarrier: async (carrierData) => {\r\n        try {\r\n            const response = await apiClient.post('carriers', carrierData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create carrier.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách nhà vận chuyển\r\n    getCarriers: async (query = {}) => {\r\n        try {\r\n            const { page = 1, limit = 10 } = query;\r\n            const queryString = new URLSearchParams({ page, limit }).toString();\r\n            const response = await apiClient.get(`carriers?${queryString}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch carriers.';\r\n        }\r\n    },\r\n\r\n    // Lấy chi tiết nhà vận chuyển\r\n    getCarrierById: async (id) => {\r\n        try {\r\n            const response = await apiClient.get(`carriers/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch carrier details.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật thông tin nhà vận chuyển\r\n    updateCarrier: async (id, carrierData) => {\r\n        try {\r\n            const response = await apiClient.put(`carriers/${id}`, carrierData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update carrier.';\r\n        }\r\n    },\r\n\r\n    // Xóa nhà vận chuyển\r\n    deleteCarrier: async (id) => {\r\n        try {\r\n            const response = await apiClient.delete(`carriers/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete carrier.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật trạng thái nhà vận chuyển\r\n    updateCarrierStatus: async (id, status) => {\r\n        try {\r\n            const response = await apiClient.patch(`carriers/${id}/status`, { status });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update carrier status.';\r\n        }\r\n    }\r\n};\r\n\r\nconst addressApi = {\r\n    // Lấy danh sách địa chỉ của người dùng\r\n    getAddresses: async () => {\r\n        try {\r\n            const response = await apiClient.get('addresses');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách địa chỉ.';\r\n        }\r\n    },\r\n\r\n    // Tạo địa chỉ mới\r\n    createAddress: async (addressData) => {\r\n        try {\r\n            const response = await apiClient.post('addresses', addressData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo địa chỉ mới.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật địa chỉ\r\n    updateAddress: async (addressId, addressData) => {\r\n        try {\r\n            const response = await apiClient.put(`addresses/${addressId}`, addressData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật địa chỉ.';\r\n        }\r\n    },\r\n\r\n    // Xóa địa chỉ\r\n    deleteAddress: async (addressId) => {\r\n        try {\r\n            const response = await apiClient.delete(`addresses/${addressId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể xóa địa chỉ.';\r\n        }\r\n    },\r\n\r\n    // Đặt địa chỉ làm mặc định\r\n    setDefaultAddress: async (addressId) => {\r\n        try {\r\n            const response = await apiClient.put(`addresses/${addressId}/default`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể đặt địa chỉ mặc định.';\r\n        }\r\n    }\r\n};\r\n\r\nconst favoriteApi = {\r\n    // Kiểm tra trạng thái yêu thích của sản phẩm\r\n    checkFavoriteStatus: async (productId) => {\r\n        try {\r\n            const response = await apiClient.get(`favorites/products/${productId}/favorite`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể kiểm tra trạng thái yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách sản phẩm yêu thích\r\n    getFavorites: async (page = 1, limit = 10) => {\r\n        try {\r\n            const response = await apiClient.get('favorites/favorites', {\r\n                params: { page, limit }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Thêm sản phẩm vào danh sách yêu thích\r\n    addToFavorite: async (productId) => {\r\n        try {\r\n            const response = await apiClient.post(`favorites/products/${productId}/favorite`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể thêm vào yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Xóa sản phẩm khỏi danh sách yêu thích\r\n    removeFromFavorite: async (productId) => {\r\n        try {\r\n            const response = await apiClient.delete(`favorites/products/${productId}/favorite`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể xóa khỏi yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Chuyển danh sách yêu thích từ session sang tài khoản\r\n    transferFavorites: async () => {\r\n        try {\r\n            const response = await apiClient.post('favorites/favorites/transfer');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể chuyển danh sách yêu thích.';\r\n        }\r\n    }\r\n};\r\n\r\nconst orderTrackingApi = {\r\n    /**\r\n     * Tra cứu thông tin đơn hàng\r\n     * @param {string} orderId - Mã đơn hàng\r\n     * @param {string} identifier - Email hoặc số điện thoại người đặt\r\n     * @returns {Promise<Object>} - Thông tin đơn hàng\r\n     */\r\n    trackOrder: async (orderId, identifier) => {\r\n        try {\r\n            const response = await apiClient.get(`order-tracking/${orderId}`, {\r\n                params: { identifier }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tra cứu thông tin đơn hàng.';\r\n        }\r\n    }\r\n};\r\n\r\nconst couponApi = {\r\n    // Tạo mã giảm giá mới (Admin)\r\n    createCoupon: async (couponData) => {\r\n        try {\r\n            const response = await apiClient.post('coupons', couponData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách mã giảm giá (Admin)\r\n    getAllCoupons: async (params = {}) => {\r\n        try {\r\n            const {\r\n                page = 1,\r\n                limit = 10,\r\n                search,\r\n                is_active,\r\n                startDate,\r\n                endDate,\r\n                minAmount,\r\n                maxAmount,\r\n                sortBy = 'created_at',\r\n                sortOrder = 'DESC'\r\n            } = params;\r\n\r\n            // Xây dựng query parameters\r\n            const query = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            // Thêm các filter tùy chọn\r\n            if (search) {\r\n                query.append('search', search);\r\n            }\r\n\r\n            if (typeof is_active !== 'undefined') {\r\n                query.append('is_active', is_active);\r\n            }\r\n\r\n            if (startDate) {\r\n                query.append('startDate', startDate);\r\n            }\r\n\r\n            if (endDate) {\r\n                query.append('endDate', endDate);\r\n            }\r\n\r\n            if (minAmount) {\r\n                query.append('minAmount', minAmount);\r\n            }\r\n\r\n            if (maxAmount) {\r\n                query.append('maxAmount', maxAmount);\r\n            }\r\n\r\n            if (sortBy) {\r\n                query.append('sortBy', sortBy);\r\n            }\r\n\r\n            if (sortOrder) {\r\n                query.append('sortOrder', sortOrder);\r\n            }\r\n\r\n            const response = await apiClient.get(`coupons?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Lấy chi tiết mã giảm giá (Admin)\r\n    getCouponById: async (id) => {\r\n        try {\r\n            const response = await apiClient.get(`coupons/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy thông tin mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Kiểm tra mã giảm giá (Public)\r\n    validateCoupon: async (code, orderAmount) => {\r\n        try {\r\n            const response = await apiClient.post('coupons/validate', { code, orderAmount });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Mã giảm giá không hợp lệ.';\r\n        }\r\n    },\r\n\r\n    // Áp dụng mã giảm giá (Public)\r\n    applyCoupon: async (code, orderAmount) => {\r\n        try {\r\n            const response = await apiClient.post('coupons/apply', { code, orderAmount });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể áp dụng mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật mã giảm giá (Admin)\r\n    updateCoupon: async (id, updateData) => {\r\n        try {\r\n            const response = await apiClient.put(`coupons/${id}`, updateData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Xóa mã giảm giá (Admin)\r\n    deleteCoupon: async (id) => {\r\n        try {\r\n            const response = await apiClient.delete(`coupons/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể xóa mã giảm giá.';\r\n        }\r\n    }\r\n};\r\n\r\nconst revenueApi = {\r\n    // Lấy thống kê doanh thu\r\n    getRevenueStats: async (filters = {}) => {\r\n        try {\r\n            console.log('Calling getRevenueStats API...');\r\n            const queryParams = new URLSearchParams();\r\n            if (filters.startDate) {\r\n                queryParams.append('startDate', filters.startDate);\r\n            }\r\n            if (filters.endDate) {\r\n                queryParams.append('endDate', filters.endDate);\r\n            }\r\n\r\n            const response = await apiClient.get(`revenue/stats?${queryParams}`);\r\n            console.log('Raw API response:', response);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('Error in getRevenueStats:', error);\r\n            // Ném ra error object đầy đủ thay vì chỉ message\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Lấy doanh thu theo ngày\r\n    getDailyRevenue: async (date) => {\r\n        try {\r\n            const response = await apiClient.get('revenue/daily', {\r\n                params: { date }\r\n            });\r\n            return response;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy doanh thu theo ngày.';\r\n        }\r\n    },\r\n\r\n    // Lấy doanh thu theo tháng\r\n    getMonthlyRevenue: async (year, month) => {\r\n        try {\r\n            const response = await apiClient.get('revenue/monthly', {\r\n                params: { year, month }\r\n            });\r\n            return response;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy doanh thu theo tháng.';\r\n        }\r\n    }\r\n};\r\n\r\nconst invoiceApi = {\r\n    // Tạo hóa đơn mới từ đơn hàng đã hoàn thành\r\n    // POST /api/invoices/create\r\n    createInvoice: (orderData) => apiClient.post('/invoices/create', orderData),\r\n\r\n    // Lấy chi tiết hóa đơn theo ID\r\n    // GET /api/invoices/:id\r\n    getInvoiceById: (id) => apiClient.get(`/invoices/${id}`),\r\n\r\n    // Lấy tất cả hóa đơn với phân trang\r\n    // GET /api/invoices?page=1&limit=10\r\n    getAllInvoices: (params) => apiClient.get('/invoices', { params }),\r\n\r\n    // Tìm kiếm hóa đơn\r\n    // GET /api/invoices/search?invoiceNumber=IV&page=1&limit=10\r\n    searchInvoices: (params) => apiClient.get('/invoices/search', { params }),\r\n\r\n    // Tạo và tải file PDF cho hóa đơn\r\n    // GET /api/invoices/:id/pdf\r\n    generateInvoicePDF: async (id, orderId) => {\r\n        try {\r\n            const response = await apiClient.get(`/invoices/${id}/pdf/${orderId}`, {\r\n                responseType: 'blob'\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || error.message;\r\n        }\r\n    }\r\n};\r\n\r\nconst categoriesApi = {\r\n    // Lấy tất cả danh mục\r\n    getAllCategories: async () => {\r\n        try {\r\n            const response = await apiClient.get('categories');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách danh mục.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh mục theo ID\r\n    getCategoryById: async (id) => {\r\n        try {\r\n            const response = await apiClient.get(`categories/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy thông tin danh mục.';\r\n        }\r\n    },\r\n\r\n    // Tạo danh mục mới (Admin only)\r\n    createCategory: async (categoryData) => {\r\n        try {\r\n            const response = await apiClient.post('categories', categoryData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo danh mục mới.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật danh mục (Admin only)\r\n    updateCategory: async (id, categoryData) => {\r\n        try {\r\n            const response = await apiClient.put(`categories/${id}`, categoryData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật danh mục.';\r\n        }\r\n    },\r\n\r\n    // Xóa danh mục (Admin only) \r\n    deleteCategory: async (id) => {\r\n        try {\r\n            const response = await apiClient.delete(`categories/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể xóa danh mục.';\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// export { apiClient, userApi, productApi, cartApi, reviewApi, productsByCategoryApi, colorsApi, indexApi, adminApi, orderApi, paymentApi, stockApi, carrierApi, addressApi, favoriteApi, orderTrackingApi, couponApi };\r\nexport {\r\n    apiClient,\r\n    userApi,\r\n    productApi,\r\n    cartApi,\r\n    reviewApi,\r\n    productsByCategoryApi,\r\n    colorsApi,\r\n    indexApi,\r\n    adminApi,\r\n    orderApi,\r\n    paymentApi,\r\n    stockApi,\r\n    carrierApi,\r\n    addressApi,\r\n    favoriteApi,\r\n    orderTrackingApi,\r\n    couponApi,\r\n    revenueApi,\r\n    invoiceApi,\r\n    categoriesApi\r\n};\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2007, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/pages/payment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport Link from 'next/link';\r\nimport { paymentApi } from '../utils/apiClient';\r\nimport {\r\n    CurrencyDollarIcon,\r\n    QrCodeIcon\r\n} from '@heroicons/react/24/outline'\r\n\r\n\r\nconst PaymentPage = () => {\r\n    const router = useRouter();\r\n    const [order, setOrder] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [paymentMethod, setPaymentMethod] = useState(\"\"); // cod hoặc vietqr\r\n    const [timeLeft, setTimeLeft] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const initializeOrder = () => {\r\n            try {\r\n                const storedOrder = localStorage.getItem('orderDetails');\r\n                if (storedOrder) {\r\n                    const parsedOrder = JSON.parse(storedOrder);\r\n                    if (parsedOrder && parsedOrder.data) {\r\n                        setOrder({\r\n                            id: parsedOrder.data.order_id,\r\n                            payment_method: \"\",\r\n                            final_price: parsedOrder.data.amount,\r\n                            email: parsedOrder.data.email,\r\n                            // Thêm các trường mới\r\n                            shipping_fee: parsedOrder.data.shipping_fee,\r\n                            discount_amount: parsedOrder.data.discount_amount,\r\n                            subtotal: parsedOrder.data.amount, // giá trước khi tính ship và giảm giá\r\n                            expires_at: parsedOrder.data.expires_at,\r\n                            formData: parsedOrder.data.formData,\r\n                        });\r\n                    } else {\r\n                        setError(\"Không tìm thấy thông tin đơn hàng\");\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('❌ Error:', error);\r\n                setError(\"Lỗi khi đọc thông tin đơn hàng\");\r\n            }\r\n        };\r\n\r\n        if (router.isReady) {\r\n            initializeOrder();\r\n        }\r\n    }, [router.isReady]);\r\n\r\n    const calculateTimeLeft = (expiryTime) => {\r\n        const now = new Date().getTime();\r\n        const expiryDate = new Date(expiryTime).getTime();\r\n        const difference = expiryDate - now;\r\n\r\n        if (difference <= 0) {\r\n            return null;\r\n        }\r\n\r\n        const minutes = Math.floor((difference / 1000 / 60) % 60);\r\n        const seconds = Math.floor((difference / 1000) % 60);\r\n\r\n        return {\r\n            minutes: minutes,\r\n            seconds: seconds\r\n        };\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (!order?.expires_at) return;\r\n\r\n        const timer = setInterval(() => {\r\n            const timeLeft = calculateTimeLeft(order.expires_at);\r\n\r\n            if (!timeLeft) {\r\n                clearInterval(timer);\r\n                localStorage.removeItem('orderDetails');\r\n                localStorage.removeItem('checkoutItems');\r\n                router.push('/cart');\r\n                return;\r\n            }\r\n\r\n            setTimeLeft(timeLeft);\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [order?.expires_at, router]);\r\n\r\n\r\n    const handlePaymentMethodSelect = (method) => {\r\n        setPaymentMethod(method);\r\n        setError(\"\");\r\n    };\r\n\r\n    const handleCompletePayment = async () => {\r\n        if (!paymentMethod) {\r\n            setError(\"Vui lòng chọn phương thức thanh toán\");\r\n            return;\r\n        }\r\n\r\n        if (paymentMethod === \"cod\") {\r\n            try {\r\n                setLoading(true);\r\n                const result = await paymentApi.createCODPayment({\r\n                    order_id: order.id,\r\n                    amount: order.final_price,\r\n                    email: order.email\r\n                });\r\n\r\n                // Lưu thông tin thanh toán\r\n                localStorage.setItem('paymentInfo', JSON.stringify({\r\n                    orderId: order.id,\r\n                    paymentId: result.payment_id,\r\n                    amount: result.amount,\r\n                    method: result.payment_method\r\n                }));\r\n\r\n                // Chuyển hướng với query params\r\n                router.push({\r\n                    pathname: '/payment/success',\r\n                    query: {\r\n                        code: '00',\r\n                        orderCode: order.id,\r\n                        status: 'PAID',\r\n                        method: 'cod'\r\n                    }\r\n                });\r\n\r\n            } catch (error) {\r\n                console.error('❌ Lỗi thanh toán COD:', error);\r\n                router.push({\r\n                    pathname: '/payment/success',\r\n                    query: {\r\n                        code: '99',\r\n                        orderCode: order.id,\r\n                        status: 'CANCELLED',\r\n                        method: 'cod'\r\n                    }\r\n                });\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        } else if (paymentMethod === \"vietqr\") {\r\n            handleVietQRPayment();\r\n        }\r\n    };\r\n\r\n\r\n    const handleVietQRPayment = async () => {\r\n        if (!order) {\r\n            setError(\"Không tìm thấy thông tin đơn hàng.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(\"\");\r\n\r\n        try {\r\n            const paymentData = await paymentApi.createPayOSPayment({\r\n                order_id: order.id,\r\n                amount: order.final_price,\r\n                email: order.email\r\n            });\r\n\r\n            localStorage.setItem('paymentInfo', JSON.stringify({\r\n                orderCode: paymentData.orderCode,\r\n                paymentLinkId: paymentData.paymentLinkId,\r\n                amount: paymentData.amount,\r\n                status: paymentData.status\r\n            }));\r\n\r\n            if (!paymentData.checkoutUrl) {\r\n                throw new Error('URL thanh toán không hợp lệ');\r\n            }\r\n\r\n            window.location.href = paymentData.checkoutUrl.checkoutUrl;\r\n\r\n        } catch (error) {\r\n            console.error('❌ Lỗi thanh toán:', error);\r\n            setError(\"Thanh toán thất bại, vui lòng thử lại!\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (!router.isReady) {\r\n        return <div>Đang tải...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-6 grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Phần bên trái - Thông tin đơn hàng và phương thức thanh toán */}\r\n            <div className=\"bg-white p-6 rounded\">\r\n                <div className=\"flex justify-start mb-2\">\r\n                    <div className=\"flex items-center\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            className=\"h-5 w-5 text-gray-600 mr-1\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke=\"currentColor\"\r\n                        >\r\n                            <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth={2}\r\n                                d=\"M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z\"\r\n                            />\r\n                        </svg>\r\n                        <h2 className=\"text-lg font-medium\">\r\n                            <span className=\"text-gray-800\">Fashion</span>\r\n                            <span className=\"text-gray-800\">Store</span>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center text-sm text-gray-600 mb-6\">\r\n                    <Link href=\"/cart\" className=\"hover:text-gray-900\">\r\n                        Giỏ hàng\r\n                    </Link>\r\n                    <span className=\"mx-2\">/</span>\r\n                    <Link href=\"/checkout\" className=\"hover:text-gray-900\">\r\n                        Thông tin giao hàng\r\n                    </Link>\r\n                    <span className=\"mx-2\">/</span>\r\n                    <span className=\"text-gray-900\">Thanh toán</span>\r\n                </div>\r\n                <h1 className=\"text-2xl font-bold mb-6\">Thanh toán đơn hàng</h1>\r\n\r\n                {error && (\r\n                    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n                        <p>{error}</p>\r\n                    </div>\r\n                )}\r\n\r\n                {order && (\r\n                    <div className=\" p-4 rounded mb-6\">\r\n                        <h2 className=\"font-semibold mb-2\">Thông tin đơn hàng:</h2>\r\n                        <p className=\"mb-1\">Mã đơn hàng: {order.id}</p>\r\n\r\n                        <div className=\"border-t border-gray-300 my-3\"></div>\r\n\r\n                        <h3 className=\"font-semibold mb-2\">Thông tin người nhận:</h3>\r\n                        <p className=\"mb-1\">Họ tên: {order.formData.name}</p>\r\n                        <p className=\"mb-1\">Email: {order.formData.email}</p>\r\n                        <p className=\"mb-1\">Số điện thoại: {order.formData.phone}</p>\r\n\r\n                        <div className=\"border-t border-gray-300 my-3\"></div>\r\n\r\n                        <h3 className=\"font-semibold mb-2\">Địa chỉ giao hàng:</h3>\r\n                        <p className=\"mb-1\">Đường: {order.formData.street}</p>\r\n                        <p className=\"mb-1\">Phường/Xã: {order.formData.ward}</p>\r\n                        <p className=\"mb-1\">Quận/Huyện: {order.formData.district}</p>\r\n                        <p className=\"mb-1\">Tỉnh/Thành phố: {order.formData.city}</p>\r\n                        <p className=\"mb-1\">Quốc gia: {order.formData.country}</p>\r\n\r\n                        {/* Bộ đếm ngược */}\r\n                        {timeLeft && (\r\n                            <div className=\"mt-3 pt-3 border-t border-gray-300\">\r\n                                <p className=\"text-red-600 font-semibold\">\r\n                                    Thời gian còn lại để thanh toán: {timeLeft.minutes}:{timeLeft.seconds < 10 ? `0${timeLeft.seconds}` : timeLeft.seconds}\r\n                                </p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n\r\n\r\n                <div className=\"space-y-4\">\r\n                    <h2 className=\"text-xl font-semibold\">Chọn phương thức thanh toán:</h2>\r\n\r\n                    <div className=\"space-y-3\">\r\n                        <div\r\n                            className={`p-4 border rounded cursor-pointer ${paymentMethod === 'cod' ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`}\r\n                            onClick={() => handlePaymentMethodSelect('cod')}\r\n                        >\r\n                            <div className=\"flex items-center gap-3\">\r\n                                <CurrencyDollarIcon className=\"h-6 w-6 text-gray-600\" />\r\n                                <div>\r\n                                    <h3 className=\"font-semibold\">Thanh toán khi nhận hàng (COD)</h3>\r\n                                    <p className=\"text-sm text-gray-600\">Thanh toán bằng tiền mặt khi nhận hàng</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div\r\n                            className={`p-4 border rounded cursor-pointer ${paymentMethod === 'vietqr' ? 'border-blue-500 bg-blue-50' : 'border-gray-200'}`}\r\n                            onClick={() => handlePaymentMethodSelect('vietqr')}\r\n                        >\r\n                            <div className=\"flex items-center gap-3\">\r\n                                <QrCodeIcon className=\"h-6 w-6 text-gray-600\" />\r\n                                <div>\r\n                                    <h3 className=\"font-semibold\">Chuyển khoản qua VietQR</h3>\r\n                                    <p className=\"text-sm text-gray-600\">Thanh toán bằng mã QR qua ứng dụng ngân hàng</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button\r\n                        onClick={handleCompletePayment}\r\n                        className={`w-full px-4 py-2 rounded transition duration-200 ${loading || !paymentMethod\r\n                            ? 'bg-red-600 cursor-not-allowed'\r\n                            : 'bg-green-600 hover:bg-green-700 text-white'\r\n                            }`}\r\n                        disabled={loading || !paymentMethod}\r\n                    >\r\n                        {loading ? (\r\n                            <div className=\"flex items-center justify-center\">\r\n                                <span className=\"mr-2\">Đang xử lý...</span>\r\n                            </div>\r\n                        ) : (\r\n                            \"Hoàn tất đơn hàng\"\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Phần bên phải - Chi tiết sản phẩm */}\r\n            <div className=\"bg-gray-100 p-6 rounded\">\r\n                <h2 className=\"text-xl font-bold mb-4\">Chi tiết đơn hàng</h2>\r\n\r\n                {order && (\r\n                    <>\r\n                        <div className=\"mb-4\">\r\n                            {/* Lấy items từ localStorage */}\r\n                            {JSON.parse(localStorage.getItem('checkoutItems'))?.map(item => (\r\n                                <div key={item.id} className=\"flex items-center gap-4 border-b pb-4 mb-4\">\r\n                                    <div className=\"relative\">\r\n                                        <img\r\n                                            src={item.color.image_url}\r\n                                            alt={item.product.product_name}\r\n                                            className=\"w-20 h-20 object-cover rounded\"\r\n                                        />\r\n                                        <span className=\"absolute top-0 right-0 bg-red-600 text-white text-xs font-bold rounded-full w-6 h-6 flex items-center justify-center translate-x-1/2 -translate-y-1/2\">\r\n                                            {item.quantity}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p className=\"font-bold\">{item.product.product_name}</p>\r\n                                        <p>Màu sắc: <span className=\"text-gray-700\">{item.color.name}</span></p>\r\n                                        <p>Kích thước: <span className=\"text-gray-700\">{item.size.name}</span></p>\r\n                                        <p>{(item.product.discount_price || item.product.price).toLocaleString()} VND</p>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        <div className=\"border-t pt-4\">\r\n                            <p className=\"flex justify-between mb-2\">\r\n                                <span>Tạm tính:</span>\r\n                                <span>{order.subtotal?.toLocaleString()} VND</span>\r\n                            </p>\r\n                            <p className=\"flex justify-between mb-2\">\r\n                                <span>Phí vận chuyển:</span>\r\n                                <span>{order.shipping_fee?.toLocaleString()} VND</span>\r\n                            </p>\r\n                            <p className=\"flex justify-between mb-2\">\r\n                                <span>Giảm giá:</span>\r\n                                <span>-{order.discount_amount?.toLocaleString()} VND</span>\r\n                            </p>\r\n                            <p className=\"flex justify-between font-bold text-xl mt-4\">\r\n                                <span>Tổng cộng:</span>\r\n                                <span className=\"text-red-500\">\r\n                                    {order.final_price?.toLocaleString()} VND\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default dynamic(() => Promise.resolve(PaymentPage), {\r\n    ssr: false\r\n});\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2926, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/payment\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}