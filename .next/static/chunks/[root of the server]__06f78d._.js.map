{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[turbopack]/browser/dev/hmr-client/websocket.ts"],"sourcesContent":["// Adapted from https://github.com/vercel/next.js/blob/canary/packages/next/src/client/dev/error-overlay/websocket.ts\n\nlet source: WebSocket;\nconst eventCallbacks: ((msg: WebSocketMessage) => void)[] = [];\n\n// TODO: add timeout again\n// let lastActivity = Date.now()\n\nfunction getSocketProtocol(assetPrefix: string): string {\n  let protocol = location.protocol;\n\n  try {\n    // assetPrefix is a url\n    protocol = new URL(assetPrefix).protocol;\n  } catch (_) {}\n\n  return protocol === \"http:\" ? \"ws\" : \"wss\";\n}\n\nexport type WebSocketMessage =\n  | {\n      type: \"turbopack-connected\";\n    }\n  | {\n      type: \"turbopack-message\";\n      data: Record<string, any>;\n    };\n\nexport function addMessageListener(cb: (msg: WebSocketMessage) => void) {\n  eventCallbacks.push(cb);\n}\n\nexport function sendMessage(data: any) {\n  if (!source || source.readyState !== source.OPEN) return;\n  return source.send(data);\n}\n\nexport type HMROptions = {\n  path: string;\n  assetPrefix: string;\n  timeout?: number;\n  log?: boolean;\n};\n\nexport function connectHMR(options: HMROptions) {\n  const { timeout = 5 * 1000 } = options;\n\n  function init() {\n    if (source) source.close();\n\n    console.log(\"[HMR] connecting...\");\n\n    function handleOnline() {\n      const connected = { type: \"turbopack-connected\" as const };\n      eventCallbacks.forEach((cb) => {\n        cb(connected);\n      });\n\n      if (options.log) console.log(\"[HMR] connected\");\n      // lastActivity = Date.now()\n    }\n\n    function handleMessage(event: MessageEvent) {\n      // lastActivity = Date.now()\n\n      const message = {\n        type: \"turbopack-message\" as const,\n        data: JSON.parse(event.data),\n      };\n      eventCallbacks.forEach((cb) => {\n        cb(message);\n      });\n    }\n\n    // let timer: NodeJS.Timeout\n\n    function handleDisconnect() {\n      source.close();\n      setTimeout(init, timeout);\n    }\n\n    const { hostname, port } = location;\n    const protocol = getSocketProtocol(options.assetPrefix || \"\");\n    const assetPrefix = options.assetPrefix.replace(/^\\/+/, \"\");\n\n    let url = `${protocol}://${hostname}:${port}${\n      assetPrefix ? `/${assetPrefix}` : \"\"\n    }`;\n\n    if (assetPrefix.startsWith(\"http\")) {\n      url = `${protocol}://${assetPrefix.split(\"://\")[1]}`;\n    }\n\n    source = new window.WebSocket(`${url}${options.path}`);\n    source.onopen = handleOnline;\n    source.onerror = handleDisconnect;\n    source.onmessage = handleMessage;\n  }\n\n  init();\n}\n"],"names":[],"mappings":"AAAA,qHAAqH;;;;;;AAErH,IAAI;AACJ,MAAM,iBAAsD,EAAE;AAE9D,0BAA0B;AAC1B,gCAAgC;AAEhC,SAAS,kBAAkB,WAAmB;IAC5C,IAAI,WAAW,SAAS,QAAQ;IAEhC,IAAI;QACF,uBAAuB;QACvB,WAAW,IAAI,IAAI,aAAa,QAAQ;IAC1C,EAAE,OAAO,GAAG,CAAC;IAEb,OAAO,aAAa,UAAU,OAAO;AACvC;AAWO,SAAS,mBAAmB,EAAmC;IACpE,eAAe,IAAI,CAAC;AACtB;AAEO,SAAS,YAAY,IAAS;IACnC,IAAI,CAAC,UAAU,OAAO,UAAU,KAAK,OAAO,IAAI,EAAE;IAClD,OAAO,OAAO,IAAI,CAAC;AACrB;AASO,SAAS,WAAW,OAAmB;IAC5C,MAAM,EAAE,UAAU,IAAI,IAAI,EAAE,GAAG;IAE/B,SAAS;QACP,IAAI,QAAQ,OAAO,KAAK;QAExB,QAAQ,GAAG,CAAC;QAEZ,SAAS;YACP,MAAM,YAAY;gBAAE,MAAM;YAA+B;YACzD,eAAe,OAAO,CAAC,CAAC;gBACtB,GAAG;YACL;YAEA,IAAI,QAAQ,GAAG,EAAE,QAAQ,GAAG,CAAC;QAC7B,4BAA4B;QAC9B;QAEA,SAAS,cAAc,KAAmB;YACxC,4BAA4B;YAE5B,MAAM,UAAU;gBACd,MAAM;gBACN,MAAM,KAAK,KAAK,CAAC,MAAM,IAAI;YAC7B;YACA,eAAe,OAAO,CAAC,CAAC;gBACtB,GAAG;YACL;QACF;QAEA,4BAA4B;QAE5B,SAAS;YACP,OAAO,KAAK;YACZ,WAAW,MAAM;QACnB;QAEA,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG;QAC3B,MAAM,WAAW,kBAAkB,QAAQ,WAAW,IAAI;QAC1D,MAAM,cAAc,QAAQ,WAAW,CAAC,OAAO,CAAC,QAAQ;QAExD,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,SAAS,CAAC,EAAE,OACrC,cAAc,CAAC,CAAC,EAAE,aAAa,GAAG,IAClC;QAEF,IAAI,YAAY,UAAU,CAAC,SAAS;YAClC,MAAM,GAAG,SAAS,GAAG,EAAE,YAAY,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE;QACtD;QAEA,SAAS,IAAI,OAAO,SAAS,CAAC,GAAG,MAAM,QAAQ,IAAI,EAAE;QACrD,OAAO,MAAM,GAAG;QAChB,OAAO,OAAO,GAAG;QACjB,OAAO,SAAS,GAAG;IACrB;IAEA;AACF","ignoreList":[0]}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["turbopack://[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\n\nimport {\n  addMessageListener as turboSocketAddMessageListener,\n  sendMessage as turboSocketSendMessage,\n} from \"./websocket\";\ntype SendMessage = typeof import(\"./websocket\").sendMessage;\n\nexport type ClientOptions = {\n  addMessageListener: typeof import(\"./websocket\").addMessageListener;\n  sendMessage: SendMessage;\n  onUpdateError: (err: unknown) => void;\n};\n\nexport function connect({\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  addMessageListener = turboSocketAddMessageListener,\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  sendMessage = turboSocketSendMessage,\n  onUpdateError = console.error,\n}: ClientOptions) {\n  addMessageListener((msg) => {\n    switch (msg.type) {\n      case \"turbopack-connected\":\n        handleSocketConnected(sendMessage);\n        break;\n      default:\n        try {\n          if (Array.isArray(msg.data)) {\n            for (let i = 0; i < msg.data.length; i++) {\n              handleSocketMessage(msg.data[i] as ServerMessage);\n            }\n          } else {\n            handleSocketMessage(msg.data as ServerMessage);\n          }\n          applyAggregatedUpdates();\n        } catch (e: unknown) {\n          console.warn(\n            \"[Fast Refresh] performing full reload\\n\\n\" +\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\n          );\n          onUpdateError(e);\n          location.reload();\n        }\n        break;\n    }\n  });\n\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\n  if (queued != null && !Array.isArray(queued)) {\n    throw new Error(\"A separate HMR handler was already registered\");\n  }\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\n    push: ([chunkPath, callback]: [ChunkPath, UpdateCallback]) => {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    },\n  };\n\n  if (Array.isArray(queued)) {\n    for (const [chunkPath, callback] of queued) {\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\n    }\n  }\n}\n\ntype UpdateCallbackSet = {\n  callbacks: Set<UpdateCallback>;\n  unsubscribe: () => void;\n};\n\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\n\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\n  sendMessage(JSON.stringify(message));\n}\n\ntype ResourceKey = string;\n\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\n  return JSON.stringify({\n    path: resource.path,\n    headers: resource.headers || null,\n  });\n}\n\nfunction subscribeToUpdates(\n  sendMessage: SendMessage,\n  resource: ResourceIdentifier\n): () => void {\n  sendJSON(sendMessage, {\n    type: \"turbopack-subscribe\",\n    ...resource,\n  });\n\n  return () => {\n    sendJSON(sendMessage, {\n      type: \"turbopack-unsubscribe\",\n      ...resource,\n    });\n  };\n}\n\nfunction handleSocketConnected(sendMessage: SendMessage) {\n  for (const key of updateCallbackSets.keys()) {\n    subscribeToUpdates(sendMessage, JSON.parse(key));\n  }\n}\n\n// we aggregate all pending updates until the issues are resolved\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\n  new Map();\n\nfunction aggregateUpdates(msg: PartialServerMessage) {\n  const key = resourceKey(msg.resource);\n  let aggregated = chunkListsWithPendingUpdates.get(key);\n\n  if (aggregated) {\n    aggregated.instruction = mergeChunkListUpdates(\n      aggregated.instruction,\n      msg.instruction\n    );\n  } else {\n    chunkListsWithPendingUpdates.set(key, msg);\n  }\n}\n\nfunction applyAggregatedUpdates() {\n  if (chunkListsWithPendingUpdates.size === 0) return;\n  hooks.beforeRefresh();\n  for (const msg of chunkListsWithPendingUpdates.values()) {\n    triggerUpdate(msg);\n  }\n  chunkListsWithPendingUpdates.clear();\n  finalizeUpdate();\n}\n\nfunction mergeChunkListUpdates(\n  updateA: ChunkListUpdate,\n  updateB: ChunkListUpdate\n): ChunkListUpdate {\n  let chunks;\n  if (updateA.chunks != null) {\n    if (updateB.chunks == null) {\n      chunks = updateA.chunks;\n    } else {\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\n    }\n  } else if (updateB.chunks != null) {\n    chunks = updateB.chunks;\n  }\n\n  let merged;\n  if (updateA.merged != null) {\n    if (updateB.merged == null) {\n      merged = updateA.merged;\n    } else {\n      // Since `merged` is an array of updates, we need to merge them all into\n      // one, consistent update.\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\n      // no need to key on the `type` field.\n      let update = updateA.merged[0];\n      for (let i = 1; i < updateA.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateA.merged[i]\n        );\n      }\n\n      for (let i = 0; i < updateB.merged.length; i++) {\n        update = mergeChunkListEcmascriptMergedUpdates(\n          update,\n          updateB.merged[i]\n        );\n      }\n\n      merged = [update];\n    }\n  } else if (updateB.merged != null) {\n    merged = updateB.merged;\n  }\n\n  return {\n    type: \"ChunkListUpdate\",\n    chunks,\n    merged,\n  };\n}\n\nfunction mergeChunkListChunks(\n  chunksA: Record<ChunkPath, ChunkUpdate>,\n  chunksB: Record<ChunkPath, ChunkUpdate>\n): Record<ChunkPath, ChunkUpdate> {\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  return chunks;\n}\n\nfunction mergeChunkUpdates(\n  updateA: ChunkUpdate,\n  updateB: ChunkUpdate\n): ChunkUpdate | undefined {\n  if (\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\n  ) {\n    return undefined;\n  }\n\n  if (updateA.type === \"partial\") {\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\n  }\n\n  if (updateB.type === \"partial\") {\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\n  }\n\n  return undefined;\n}\n\nfunction mergeChunkListEcmascriptMergedUpdates(\n  mergedA: EcmascriptMergedUpdate,\n  mergedB: EcmascriptMergedUpdate\n): EcmascriptMergedUpdate {\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\n\n  return {\n    type: \"EcmascriptMergedUpdate\",\n    entries,\n    chunks,\n  };\n}\n\nfunction mergeEcmascriptChunkEntries(\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\n): Record<ModuleId, EcmascriptModuleEntry> {\n  return { ...entriesA, ...entriesB };\n}\n\nfunction mergeEcmascriptChunksUpdates(\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\n  if (chunksA == null) {\n    return chunksB;\n  }\n\n  if (chunksB == null) {\n    return chunksA;\n  }\n\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\n\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA)) {\n    const chunkUpdateB = chunksB[chunkPath];\n    if (chunkUpdateB != null) {\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\n        chunkUpdateA,\n        chunkUpdateB\n      );\n      if (mergedUpdate != null) {\n        chunks[chunkPath] = mergedUpdate;\n      }\n    } else {\n      chunks[chunkPath] = chunkUpdateA;\n    }\n  }\n\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB)) {\n    if (chunks[chunkPath] == null) {\n      chunks[chunkPath] = chunkUpdateB;\n    }\n  }\n\n  if (Object.keys(chunks).length === 0) {\n    return undefined;\n  }\n\n  return chunks;\n}\n\nfunction mergeEcmascriptChunkUpdates(\n  updateA: EcmascriptMergedChunkUpdate,\n  updateB: EcmascriptMergedChunkUpdate\n): EcmascriptMergedChunkUpdate | undefined {\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\n    // These two completely cancel each other out.\n    return undefined;\n  }\n\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\n    const added = [];\n    const deleted = [];\n    const deletedModules = new Set(updateA.modules ?? []);\n    const addedModules = new Set(updateB.modules ?? []);\n\n    for (const moduleId of addedModules) {\n      if (!deletedModules.has(moduleId)) {\n        added.push(moduleId);\n      }\n    }\n\n    for (const moduleId of deletedModules) {\n      if (!addedModules.has(moduleId)) {\n        deleted.push(moduleId);\n      }\n    }\n\n    if (added.length === 0 && deleted.length === 0) {\n      return undefined;\n    }\n\n    return {\n      type: \"partial\",\n      added,\n      deleted,\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\n    const deleted = new Set([\n      ...(updateA.deleted ?? []),\n      ...(updateB.deleted ?? []),\n    ]);\n\n    if (updateB.added != null) {\n      for (const moduleId of updateB.added) {\n        deleted.delete(moduleId);\n      }\n    }\n\n    if (updateB.deleted != null) {\n      for (const moduleId of updateB.deleted) {\n        added.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"partial\",\n      added: [...added],\n      deleted: [...deleted],\n    };\n  }\n\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\n    const modules = new Set([\n      ...(updateA.modules ?? []),\n      ...(updateB.added ?? []),\n    ]);\n\n    for (const moduleId of updateB.deleted ?? []) {\n      modules.delete(moduleId);\n    }\n\n    return {\n      type: \"added\",\n      modules: [...modules],\n    };\n  }\n\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\n    // We could eagerly return `updateB` here, but this would potentially be\n    // incorrect if `updateA` has added modules.\n\n    const modules = new Set(updateB.modules ?? []);\n\n    if (updateA.added != null) {\n      for (const moduleId of updateA.added) {\n        modules.delete(moduleId);\n      }\n    }\n\n    return {\n      type: \"deleted\",\n      modules: [...modules],\n    };\n  }\n\n  // Any other update combination is invalid.\n\n  return undefined;\n}\n\nfunction invariant(_: never, message: string): never {\n  throw new Error(`Invariant: ${message}`);\n}\n\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\n\nfunction compareByList(list: any[], a: any, b: any) {\n  const aI = list.indexOf(a) + 1 || list.length;\n  const bI = list.indexOf(b) + 1 || list.length;\n  return aI - bI;\n}\n\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\n\nfunction emitIssues() {\n  const issues = [];\n  const deduplicationSet = new Set();\n\n  for (const [_, chunkIssues] of chunksWithIssues) {\n    for (const chunkIssue of chunkIssues) {\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\n\n      issues.push(chunkIssue);\n      deduplicationSet.add(chunkIssue.formatted);\n    }\n  }\n\n  sortIssues(issues);\n\n  hooks.issues(issues);\n}\n\nfunction handleIssues(msg: ServerMessage): boolean {\n  const key = resourceKey(msg.resource);\n  let hasCriticalIssues = false;\n\n  for (const issue of msg.issues) {\n    if (CRITICAL.includes(issue.severity)) {\n      hasCriticalIssues = true;\n    }\n  }\n\n  if (msg.issues.length > 0) {\n    chunksWithIssues.set(key, msg.issues);\n  } else if (chunksWithIssues.has(key)) {\n    chunksWithIssues.delete(key);\n  }\n\n  emitIssues();\n\n  return hasCriticalIssues;\n}\n\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\nconst CATEGORY_ORDER = [\n  \"parse\",\n  \"resolve\",\n  \"code generation\",\n  \"rendering\",\n  \"typescript\",\n  \"other\",\n];\n\nfunction sortIssues(issues: Issue[]) {\n  issues.sort((a, b) => {\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\n    if (first !== 0) return first;\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\n  });\n}\n\nconst hooks = {\n  beforeRefresh: () => {},\n  refresh: () => {},\n  buildOk: () => {},\n  issues: (_issues: Issue[]) => {},\n};\n\nexport function setHooks(newHooks: typeof hooks) {\n  Object.assign(hooks, newHooks);\n}\n\nfunction handleSocketMessage(msg: ServerMessage) {\n  sortIssues(msg.issues);\n\n  handleIssues(msg);\n\n  switch (msg.type) {\n    case \"issues\":\n      // issues are already handled\n      break;\n    case \"partial\":\n      // aggregate updates\n      aggregateUpdates(msg);\n      break;\n    default:\n      // run single update\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\n      if (runHooks) hooks.beforeRefresh();\n      triggerUpdate(msg);\n      if (runHooks) finalizeUpdate();\n      break;\n  }\n}\n\nfunction finalizeUpdate() {\n  hooks.refresh();\n  hooks.buildOk();\n\n  // This is used by the Next.js integration test suite to notify it when HMR\n  // updates have been completed.\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\n  if (globalThis.__NEXT_HMR_CB) {\n    globalThis.__NEXT_HMR_CB();\n    globalThis.__NEXT_HMR_CB = null;\n  }\n}\n\nfunction subscribeToChunkUpdate(\n  chunkPath: ChunkPath,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n): () => void {\n  return subscribeToUpdate(\n    {\n      path: chunkPath,\n    },\n    sendMessage,\n    callback\n  );\n}\n\nexport function subscribeToUpdate(\n  resource: ResourceIdentifier,\n  sendMessage: SendMessage,\n  callback: UpdateCallback\n) {\n  // TODO(WEB-1465) Remove this backwards compat fallback once\n  // vercel/next.js#54586 is merged.\n  if (callback === undefined) {\n    callback = sendMessage;\n    sendMessage = turboSocketSendMessage;\n  }\n\n  const key = resourceKey(resource);\n  let callbackSet: UpdateCallbackSet;\n  const existingCallbackSet = updateCallbackSets.get(key);\n  if (!existingCallbackSet) {\n    callbackSet = {\n      callbacks: new Set([callback]),\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\n    };\n    updateCallbackSets.set(key, callbackSet);\n  } else {\n    existingCallbackSet.callbacks.add(callback);\n    callbackSet = existingCallbackSet;\n  }\n\n  return () => {\n    callbackSet.callbacks.delete(callback);\n\n    if (callbackSet.callbacks.size === 0) {\n      callbackSet.unsubscribe();\n      updateCallbackSets.delete(key);\n    }\n  };\n}\n\nfunction triggerUpdate(msg: ServerMessage) {\n  const key = resourceKey(msg.resource);\n  const callbackSet = updateCallbackSets.get(key);\n  if (!callbackSet) {\n    return;\n  }\n\n  for (const callback of callbackSet.callbacks) {\n    callback(msg);\n  }\n\n  if (msg.type === \"notFound\") {\n    // This indicates that the resource which we subscribed to either does not exist or\n    // has been deleted. In either case, we should clear all update callbacks, so if a\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\n    // message to the server.\n    // No need to send an \"unsubscribe\" message to the server, it will have already\n    // dropped the update stream before sending the \"notFound\" message.\n    updateCallbackSets.delete(key);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/utils/storage.js"],"sourcesContent":["import Cookies from 'js-cookie';\r\n\r\nconst TOKEN_KEY = 'token';\r\nconst REFRESH_TOKEN_KEY = 'refreshToken';\r\nconst USER_ID_KEY = 'userId';\r\nconst SESSION_ID_KEY = 'sessionId';\r\nconst CART_ID_KEY = 'cartId';\r\nconst ROLE = 'role';\r\n\r\n// Set token in cookies\r\nexport const setToken = (token) => Cookies.set(TOKEN_KEY, token, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n// Get token from cookies\r\nexport const getToken = () => Cookies.get(TOKEN_KEY);\r\n\r\n// Remove token from cookies\r\nexport const removeToken = () => Cookies.remove(TOKEN_KEY);\r\n\r\n// Set refresh token in cookies\r\nexport const setRefreshToken = (token) => Cookies.set(REFRESH_TOKEN_KEY, token, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n// Get refresh token from cookies\r\nexport const getRefreshToken = () => Cookies.get(REFRESH_TOKEN_KEY);\r\n\r\n// Remove refresh token from cookies\r\nexport const removeRefreshToken = () => Cookies.remove(REFRESH_TOKEN_KEY);\r\n\r\n// Set user ID in cookies\r\nexport const setUserId = (userId) => Cookies.set(USER_ID_KEY, userId, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n// Get user ID from cookies\r\nexport const getUserId = () => Cookies.get(USER_ID_KEY);\r\n\r\n// Remove user ID from cookies\r\nexport const removeUserId = () => Cookies.remove(USER_ID_KEY);\r\n\r\n// Set session ID in cookies\r\nexport const setSessionId = (sessionId) =>\r\n    Cookies.set(SESSION_ID_KEY, sessionId, { expires: 7, secure: false, sameSite: 'Strict' });\r\n\r\n// Get session ID from cookies\r\nexport const getSessionId = () => Cookies.get(SESSION_ID_KEY);\r\n\r\n// Remove session ID from cookies\r\nexport const removeSessionId = () => Cookies.remove(SESSION_ID_KEY);\r\n\r\n// Set cart ID in cookies\r\nexport const setCartId = (cartId) => Cookies.set(CART_ID_KEY, cartId, { expires: 7, secure: false, sameSite: 'Strict' });\r\n\r\n// Get cart ID from cookies\r\nexport const getCartId = () => Cookies.get(CART_ID_KEY);\r\n\r\n// Remove cart ID from cookies\r\nexport const removeCartId = () => Cookies.remove(CART_ID_KEY);\r\n\r\n// Set role in cookies\r\nexport const setRole = (role) => Cookies.set(ROLE, role, { expires: 7, secure: false, sameSite: 'Strict' });\r\n\r\n// Get role from cookies\r\nexport const getRole = () => Cookies.get(ROLE);\r\n\r\n// Remove role from cookies\r\nexport const removeRole = () => Cookies.remove(ROLE);\r\n\r\n// Clear all cookies\r\nexport const clearAllCookies = () => {\r\n    Cookies.remove(TOKEN_KEY);\r\n    Cookies.remove(REFRESH_TOKEN_KEY);\r\n    Cookies.remove(USER_ID_KEY);\r\n    Cookies.remove(SESSION_ID_KEY);\r\n    Cookies.remove(CART_ID_KEY);\r\n    Cookies.remove(ROLE);\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,MAAM,YAAY;AAClB,MAAM,oBAAoB;AAC1B,MAAM,cAAc;AACpB,MAAM,iBAAiB;AACvB,MAAM,cAAc;AACpB,MAAM,OAAO;AAGN,MAAM,WAAW,CAAC,QAAU,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,WAAW,OAAO;QAAE,SAAS;QAAG,QAAQ;QAAM,UAAU;IAAS;AAGzG,MAAM,WAAW,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGnC,MAAM,cAAc,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAGzC,MAAM,kBAAkB,CAAC,QAAU,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,mBAAmB,OAAO;QAAE,SAAS;QAAG,QAAQ;QAAM,UAAU;IAAS;AAGxH,MAAM,kBAAkB,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAG1C,MAAM,qBAAqB,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAGhD,MAAM,YAAY,CAAC,SAAW,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,aAAa,QAAQ;QAAE,SAAS;QAAG,QAAQ;QAAM,UAAU;IAAS;AAG9G,MAAM,YAAY,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGpC,MAAM,eAAe,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAG1C,MAAM,eAAe,CAAC,YACzB,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,gBAAgB,WAAW;QAAE,SAAS;QAAG,QAAQ;QAAO,UAAU;IAAS;AAGpF,MAAM,eAAe,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGvC,MAAM,kBAAkB,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAG7C,MAAM,YAAY,CAAC,SAAW,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,aAAa,QAAQ;QAAE,SAAS;QAAG,QAAQ;QAAO,UAAU;IAAS;AAG/G,MAAM,YAAY,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGpC,MAAM,eAAe,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAG1C,MAAM,UAAU,CAAC,OAAS,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,MAAM,MAAM;QAAE,SAAS;QAAG,QAAQ;QAAO,UAAU;IAAS;AAGlG,MAAM,UAAU,IAAM,iJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AAGlC,MAAM,aAAa,IAAM,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AAGxC,MAAM,kBAAkB;IAC3B,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;IACf,iJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AACnB"}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/utils/apiClient.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n    getToken,\r\n    setToken,\r\n    getRefreshToken,\r\n    setRefreshToken,\r\n    getUserId,\r\n    setSessionId,\r\n    getSessionId,\r\n    removeSessionId,\r\n    removeRefreshToken,\r\n    removeUserId,\r\n    removeToken,\r\n    setCartId,\r\n    getCartId,\r\n    removeCartId,\r\n    clearAllCookies,\r\n    removeRole,\r\n    setRole,\r\n} from './storage';\r\nimport { resetAuthState } from '../store/slices/userSlice';\r\n\r\n// https://kltn-1a.onrender.com hihi, http://localhost:5551/v1/api/, https://c918-118-71-16-139.ngrok-free.app\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: 'https://59d8-1-52-90-166.ngrok-free.app/v1/api/',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'ngrok-skip-browser-warning': 'true'\r\n    },\r\n    withCredentials: true\r\n});\r\n\r\n// **Request Interceptor**\r\napiClient.interceptors.request.use(\r\n    async (config) => {\r\n        try {\r\n            // Retrieve access token and session ID from cookies\r\n            const accessToken = getToken();\r\n            const sessionId = getSessionId();\r\n\r\n            // Add Authorization header if token exists\r\n            if (accessToken) {\r\n                config.headers['Authorization'] = `Bearer ${accessToken}`;\r\n            }\r\n\r\n            // Add session ID header if session ID exists\r\n            if (sessionId) {\r\n                config.headers['x-session-id'] = sessionId; // Add session ID to headers\r\n            }\r\n        } catch (error) {\r\n            console.error('Error adding headers:', error);\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\nconst MAX_RETRY_COUNT = 5; // Giới hạn số lần retry\r\n\r\n// Hàm delay với backoff logic\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n// Interceptor xử lý response\r\napiClient.interceptors.response.use(\r\n    (response) => {\r\n        console.log('Response received:', response);\r\n\r\n        // Lưu session ID nếu có trong response headers\r\n        const sessionId = response.headers?.['x-session-id'];\r\n        if (sessionId) {\r\n            setSessionId(sessionId); // Lưu vào cookie hoặc storage\r\n            console.log('Session ID saved from response:', sessionId);\r\n        }\r\n\r\n        return response;\r\n    },\r\n    async (error) => {\r\n        const originalRequest = error.config;\r\n\r\n        console.log('Error response:', error.response || 'No response available');\r\n\r\n        // Thêm thuộc tính _retryCount nếu chưa có\r\n        if (!originalRequest._retryCount) {\r\n            originalRequest._retryCount = 0;\r\n        }\r\n\r\n        // Kiểm tra lỗi từ Refresh Token\r\n        if (\r\n            error.response?.status === 403 &&\r\n            error.response?.data?.message === \"Refresh Token không tồn tại\"\r\n        ) {\r\n            console.log('Refresh token does not exist. Logging out...');\r\n            clearAllCookies(); // Xóa tất cả cookies\r\n            store.dispatch(resetAuthState()); // Reset trạng thái auth\r\n            return new Promise(() => { }); // Trả về Promise không lỗi\r\n        }\r\n\r\n        // Dừng retry nếu là request tới /users/refresh-token\r\n        if (originalRequest.url.includes('/users/refresh-token')) {\r\n            console.log('Refresh token request failed. Stopping retries.');\r\n            removeSessionId(); // Xóa session ID\r\n            store.dispatch(resetAuthState()); // Reset trạng thái auth\r\n            return new Promise(() => { }); // Trả về Promise không lỗi\r\n        }\r\n\r\n        // Nếu lỗi 403 và chưa đạt giới hạn retry\r\n        if (error.response?.status === 403 && originalRequest._retryCount < MAX_RETRY_COUNT) {\r\n            originalRequest._retryCount += 1; // Tăng số lần retry\r\n            console.log(`Retrying request (${originalRequest._retryCount}/${MAX_RETRY_COUNT})...`);\r\n\r\n            try {\r\n                // Lấy token mới\r\n                const newAccessToken = await userApi.refreshToken();\r\n                // Gắn token mới vào header\r\n                originalRequest.headers['Authorization'] = `Bearer ${newAccessToken}`;\r\n                return apiClient(originalRequest); // Retry request\r\n            } catch (refreshError) {\r\n                console.log('Error during token refresh:', refreshError);\r\n                return new Promise(() => { }); // Trả về Promise không lỗi\r\n            }\r\n        }\r\n\r\n        // Nếu vượt quá số lần retry\r\n        if (originalRequest._retryCount >= MAX_RETRY_COUNT) {\r\n            console.log('Maximum retry attempts reached.');\r\n            return new Promise(() => { }); // Trả về Promise không lỗi\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n\r\n// **User API**\r\nconst userApi = {\r\n    // Register user\r\n    register: async (userData) => {\r\n        try {\r\n            const response = await apiClient.post('users/register', userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Verify OTP for registration\r\n    verifyOtp: async (otpData) => {\r\n        try {\r\n            const response = await apiClient.post('users/verify-otp', otpData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Login user\r\n    login: async (credentials) => {\r\n        try {\r\n            const response = await apiClient.post('users/login', credentials);\r\n            const { accessToken, refreshToken, user } = response.data.data;\r\n\r\n            if (accessToken && refreshToken) {\r\n                // Lấy cart_id trực tiếp từ user object\r\n                const cart_id = user.cart_id;\r\n\r\n                // Lưu các thông tin cần thiết\r\n\r\n                setRole('');\r\n                setToken(accessToken);\r\n                setRefreshToken(refreshToken);\r\n                removeCartId(); // Xóa cart ID cũ nếu có\r\n                // setCartId(cart_id); // Lưu cart ID mới\r\n            }\r\n\r\n            // Kiểm tra và lưu session ID từ headers\r\n            const sessionId = response.headers['x-session-id'];\r\n            if (sessionId) {\r\n                setSessionId(sessionId);\r\n                console.log('Session ID received and saved during login:', sessionId);\r\n            }\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Logout user\r\n    logout: async () => {\r\n        try {\r\n            const refreshToken = getRefreshToken();\r\n            const userId = getUserId();\r\n            await apiClient.post('users/logout', { refreshToken, userId });\r\n            // Clear all stored tokens and session ID\r\n            removeSessionId();\r\n            removeRefreshToken();\r\n            removeUserId();\r\n            removeSessionId();\r\n            removeToken();\r\n            removeCartId();\r\n            removeRole();\r\n\r\n            return { message: 'Logout successful' };\r\n        } catch (error) {\r\n            throw error.response?.data || 'Logout failed';\r\n        }\r\n    },\r\n\r\n    // Get user profile\r\n    getUserProfile: async () => {\r\n        try {\r\n            const response = await apiClient.get('users/profile');\r\n            return response.data.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch user profile';\r\n        }\r\n    },\r\n\r\n    // Refresh token\r\n    refreshToken: async () => {\r\n        try {\r\n            const get_refreshToken = getRefreshToken();\r\n            const get_userId = getUserId();\r\n            const response = await apiClient.post('users/refresh-token', { get_refreshToken });\r\n\r\n            const { accessToken, refreshToken: newRefreshToken } = response.data.data;\r\n\r\n            if (accessToken && newRefreshToken) {\r\n                setToken(accessToken); // Update access token\r\n                setRefreshToken(newRefreshToken); // Update refresh token\r\n            }\r\n\r\n            return accessToken; // Return the new access token\r\n        } catch (error) {\r\n            throw new Error('Token refresh failed. Please log in again.');\r\n        }\r\n    },\r\n\r\n    // Cập nhật thông tin profile người dùng\r\n    updateUserProfile: async (userData) => {\r\n        try {\r\n            const response = await apiClient.put('users/profile', userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật thông tin người dùng.';\r\n        }\r\n    },\r\n\r\n    /**\r\n * Request password reset OTP\r\n * @param {Object} data - Request data\r\n * @param {string} data.email - User's email address\r\n * @returns {Promise<Object>} - API response\r\n */\r\n    forgotPassword: async (data) => {\r\n        try {\r\n            const response = await apiClient.post('users/forgot-password', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể gửi yêu cầu đặt lại mật khẩu.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Reset password using OTP\r\n     * @param {Object} data - Reset password data\r\n     * @param {string} data.email - User's email\r\n     * @param {string} data.otp - One-time password\r\n     * @param {string} data.newPassword - New password\r\n     * @returns {Promise<Object>} - API response\r\n     */\r\n    resetPassword: async (data) => {\r\n        try {\r\n            const response = await apiClient.post('users/reset-password', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể đặt lại mật khẩu.';\r\n        }\r\n    },\r\n\r\n};\r\n\r\nconst adminApi = {\r\n    /**\r\n     * Đăng nhập admin\r\n     * @param {Object} credentials - Dữ liệu đăng nhập (email và password)\r\n     * @returns {Promise<Object>} - Phản hồi từ API\r\n     */\r\n    loginForAdmin: async (credentials) => {\r\n        try {\r\n            const response = await apiClient.post('users/login-admin', credentials);\r\n\r\n            // Lấy token và vai trò từ phản hồi\r\n            const { accessToken, refreshToken, role } = response.data.data;\r\n\r\n            // Lưu token và role\r\n            if (accessToken && refreshToken) {\r\n                setToken(accessToken);\r\n                setRefreshToken(refreshToken);\r\n                setRole(role);\r\n\r\n            }\r\n\r\n            // Lưu session ID nếu có trong header\r\n            const sessionId = response.headers['x-session-id'];\r\n            if (sessionId) {\r\n                setSessionId(sessionId);\r\n            }\r\n\r\n            return { user: response.data.user, role }; // Trả về thông tin người dùng và vai trò\r\n        } catch (error) {\r\n            throw error.response?.data || error.message;\r\n        }\r\n    },\r\n\r\n    // Get all users (Admin only) \r\n    getAllUsers: async (params = {}) => {\r\n        try {\r\n            const { page = 1, limit = 10, email, phone, name } = params;\r\n            const query = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            if (email) query.append('email', email);\r\n            if (phone) query.append('phone', phone);\r\n            if (name) query.append('name', name);\r\n\r\n            const response = await apiClient.get(`users/admin/users?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch users list';\r\n        }\r\n    },\r\n\r\n    // Create new user (Admin only)\r\n    createUser: async (userData) => {\r\n        try {\r\n            const response = await apiClient.post('users/admin/users', userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create user';\r\n        }\r\n    },\r\n\r\n    // Update user (Admin only) \r\n    updateUser: async (userId, userData) => {\r\n        try {\r\n            const response = await apiClient.put(`users/admin/users/${userId}`, userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update user';\r\n        }\r\n    },\r\n\r\n    deleteUser: async (userId) => {\r\n        try {\r\n            const response = await apiClient.delete(`users/admin/users/${userId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete user';\r\n        }\r\n    },\r\n\r\n};\r\n\r\n// **Product API**\r\nconst productApi = {\r\n    // Create a new product\r\n    createProduct: async (productData) => {\r\n        const response = await apiClient.post('products/', productData);\r\n        return response.data;\r\n    },\r\n\r\n    // Get all products\r\n    getProducts: async () => {\r\n        const response = await apiClient.get('products');\r\n        return response.data.data;\r\n    },\r\n\r\n    // Get product details by slug\r\n    getProductDetail: async (slug) => {\r\n        const response = await apiClient.get(`products/${slug}`);\r\n        return response.data.data;\r\n    },\r\n\r\n    // Update product by slug\r\n    updateProduct: async (slug, productData) => {\r\n        const response = await apiClient.put(`products/${slug}`, productData);\r\n        return response.data;\r\n    },\r\n\r\n    // Delete product by slug\r\n    deleteProduct: async (slug) => {\r\n        const response = await apiClient.delete(`products/${slug}`);\r\n        return response.data;\r\n    },\r\n\r\n    // Get products with pagination\r\n    getProductsByPagination: async (params = {}) => {\r\n        try {\r\n            const {\r\n                page = 1,\r\n                limit = 20,\r\n                name,\r\n                categories,\r\n                colors,\r\n                sizes,\r\n                priceRange,\r\n                sort = 'newest'\r\n            } = params;\r\n\r\n            // Xây dựng query parameters\r\n            const queryParams = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            // Thêm các filter tùy chọn\r\n            if (name) queryParams.append('name', name);\r\n            if (categories) queryParams.append('categories', categories);\r\n            if (colors) queryParams.append('colors', colors);\r\n            if (sizes) queryParams.append('sizes', sizes);\r\n            if (priceRange) queryParams.append('priceRange', priceRange);\r\n            if (sort) queryParams.append('sort', sort);\r\n\r\n            console.log('API call to:', `products/pagination?${queryParams.toString()}`);\r\n\r\n            const response = await apiClient.get(`products/pagination?${queryParams.toString()}`);\r\n            console.log('API response:', response.data);\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n            throw error.response?.data || 'Failed to fetch products.';\r\n        }\r\n    },\r\n\r\n    // Get new products with pagination\r\n    getNewProductsByPagination: async (page, limit, sort, priceRange, colorIds) => {\r\n        try {\r\n            const query = new URLSearchParams({\r\n                page,\r\n                limit,\r\n                sort,\r\n                priceRange: priceRange || '',\r\n                colorIds: colorIds || '',\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products/new?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching new products:', error);\r\n            throw error.response?.data || 'Failed to fetch new products.';\r\n        }\r\n    },\r\n\r\n    // Get featured products with pagination\r\n    getFeaturedProductsByPagination: async (page, limit, sort, priceRange, colorIds) => {\r\n        try {\r\n            const query = new URLSearchParams({\r\n                page,\r\n                limit,\r\n                sort,\r\n                priceRange: priceRange || '',\r\n                colorIds: colorIds || '',\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products/featured?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching featured products:', error);\r\n            throw error.response?.data || 'Failed to fetch featured products.';\r\n        }\r\n    },\r\n\r\n    searchProductsByNameAndColor: async (keyword, options = {}) => {\r\n        try {\r\n            const {\r\n                page = 1,\r\n                limit = 20,\r\n                sort = 'newest'\r\n            } = options;\r\n\r\n            const query = new URLSearchParams({\r\n                keyword: keyword || '',\r\n                page: String(page),\r\n                limit: String(limit),\r\n                sort\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products/search/name-color?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error searching products:', error);\r\n            throw error.response?.data || 'Không thể tìm kiếm sản phẩm.';\r\n        }\r\n    },\r\n\r\n};\r\n\r\n\r\nconst cartApi = {\r\n    // Tạo giỏ hàng cho khách\r\n    createCartForGuest: async (cartData) => {\r\n        try {\r\n            const response = await apiClient.post('carts/guest', cartData);\r\n            const { id } = response.data.data;\r\n            if (id) {\r\n                console.log('Cart ID:', id);\r\n                setCartId(id); // Lưu cart ID vào cookie hoặc storage\r\n            }\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create cart for guest.';\r\n        }\r\n    },\r\n\r\n    // Tạo hoặc lấy giỏ hàng cho người dùng đã đăng nhập\r\n    createCartForUser: async () => {\r\n        try {\r\n            const response = await apiClient.post('carts/user');\r\n            const { id } = response.data.data;\r\n            if (id) {\r\n                console.log('Cart ID:', id);\r\n                setCartId(id); // Lưu cart ID vào cookie hoặc storage\r\n            }\r\n\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create or retrieve cart for user.';\r\n        }\r\n    },\r\n\r\n    // Lấy chi tiết giỏ hàng theo ID\r\n    getCartById: async (cartId) => {\r\n        try {\r\n            const response = await apiClient.get(`carts/${cartId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch cart details.';\r\n        }\r\n    },\r\n\r\n    // Thêm sản phẩm vào giỏ hàng\r\n    addItemToCart: async (cartId, itemData) => {\r\n        try {\r\n            const response = await apiClient.post(`carts/${cartId}/items`, itemData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to add item to cart.';\r\n        }\r\n    },\r\n\r\n\r\n    // Xóa sản phẩm khỏi giỏ hàng\r\n    removeCartItem: async (itemId) => {\r\n        try {\r\n            const response = await apiClient.delete(`carts/items/${itemId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to remove item from cart.';\r\n        }\r\n    },\r\n\r\n    // Lấy tất cả sản phẩm trong giỏ hàng\r\n    getCartItems: async (cartId) => {\r\n        try {\r\n            const response = await apiClient.get(`carts/${cartId}/items`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch cart items.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật số lượng sản phẩm trong giỏ hàng\r\n    updateCartItemQuantity: async (itemId, quantity) => {\r\n        try {\r\n            const response = await apiClient.put(`carts/item/${itemId}`, { quantity });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update cart item quantity.';\r\n        }\r\n    },\r\n};\r\n\r\nconst reviewApi = {\r\n    // Tạo mới một review\r\n    createReview: async (reviewData) => {\r\n        try {\r\n            const response = await apiClient.post('reviews/', reviewData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create review.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách review của một sản phẩm\r\n    getReviewsByProduct: async (productId, page, limit) => {\r\n        try {\r\n            const response = await apiClient.get(`reviews/product/${productId}?page=${page}&limit=${limit}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch reviews.';\r\n        }\r\n    },\r\n\r\n    // Lấy điểm trung bình của một sản phẩm\r\n    getAverageRating: async (productId) => {\r\n        try {\r\n            const response = await apiClient.get(`reviews/product/${productId}/average-rating`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch average rating.';\r\n        }\r\n    },\r\n\r\n    // Xóa một review\r\n    deleteReview: async (reviewId) => {\r\n        try {\r\n            const response = await apiClient.delete(`reviews/${reviewId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete review.';\r\n        }\r\n    },\r\n};\r\n\r\nconst productsByCategoryApi = {\r\n    // Fetch all products by category\r\n    getProductsByCategory: async (categoryId, page, limit, sort, priceRange, colorIds) => {\r\n        try {\r\n            const query = new URLSearchParams({\r\n                page,\r\n                limit,\r\n                sort,\r\n                priceRange: priceRange || '',\r\n                colorIds: colorIds || '',\r\n            }).toString();\r\n\r\n            const response = await apiClient.get(`products-by-category/${categoryId}?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch products by category.';\r\n        }\r\n    },\r\n};\r\n\r\nconst colorsApi = {\r\n    // Fetch all colors\r\n    getColors: async () => {\r\n        try {\r\n            const response = await apiClient.get('colors');\r\n            return response.data.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch colors.';\r\n        }\r\n    },\r\n}\r\n\r\nconst indexApi = {\r\n    getNewProducts: async (page, limit) => {\r\n        const response = await apiClient.get('/products/news', {\r\n            params: { page, limit },\r\n        });\r\n        return response.data;\r\n    },\r\n    getFeaturedProducts: async (page, limit) => {\r\n        const response = await apiClient.get('/products/featureds', {\r\n            params: { page, limit },\r\n        });\r\n        return response.data;\r\n    },\r\n};\r\n\r\nconst orderApi = {\r\n    /**\r\n     * Create a new order\r\n     * @param {Object} orderData - Order details\r\n     * @returns {Promise<Object>} - Created order response\r\n     */\r\n    createOrder: async (orderData) => {\r\n        try {\r\n            const response = await apiClient.post('orders', orderData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create order.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get an order by ID\r\n     * @param {number} orderId - ID of the order\r\n     * @returns {Promise<Object>} - Order details\r\n     */\r\n    getOrderById: async (orderId) => {\r\n        try {\r\n            const response = await apiClient.get(`orders/${orderId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch order details.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update order status\r\n     * @param {number} orderId - ID of the order\r\n     * @param {string} status - New status ('pending', 'completed', 'canceled', etc.)\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    updateOrderStatus: async (orderId, status) => {\r\n        try {\r\n            const response = await apiClient.patch(`orders/${orderId}/status`, { status });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update order status.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Cancel expired orders\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    cancelExpiredOrders: async () => {\r\n        try {\r\n            const response = await apiClient.post('orders/cancel-expired');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to cancel expired orders.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Complete an order\r\n     * @param {number} orderId - ID of the order\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    completeOrder: async (orderId) => {\r\n        try {\r\n            const response = await apiClient.post(`orders/${orderId}/complete`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to complete order.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Delete an order by ID\r\n     * @param {number} orderId - ID of the order\r\n     * @returns {Promise<Object>} - Response status\r\n     */\r\n    deleteOrder: async (orderId) => {\r\n        try {\r\n            const response = await apiClient.delete(`orders/${orderId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete order.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get orders by user with pagination\r\n     * @param {Object} params - Query parameters\r\n     * @param {number} params.page - Page number\r\n     * @param {number} params.limit - Items per page\r\n     * @returns {Promise<Object>} - Paginated user orders\r\n     */\r\n    getOrdersByUser: async ({ page = 1, limit = 10 }) => {\r\n        try {\r\n            const response = await apiClient.get(`orders/user`, {\r\n                params: { page, limit }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách đơn hàng.';\r\n        }\r\n    },\r\n\r\n    getAllOrders: async ({\r\n        page = 1,\r\n        limit = 10,\r\n        status,\r\n        startDate,\r\n        endDate,\r\n        orderId,           // Thêm filter mã đơn hàng\r\n        customerName,      // Thêm filter tên khách hàng  \r\n        customerEmail,     // Thêm filter email\r\n        customerPhone      // Thêm filter số điện thoại\r\n    }) => {\r\n        try {\r\n            // Tạo query params\r\n            const params = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            // Thêm các filter hiện tại\r\n            if (status) {\r\n                params.append('status', status);\r\n            }\r\n            if (startDate) {\r\n                params.append('startDate', startDate);\r\n            }\r\n            if (endDate) {\r\n                params.append('endDate', endDate);\r\n            }\r\n\r\n            // Thêm các filter mới\r\n            if (orderId) {\r\n                params.append('orderId', orderId);\r\n            }\r\n            if (customerName) {\r\n                params.append('customerName', customerName);\r\n            }\r\n            if (customerEmail) {\r\n                params.append('customerEmail', customerEmail);\r\n            }\r\n            if (customerPhone) {\r\n                params.append('customerPhone', customerPhone);\r\n            }\r\n\r\n            const response = await apiClient.get(`orders?${params}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách đơn hàng.';\r\n        }\r\n    },\r\n\r\n    /**\r\n * Gửi email xác nhận đơn hàng\r\n * @param {Object} data - Dữ liệu đơn hàng\r\n * @param {Array} data.checkoutItems - Danh sách sản phẩm đặt hàng\r\n * @param {Object} data.orderDetails - Chi tiết đơn hàng\r\n * @returns {Promise<Object>} - Kết quả gửi email\r\n */\r\n    sendOrderConfirmation: async (data) => {\r\n        try {\r\n            const response = await apiClient.post('orders/send-order-confirmation', data);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể gửi email xác nhận đơn hàng.';\r\n        }\r\n    },\r\n};\r\n\r\nconst paymentApi = {\r\n    /**\r\n     * Tạo thanh toán qua PayOS\r\n     * @param {Object} paymentData - Dữ liệu thanh toán\r\n     * @returns {Promise<Object>} - Thông tin thanh toán\r\n     */\r\n    createPayOSPayment: async (paymentData) => {\r\n        try {\r\n            const response = await apiClient.post('payments/payos', paymentData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo thanh toán PayOS.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Tạo thanh toán COD (Cash On Delivery)\r\n     * @param {Object} codData - Dữ liệu thanh toán COD\r\n     * @returns {Promise<Object>} - Thông tin thanh toán COD\r\n     */\r\n    createCODPayment: async (codData) => {\r\n        try {\r\n            const response = await apiClient.post('payments/cod', codData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo thanh toán COD.';\r\n        }\r\n    },\r\n\r\n    updatePaymentStatus: async (statusData) => {\r\n        try {\r\n            const response = await apiClient.post('payments/payos-webhook', statusData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật trạng thái thanh toán.';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Cập nhật trạng thái thanh toán\r\n     * @param {Object} statusData - Dữ liệu cập nhật trạng thái\r\n     * @param {string} statusData.orderId - ID đơn hàng\r\n     * @param {string} statusData.paymentMethod - Phương thức thanh toán ('payos' hoặc 'cash_on_delivery')\r\n     * @param {string} statusData.paymentStatus - Trạng thái thanh toán ('pending', 'processing', 'paid', 'cancelled')\r\n     * @returns {Promise<Object>} - Kết quả cập nhật\r\n     */\r\n    updatePaymentMethodStatus: async (statusData) => {\r\n        try {\r\n            const response = await apiClient.put('payments/update-status', statusData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật trạng thái thanh toán.';\r\n        }\r\n    }\r\n};\r\n\r\nconst stockApi = {\r\n    // Lấy thông tin tồn kho\r\n    getProductStocks: async () => {\r\n        try {\r\n            const response = await apiClient.get('product-stocks');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch product stocks.';\r\n        }\r\n    },\r\n\r\n    updateStock: async (stockId, stockData) => {\r\n        try {\r\n            const response = await apiClient.put(`product-stocks/${stockId}`, stockData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update stock.';\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst carrierApi = {\r\n    // Tạo nhà vận chuyển mới\r\n    createCarrier: async (carrierData) => {\r\n        try {\r\n            const response = await apiClient.post('carriers', carrierData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to create carrier.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách nhà vận chuyển\r\n    getCarriers: async (query = {}) => {\r\n        try {\r\n            const { page = 1, limit = 10 } = query;\r\n            const queryString = new URLSearchParams({ page, limit }).toString();\r\n            const response = await apiClient.get(`carriers?${queryString}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch carriers.';\r\n        }\r\n    },\r\n\r\n    // Lấy chi tiết nhà vận chuyển\r\n    getCarrierById: async (id) => {\r\n        try {\r\n            const response = await apiClient.get(`carriers/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to fetch carrier details.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật thông tin nhà vận chuyển\r\n    updateCarrier: async (id, carrierData) => {\r\n        try {\r\n            const response = await apiClient.put(`carriers/${id}`, carrierData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update carrier.';\r\n        }\r\n    },\r\n\r\n    // Xóa nhà vận chuyển\r\n    deleteCarrier: async (id) => {\r\n        try {\r\n            const response = await apiClient.delete(`carriers/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to delete carrier.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật trạng thái nhà vận chuyển\r\n    updateCarrierStatus: async (id, status) => {\r\n        try {\r\n            const response = await apiClient.patch(`carriers/${id}/status`, { status });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Failed to update carrier status.';\r\n        }\r\n    }\r\n};\r\n\r\nconst addressApi = {\r\n    // Lấy danh sách địa chỉ của người dùng\r\n    getAddresses: async () => {\r\n        try {\r\n            const response = await apiClient.get('addresses');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách địa chỉ.';\r\n        }\r\n    },\r\n\r\n    // Tạo địa chỉ mới\r\n    createAddress: async (addressData) => {\r\n        try {\r\n            const response = await apiClient.post('addresses', addressData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo địa chỉ mới.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật địa chỉ\r\n    updateAddress: async (addressId, addressData) => {\r\n        try {\r\n            const response = await apiClient.put(`addresses/${addressId}`, addressData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật địa chỉ.';\r\n        }\r\n    },\r\n\r\n    // Xóa địa chỉ\r\n    deleteAddress: async (addressId) => {\r\n        try {\r\n            const response = await apiClient.delete(`addresses/${addressId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể xóa địa chỉ.';\r\n        }\r\n    },\r\n\r\n    // Đặt địa chỉ làm mặc định\r\n    setDefaultAddress: async (addressId) => {\r\n        try {\r\n            const response = await apiClient.put(`addresses/${addressId}/default`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể đặt địa chỉ mặc định.';\r\n        }\r\n    }\r\n};\r\n\r\nconst favoriteApi = {\r\n    // Kiểm tra trạng thái yêu thích của sản phẩm\r\n    checkFavoriteStatus: async (productId) => {\r\n        try {\r\n            const response = await apiClient.get(`favorites/products/${productId}/favorite`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể kiểm tra trạng thái yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách sản phẩm yêu thích\r\n    getFavorites: async (page = 1, limit = 10) => {\r\n        try {\r\n            const response = await apiClient.get('favorites/favorites', {\r\n                params: { page, limit }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Thêm sản phẩm vào danh sách yêu thích\r\n    addToFavorite: async (productId) => {\r\n        try {\r\n            const response = await apiClient.post(`favorites/products/${productId}/favorite`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể thêm vào yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Xóa sản phẩm khỏi danh sách yêu thích\r\n    removeFromFavorite: async (productId) => {\r\n        try {\r\n            const response = await apiClient.delete(`favorites/products/${productId}/favorite`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể xóa khỏi yêu thích.';\r\n        }\r\n    },\r\n\r\n    // Chuyển danh sách yêu thích từ session sang tài khoản\r\n    transferFavorites: async () => {\r\n        try {\r\n            const response = await apiClient.post('favorites/favorites/transfer');\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể chuyển danh sách yêu thích.';\r\n        }\r\n    }\r\n};\r\n\r\nconst orderTrackingApi = {\r\n    /**\r\n     * Tra cứu thông tin đơn hàng\r\n     * @param {string} orderId - Mã đơn hàng\r\n     * @param {string} identifier - Email hoặc số điện thoại người đặt\r\n     * @returns {Promise<Object>} - Thông tin đơn hàng\r\n     */\r\n    trackOrder: async (orderId, identifier) => {\r\n        try {\r\n            const response = await apiClient.get(`order-tracking/${orderId}`, {\r\n                params: { identifier }\r\n            });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tra cứu thông tin đơn hàng.';\r\n        }\r\n    }\r\n};\r\n\r\nconst couponApi = {\r\n    // Tạo mã giảm giá mới (Admin)\r\n    createCoupon: async (couponData) => {\r\n        try {\r\n            const response = await apiClient.post('coupons', couponData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể tạo mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Lấy danh sách mã giảm giá (Admin)\r\n    getAllCoupons: async (params = {}) => {\r\n        try {\r\n            const {\r\n                page = 1,\r\n                limit = 10,\r\n                search,\r\n                is_active,\r\n                startDate,\r\n                endDate,\r\n                minAmount,\r\n                maxAmount,\r\n                sortBy = 'created_at',\r\n                sortOrder = 'DESC'\r\n            } = params;\r\n\r\n            // Xây dựng query parameters\r\n            const query = new URLSearchParams({\r\n                page: String(page),\r\n                limit: String(limit)\r\n            });\r\n\r\n            // Thêm các filter tùy chọn\r\n            if (search) {\r\n                query.append('search', search);\r\n            }\r\n\r\n            if (typeof is_active !== 'undefined') {\r\n                query.append('is_active', is_active);\r\n            }\r\n\r\n            if (startDate) {\r\n                query.append('startDate', startDate);\r\n            }\r\n\r\n            if (endDate) {\r\n                query.append('endDate', endDate);\r\n            }\r\n\r\n            if (minAmount) {\r\n                query.append('minAmount', minAmount);\r\n            }\r\n\r\n            if (maxAmount) {\r\n                query.append('maxAmount', maxAmount);\r\n            }\r\n\r\n            if (sortBy) {\r\n                query.append('sortBy', sortBy);\r\n            }\r\n\r\n            if (sortOrder) {\r\n                query.append('sortOrder', sortOrder);\r\n            }\r\n\r\n            const response = await apiClient.get(`coupons?${query}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy danh sách mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Lấy chi tiết mã giảm giá (Admin)\r\n    getCouponById: async (id) => {\r\n        try {\r\n            const response = await apiClient.get(`coupons/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy thông tin mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Kiểm tra mã giảm giá (Public)\r\n    validateCoupon: async (code) => {\r\n        try {\r\n            const response = await apiClient.post('coupons/validate', { code });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Mã giảm giá không hợp lệ.';\r\n        }\r\n    },\r\n\r\n    // Áp dụng mã giảm giá (Public)\r\n    applyCoupon: async (code) => {\r\n        try {\r\n            const response = await apiClient.post('coupons/apply', { code });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể áp dụng mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Cập nhật mã giảm giá (Admin)\r\n    updateCoupon: async (id, updateData) => {\r\n        try {\r\n            const response = await apiClient.put(`coupons/${id}`, updateData);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể cập nhật mã giảm giá.';\r\n        }\r\n    },\r\n\r\n    // Xóa mã giảm giá (Admin)\r\n    deleteCoupon: async (id) => {\r\n        try {\r\n            const response = await apiClient.delete(`coupons/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể xóa mã giảm giá.';\r\n        }\r\n    }\r\n};\r\n\r\nconst revenueApi = {\r\n    // Lấy thống kê doanh thu\r\n    getRevenueStats: async (filters = {}) => {\r\n        try {\r\n            const queryParams = new URLSearchParams();\r\n            if (filters.startDate) {\r\n                queryParams.append('startDate', filters.startDate);\r\n            }\r\n            if (filters.endDate) {\r\n                queryParams.append('endDate', filters.endDate);\r\n            }\r\n\r\n            const response = await apiClient.get(`revenue/stats?${queryParams}`);\r\n            return response;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy thống kê doanh thu.';\r\n        }\r\n    },\r\n\r\n    // Lấy doanh thu theo ngày\r\n    getDailyRevenue: async (date) => {\r\n        try {\r\n            const response = await apiClient.get('revenue/daily', {\r\n                params: { date }\r\n            });\r\n            return response;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy doanh thu theo ngày.';\r\n        }\r\n    },\r\n\r\n    // Lấy doanh thu theo tháng\r\n    getMonthlyRevenue: async (year, month) => {\r\n        try {\r\n            const response = await apiClient.get('revenue/monthly', {\r\n                params: { year, month }\r\n            });\r\n            return response;\r\n        } catch (error) {\r\n            throw error.response?.data || 'Không thể lấy doanh thu theo tháng.';\r\n        }\r\n    }\r\n};\r\n\r\n\r\n// export { apiClient, userApi, productApi, cartApi, reviewApi, productsByCategoryApi, colorsApi, indexApi, adminApi, orderApi, paymentApi, stockApi, carrierApi, addressApi, favoriteApi, orderTrackingApi, couponApi };\r\nexport {\r\n    apiClient,\r\n    userApi,\r\n    productApi,\r\n    cartApi,\r\n    reviewApi,\r\n    productsByCategoryApi,\r\n    colorsApi,\r\n    indexApi,\r\n    adminApi,\r\n    orderApi,\r\n    paymentApi,\r\n    stockApi,\r\n    carrierApi,\r\n    addressApi,\r\n    favoriteApi,\r\n    orderTrackingApi,\r\n    couponApi,\r\n    revenueApi,\r\n};\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1773, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1779, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/store/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { userApi } from '../../utils/apiClient.js';\r\n\r\n// Async actions\r\nexport const registerUser = createAsyncThunk(\r\n    'auth/registerUser',\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.register(userData);\r\n            return response;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const verifyOtp = createAsyncThunk(\r\n    'auth/verifyOtp',\r\n    async (otpData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.verifyOtp(otpData);\r\n            return response;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const loginUser = createAsyncThunk(\r\n    'auth/loginUser',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.login(credentials);\r\n            return response;\r\n        } catch (error) {\r\n            // Chuẩn hóa thông báo lỗi\r\n            return rejectWithValue({\r\n                status: 'error',\r\n                code: error.response?.data?.code || 400,\r\n                message: error.response?.data?.message === \"User not found\" || \r\n                        error.response?.data?.message === \"Invalid password\"\r\n                    ? \"Tài khoản hoặc mật khẩu không đúng\"\r\n                    : error.response?.data?.message || \"Đã có lỗi xảy ra\",\r\n                data: null\r\n            });\r\n        }\r\n    }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n    'auth/logoutUser',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            await userApi.logout();\r\n            return true;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || error.message);\r\n        }\r\n    }\r\n);\r\n\r\nexport const getUserInfo = createAsyncThunk(\r\n    'auth/getUserInfo',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.getUserProfile();\r\n            return response; // Trả về dữ liệu người dùng\r\n        } catch (error) {\r\n            // Xử lý lỗi từ apiClient\r\n            console.error('Error fetching user info:', error);\r\n            return rejectWithValue(error.message || 'Failed to fetch user info');\r\n        }\r\n    }\r\n);\r\n\r\nexport const updateProfile = createAsyncThunk(\r\n    'auth/updateProfile',\r\n    async (userData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await userApi.updateUserProfile(userData);\r\n            // Đảm bảo trả về đúng dữ liệu user đã cập nhật\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue({\r\n                message: error.response?.data?.message || 'Không thể cập nhật thông tin.'\r\n            });\r\n        }\r\n    }\r\n);\r\n\r\n// Slice\r\nconst userSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        resetAuthState: (state) => {\r\n            state.user = null;\r\n            state.token = null;\r\n            state.loading = false;\r\n            state.error = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        // Register\r\n        builder.addCase(registerUser.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(registerUser.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload.user;\r\n        });\r\n        builder.addCase(registerUser.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n        // Verify OTP\r\n        builder.addCase(verifyOtp.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(verifyOtp.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload.user;\r\n        });\r\n        builder.addCase(verifyOtp.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n\r\n        // Login\r\n        builder.addCase(loginUser.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(loginUser.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.accessToken; \r\n        });\r\n        builder.addCase(loginUser.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n\r\n        // Logout\r\n        builder.addCase(logoutUser.pending, (state) => {\r\n            state.loading = true;\r\n        });\r\n        builder.addCase(logoutUser.fulfilled, (state) => {\r\n            state.user = null;\r\n            state.token = null;\r\n            state.loading = false;\r\n        });\r\n        builder.addCase(logoutUser.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n\r\n        // Get User Info\r\n        builder.addCase(getUserInfo.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        builder.addCase(getUserInfo.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            state.user = action.payload;\r\n        });\r\n        builder.addCase(getUserInfo.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload || 'Failed to fetch user info';\r\n        });\r\n\r\n        // Update Profile\r\n        builder.addCase(updateProfile.pending, (state) => {\r\n            state.loading = true;\r\n            state.error = null;\r\n        });\r\n        // Sửa lại reducer updateProfile.fulfilled\r\n        builder.addCase(updateProfile.fulfilled, (state, action) => {\r\n            state.loading = false;\r\n            // Cập nhật state với dữ liệu mới\r\n            state.user = {\r\n                ...state.user,\r\n                ...action.payload\r\n            };\r\n            state.error = null;\r\n        });\r\n        builder.addCase(updateProfile.rejected, (state, action) => {\r\n            state.loading = false;\r\n            state.error = action.payload;\r\n        });\r\n    },\r\n});\r\n\r\n// Export actions và reducer\r\nexport const { resetAuthState } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1962, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1968, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/components/profiles/AuthInterface.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function AuthInterface({\r\n    authStep,\r\n    setAuthStep,\r\n    formData,\r\n    setFormData,\r\n    handleChange,\r\n    handleLogin,\r\n    handleRegister,\r\n    handleOtpSubmit,\r\n    handleForgotPassword,\r\n    handleResetPassword,\r\n    otp,\r\n    setOtp,\r\n    passwordVisibility,\r\n    togglePasswordVisibility,\r\n    loading,\r\n    error,\r\n}) {\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-6\">\r\n            {authStep === 'login' && (\r\n                <div className=\"bg-white p-6 rounded shadow-md max-w-md mx-auto\">\r\n                    <h2 className=\"text-2xl font-bold mb-4 text-center\">Đăng nhập</h2>\r\n                    {error && (\r\n                        <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n                            {error.message === \"User not found\" || error.message === \"Invalid password\"\r\n                                ? \"Tài khoản hoặc mật khẩu không đúng\"\r\n                                : error.message}\r\n                        </div>\r\n                    )}\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"mb-4\">\r\n                            <label>Email:</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Mật khẩu:</label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={passwordVisibility.password ? 'text' : 'password'}\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                    className=\"w-full border p-2 rounded\"\r\n                                    required\r\n                                />\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"absolute right-2 top-2 text-gray-600\"\r\n                                    onClick={() => togglePasswordVisibility('password')}\r\n                                >\r\n                                    <FontAwesomeIcon icon={passwordVisibility.password ? faEyeSlash : faEye} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition w-full\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Đang đăng nhập...' : 'Đăng nhập'}\r\n                        </button>\r\n                    </form>\r\n                    <p className=\"mt-4 text-center\">\r\n                        Bạn chưa có tài khoản?{' '}\r\n                        <button\r\n                            onClick={() => setAuthStep('register')}\r\n                            className=\"text-blue-600 hover:underline\"\r\n                        >\r\n                            Đăng ký\r\n                        </button>\r\n                        <p>\r\n                            <button\r\n                                onClick={() => setAuthStep('forgot-password')}\r\n                                className=\"text-blue-600 hover:underline\"\r\n                            >\r\n                                Quên mật khẩu?\r\n                            </button>\r\n                        </p>\r\n                    </p>\r\n                </div>\r\n            )}\r\n            {/* Thêm form quên mật khẩu */}\r\n            {authStep === 'forgot-password' && (\r\n                <div className=\"bg-white p-6 rounded shadow-md max-w-md mx-auto\">\r\n                    <h2 className=\"text-2xl font-bold mb-4 text-center\">Quên mật khẩu</h2>\r\n                    <form onSubmit={handleForgotPassword}>\r\n                        <div className=\"mb-4\">\r\n                            <label>Email:</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition w-full\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Đang gửi...' : 'Gửi mã OTP'}\r\n                        </button>\r\n                    </form>\r\n                    <p className=\"mt-4 text-center\">\r\n                        <button\r\n                            onClick={() => setAuthStep('login')}\r\n                            className=\"text-blue-600 hover:underline\"\r\n                        >\r\n                            Quay lại đăng nhập\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            )}\r\n            {/* Thêm form reset mật khẩu */}\r\n            {authStep === 'reset-password' && (\r\n                <div className=\"bg-white p-6 rounded shadow-md max-w-md mx-auto\">\r\n                    <h2 className=\"text-2xl font-bold mb-4 text-center\">Đặt lại mật khẩu</h2>\r\n                    <form onSubmit={handleResetPassword}>\r\n                        <div className=\"mb-4\">\r\n                            <label>Mã OTP:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Mật khẩu mới:</label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={passwordVisibility.newPassword ? 'text' : 'password'}\r\n                                    name=\"newPassword\"\r\n                                    value={formData.newPassword}\r\n                                    onChange={handleChange}\r\n                                    className=\"w-full border p-2 rounded\"\r\n                                    required\r\n                                />\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"absolute right-2 top-2 text-gray-600\"\r\n                                    onClick={() => togglePasswordVisibility('newPassword')}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={passwordVisibility.newPassword ? faEyeSlash : faEye}\r\n                                    />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Xác nhận mật khẩu mới:</label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={passwordVisibility.confirmNewPassword ? 'text' : 'password'}\r\n                                    name=\"confirmNewPassword\"\r\n                                    value={formData.confirmNewPassword}\r\n                                    onChange={handleChange}\r\n                                    className=\"w-full border p-2 rounded\"\r\n                                    required\r\n                                />\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"absolute right-2 top-2 text-gray-600\"\r\n                                    onClick={() => togglePasswordVisibility('confirmNewPassword')}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={passwordVisibility.confirmNewPassword ? faEyeSlash : faEye}\r\n                                    />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition w-full\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Đang xử lý...' : 'Đặt lại mật khẩu'}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n            {authStep === 'register' && (\r\n                <div className=\"bg-white p-6 rounded shadow-md max-w-md mx-auto\">\r\n                    <h2 className=\"text-2xl font-bold mb-4 text-center\">Đăng ký</h2>\r\n                    {error && (\r\n                        <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n                            {error.message || error}\r\n                        </div>\r\n                    )}\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"mb-4\">\r\n                            <label>Họ:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"firstname\"\r\n                                value={formData.firstname}\r\n                                onChange={handleChange}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Tên:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"lastname\"\r\n                                value={formData.lastname}\r\n                                onChange={handleChange}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Email:</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={formData.email}\r\n                                onChange={handleChange}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Mật khẩu:</label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={passwordVisibility.password ? 'text' : 'password'}\r\n                                    name=\"password\"\r\n                                    value={formData.password}\r\n                                    onChange={handleChange}\r\n                                    className=\"w-full border p-2 rounded\"\r\n                                    required\r\n                                />\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"absolute right-2 top-2 text-gray-600\"\r\n                                    onClick={() => togglePasswordVisibility('password')}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={passwordVisibility.password ? faEyeSlash : faEye}\r\n                                    />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Nhập lại mật khẩu:</label>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type={passwordVisibility.confirmPassword ? 'text' : 'password'}\r\n                                    name=\"confirmPassword\"\r\n                                    value={formData.confirmPassword}\r\n                                    onChange={handleChange}\r\n                                    className=\"w-full border p-2 rounded\"\r\n                                    required\r\n                                />\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"absolute right-2 top-2 text-gray-600\"\r\n                                    onClick={() => togglePasswordVisibility('confirmPassword')}\r\n                                >\r\n                                    <FontAwesomeIcon\r\n                                        icon={passwordVisibility.confirmPassword ? faEyeSlash : faEye}\r\n                                    />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Số điện thoại:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"phone\"\r\n                                value={formData.phone}\r\n                                onChange={handleChange}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label>Chọn giới tinh:</label>\r\n                            <select\r\n                                name=\"gender\"\r\n                                value={formData.gender}\r\n                                onChange={handleChange}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            >\r\n                                <option value=\"\">Chọn</option>\r\n                                <option value=\"male\">Nam</option>\r\n                                <option value=\"female\">Nữ</option>\r\n                                <option value=\"other\">Khác</option>\r\n                            </select>\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition w-full\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Đang đăng ký...' : 'Đăng ký'}\r\n                        </button>\r\n                    </form>\r\n                    <p className=\"mt-4 text-center\">\r\n                        Đã có tài khoản?{' '}\r\n                        <button\r\n                            onClick={() => setAuthStep('login')}\r\n                            className=\"text-blue-600 hover:underline\"\r\n                        >\r\n                            Đăng nhập\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            )}\r\n            {authStep === 'otp' && (\r\n                <div className=\"bg-white p-6 rounded shadow-md max-w-md mx-auto\">\r\n                    <h2 className=\"text-2xl font-bold mb-4 text-center\">Xác nhận OTP</h2>\r\n                    <p className=\"mb-4 text-center\">Mã OTP đã được gửi đến email của bạn.</p>\r\n                    <form onSubmit={handleOtpSubmit}>\r\n                        <div className=\"mb-4\">\r\n                            <label>Nhập OTP:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                className=\"w-full border p-2 rounded\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition w-full\"\r\n                            disabled={loading}\r\n                        >\r\n                            {loading ? 'Đang xác thực...' : 'Xác thực OTP'}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2817, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2823, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/components/profiles/ProfileInterface.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { addressApi } from '../../utils/apiClient';\r\nimport { FiEdit2 } from \"react-icons/fi\"; // Icon sửa\r\nimport { RiDeleteBinLine } from \"react-icons/ri\"; // Icon xóa\r\nimport { MdStars } from \"react-icons/md\"; // Icon mặc định\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { updateProfile } from '../../store/slices/userSlice';\r\n\r\n\r\n\r\n// Component hiển thị trạng thái đơn hàng\r\nconst StatusBadge = ({ status }) => {\r\n    const getStatusColor = () => {\r\n        switch (status?.toLowerCase()) {\r\n            case 'pending':\r\n                return 'bg-yellow-100 text-yellow-800';\r\n            case 'processing':\r\n                return 'bg-gray-100 text-gray-800';\r\n            case 'shipping':\r\n                return 'bg-indigo-100 text-indigo-800';\r\n            case 'completed':\r\n                return 'bg-green-100 text-green-800';\r\n            case 'cancelled':\r\n                return 'bg-red-100 text-red-800';\r\n            default:\r\n                return 'bg-gray-100 text-gray-800';\r\n        }\r\n    };\r\n\r\n    const getStatusText = () => {\r\n        switch (status?.toLowerCase()) {\r\n            case 'pending':\r\n                return 'Chờ xử lý';\r\n            case 'processing':\r\n                return 'Đang xử lý';\r\n            case 'shipping':\r\n                return 'Đang giao hàng';\r\n            case 'completed':\r\n                return 'Hoàn thành';\r\n            case 'cancelled':\r\n                return 'Đã hủy';\r\n            default:\r\n                return 'Không xác định';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor()}`}>\r\n            {getStatusText()}\r\n        </span>\r\n    );\r\n};\r\n\r\n// Component hiển thị trạng thái thanh toán\r\nconst PaymentStatusBadge = ({ status }) => {\r\n    const getPaymentStatusColor = () => {\r\n        switch (status?.toLowerCase()) {\r\n            case 'paid':\r\n                return 'bg-green-100 text-green-800';\r\n            case 'pending':\r\n                return 'bg-yellow-100 text-yellow-800';\r\n            case 'failed':\r\n                return 'bg-red-100 text-red-800';\r\n            default:\r\n                return 'bg-gray-100 text-gray-800';\r\n        }\r\n    };\r\n\r\n    const getPaymentStatusText = () => {\r\n        switch (status?.toLowerCase()) {\r\n            case 'paid':\r\n                return 'Đã thanh toán';\r\n            case 'pending':\r\n                return 'Chờ thanh toán';\r\n            case 'failed':\r\n                return 'Thanh toán thất bại';\r\n            default:\r\n                return 'Không xác định';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <span className={`px-2 py-1 rounded-full text-xs font-medium ${getPaymentStatusColor()}`}>\r\n            {getPaymentStatusText()}\r\n        </span>\r\n    );\r\n};\r\n\r\n// Component hiển thị thông tin đơn hàng dạng card\r\nconst OrderCard = ({ order, onViewDetail }) => {\r\n    const formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString('vi-VN', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    const formatPrice = (price) => {\r\n        return new Intl.NumberFormat('vi-VN', {\r\n            style: 'currency',\r\n            currency: 'VND'\r\n        }).format(price);\r\n    };\r\n\r\n    return (\r\n        <div className=\"border rounded-lg p-3 lg:p-4 hover:shadow-md transition duration-200\">\r\n            {/* Header */}\r\n            <div className=\"flex flex-col sm:flex-row justify-between items-start gap-2 mb-4\">\r\n                <div className=\"w-full sm:w-auto\">\r\n                    <p className=\"font-medium text-base lg:text-lg\">Đơn hàng #{order.id}</p>\r\n                    <p className=\"text-xs lg:text-sm text-gray-600\">{formatDate(order.dates.created_at)}</p>\r\n                </div>\r\n                <StatusBadge status={order.status} />\r\n            </div>\r\n\r\n            {/* Preview sản phẩm */}\r\n            <div className=\"space-y-3\">\r\n                {order.items.slice(0, 2).map((item, index) => (\r\n                    <div key={index} className=\"flex items-start gap-2 lg:gap-4\">\r\n                        <img\r\n                            src={item.variant.color.image}\r\n                            className=\"w-14 h-14 lg:w-16 lg:h-16 object-cover rounded\"\r\n                            alt={item.product.name}\r\n                        />\r\n                        <div className=\"flex-1 min-w-0\"> {/* Prevent text overflow */}\r\n                            <p className=\"font-medium text-sm lg:text-base truncate\">\r\n                                {item.product.name}\r\n                            </p>\r\n                            <p className=\"text-xs lg:text-sm text-gray-600 truncate\">\r\n                            Màu: {item.variant.color.name} | Size: {item.variant.size}\r\n                            </p>\r\n                            <p className=\"text-xs lg:text-sm text-gray-600\">\r\n                                {item.quantity} x {formatPrice(item.price)}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Footer */}\r\n            <div className=\"flex justify-between items-center border-t pt-3\">\r\n                <div>\r\n                    <p className=\"text-sm text-gray-600\">Tổng tiền</p>\r\n                    <p className=\"font-medium text-lg text-gray-600\">\r\n                        {formatPrice(order.pricing.final_price)}\r\n                    </p>\r\n                </div>\r\n                <button\r\n                    onClick={() => onViewDetail(order)}\r\n                    className=\"px-4 py-2 text-gray-600 hover:bg-gray-50 rounded-lg transition\"\r\n                >\r\n                    Xem chi tiết\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Component Modal chi tiết đơn hàng\r\nconst OrderDetail = ({ order, onClose }) => {\r\n    const formatDate = (dateString) => {\r\n        return new Date(dateString).toLocaleDateString('vi-VN', {\r\n            year: 'numeric',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            hour: '2-digit',\r\n            minute: '2-digit'\r\n        });\r\n    };\r\n\r\n    const formatPrice = (price) => {\r\n        return new Intl.NumberFormat('vi-VN', {\r\n            style: 'currency',\r\n            currency: 'VND'\r\n        }).format(price);\r\n    };\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\r\n            <div className=\"bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto m-4\">\r\n                {/* Header */}\r\n                <div className=\"sticky top-0 bg-white p-4 border-b flex justify-between items-center\">\r\n                    <div>\r\n                        <h3 className=\"text-lg font-medium\">Chi tiết đơn hàng #{order.id}</h3>\r\n                        <StatusBadge status={order.status} />\r\n                    </div>\r\n                    <button onClick={onClose} className=\"text-gray-500 hover:text-gray-700\">\r\n                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"p-6 space-y-6\">\r\n                    {/* Thông tin người nhận */}\r\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                        <h4 className=\"font-medium mb-3\">Thông tin người nhận</h4>\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-600\">Họ tên</p>\r\n                                <p className=\"font-medium\">{order.shipping.recipient.name}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-600\">Số điện thoại</p>\r\n                                <p className=\"font-medium\">{order.shipping.recipient.phone}</p>\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-600\">Email</p>\r\n                                <p className=\"font-medium\">{order.shipping.recipient.email}</p>\r\n                            </div>\r\n                            <div className=\"col-span-2\">\r\n                                <p className=\"text-sm text-gray-600\">Địa chỉ</p>\r\n                                <p className=\"font-medium\">\r\n                                    {`${order.shipping.recipient.address.street}, ${order.shipping.recipient.address.ward}, \r\n                                    ${order.shipping.recipient.address.district}, ${order.shipping.recipient.address.city}`}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Danh sách sản phẩm */}\r\n                    <div>\r\n                        <h4 className=\"font-medium mb-3\">Sản phẩm</h4>\r\n                        <div className=\"space-y-3\">\r\n                            {order.items.map((item, index) => (\r\n                                <div key={index} className=\"flex gap-4 p-3 bg-gray-50 rounded\">\r\n                                    <img\r\n                                        src={item.variant.color.image}\r\n                                        className=\"w-20 h-20 object-cover rounded\"\r\n                                        alt={item.product.name}\r\n                                    />\r\n                                    <div className=\"flex-1\">\r\n                                        <p className=\"font-medium\">{item.product.name}</p>\r\n                                        <p className=\"text-sm text-gray-600\">\r\n                                            Màu: {item.variant.color.name} | Size: {item.variant.size}\r\n                                        </p>\r\n                                        <div className=\"flex justify-between mt-2\">\r\n                                            <p className=\"text-sm\">Số lượng: {item.quantity}</p>\r\n                                            <p className=\"font-medium\">{formatPrice(item.price)}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Thông tin vận chuyển và thanh toán */}\r\n                    <div className=\"grid grid-cols-2 gap-6\">\r\n                        <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                            <h4 className=\"font-medium mb-3\">Thông tin vận chuyển</h4>\r\n                            <p className=\"text-sm text-gray-600\">Đơn vị vận chuyển</p>\r\n                            <p className=\"font-medium mb-2\">{order.shipping.carrier}</p>\r\n                            <p className=\"text-sm text-gray-600\">Phí vận chuyển</p>\r\n                            <p className=\"font-medium\">{formatPrice(order.shipping.shipping_fee)}</p>\r\n                        </div>\r\n                        <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                            <h4 className=\"font-medium mb-3\">Thông tin thanh toán</h4>\r\n                            <p className=\"text-sm text-gray-600\">Phương thức</p>\r\n                            <p className=\"font-medium mb-2\">\r\n                                {order.payment.method === 'cash_on_delivery' ? 'Thanh toán khi nhận hàng' : order.payment.method}\r\n                            </p>\r\n                            <p className=\"text-sm text-gray-600\">Trạng thái</p>\r\n                            <PaymentStatusBadge status={order.payment.status} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Tổng quan giá */}\r\n                    <div className=\"border-t pt-4\">\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"text-gray-600\">Tổng tiền hàng</span>\r\n                                <span>{formatPrice(order.pricing.original_price)}</span>\r\n                            </div>\r\n                            {parseFloat(order.pricing.discount_amount) > 0 && (\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-gray-600\">Giảm giá</span>\r\n                                    <span className=\"text-red-600\">\r\n                                        -{formatPrice(order.pricing.discount_amount)}\r\n                                    </span>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"text-gray-600\">Phí vận chuyển</span>\r\n                                <span>{formatPrice(order.shipping.shipping_fee)}</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between font-medium text-lg pt-2 border-t\">\r\n                                <span>Tổng cộng</span>\r\n                                <span className=\"text-gray-600\">{formatPrice(order.pricing.final_price)}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Component chính ProfileInterface\r\nexport default function ProfileInterface({\r\n    user,\r\n    userLoading,\r\n    handleLogout,\r\n    selectedTab,\r\n    setSelectedTab,\r\n    orders,\r\n    orderLoading\r\n}) {\r\n    // Thêm vào component ProfileInterface\r\n    const [addresses, setAddresses] = useState([]);\r\n    const [addressLoading, setAddressLoading] = useState(false);\r\n    const [showAddressForm, setShowAddressForm] = useState(false);\r\n    const [selectedAddress, setSelectedAddress] = useState(null);\r\n    const [addressFormData, setAddressFormData] = useState({\r\n        street: '',\r\n        ward: '',\r\n        district: '',\r\n        city: '',\r\n        country: 'Vietnam',\r\n        address_type: 'home',\r\n        is_default: false\r\n    });\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [districts, setDistricts] = useState([]);\r\n    const [wards, setWards] = useState([]);\r\n    const [selectedOrder, setSelectedOrder] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [profileData, setProfileData] = useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        phone: '',\r\n        gender: ''\r\n    });\r\n    const [updateLoading, setUpdateLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setProfileData({\r\n                firstname: user.firstname || '',\r\n                lastname: user.lastname || '',\r\n                phone: user.phone || '',\r\n                gender: user.gender || ''\r\n            });\r\n        }\r\n    }, [user]);\r\n\r\n    const handleProfileChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setProfileData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    // Thêm handler cho submit\r\n    const handleUpdateProfile = async (e) => {\r\n        e.preventDefault();\r\n        setUpdateLoading(true);\r\n        try {\r\n            // Tạo object data thay vì FormData\r\n            const updateData = {\r\n                firstname: profileData.firstname,\r\n                lastname: profileData.lastname,\r\n                phone: profileData.phone,\r\n                gender: profileData.gender\r\n            };\r\n\r\n            const result = await dispatch(updateProfile(updateData)).unwrap();\r\n\r\n            // Cập nhật state với dữ liệu mới\r\n            setProfileData({\r\n                firstname: result.firstname || '',\r\n                lastname: result.lastname || '',\r\n                phone: result.phone || '',\r\n                gender: result.gender || ''\r\n            });\r\n\r\n            setIsEditing(false);\r\n            toast.success('Cập nhật thông tin thành công!');\r\n        } catch (error) {\r\n            toast.error(error.message || 'Có lỗi xảy ra khi cập nhật thông tin');\r\n        } finally {\r\n            setUpdateLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // Fetch addresses\r\n    const fetchAddresses = async () => {\r\n        try {\r\n            setAddressLoading(true);\r\n            const response = await addressApi.getAddresses();\r\n            setAddresses(response.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch addresses:', error);\r\n        } finally {\r\n            setAddressLoading(false);\r\n        }\r\n    };\r\n\r\n    // Handle form submission\r\n    const handleAddressSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (selectedAddress) {\r\n                await addressApi.updateAddress(selectedAddress.id, addressFormData);\r\n            } else {\r\n                await addressApi.createAddress(addressFormData);\r\n            }\r\n            fetchAddresses();\r\n            setShowAddressForm(false);\r\n            setSelectedAddress(null);\r\n            setAddressFormData({\r\n                street: '',\r\n                ward: '',\r\n                district: '',\r\n                city: '',\r\n                country: 'Vietnam',\r\n                address_type: 'home',\r\n                is_default: false\r\n            });\r\n        } catch (error) {\r\n            console.error('Failed to save address:', error);\r\n        }\r\n    };\r\n\r\n    // Handle address deletion\r\n    const handleDeleteAddress = async (addressId) => {\r\n        if (window.confirm('Bạn có chắc chắn muốn xóa địa chỉ này?')) {\r\n            try {\r\n                await addressApi.deleteAddress(addressId);\r\n                fetchAddresses();\r\n            } catch (error) {\r\n                console.error('Failed to delete address:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle setting default address\r\n    const handleSetDefaultAddress = async (addressId) => {\r\n        try {\r\n            await addressApi.setDefaultAddress(addressId);\r\n            fetchAddresses();\r\n        } catch (error) {\r\n            console.error('Failed to set default address:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchProvinces = async () => {\r\n            try {\r\n                const response = await fetch('https://provinces.open-api.vn/api/?depth=3');\r\n                const data = await response.json();\r\n                setProvinces(data);\r\n            } catch (error) {\r\n                console.error('Failed to fetch provinces:', error);\r\n            }\r\n        };\r\n        fetchProvinces();\r\n    }, []);\r\n\r\n    const handleProvinceChange = (e) => {\r\n        const provinceCode = e.target.value;\r\n        const selectedProvince = provinces.find(p => p.code === Number(provinceCode));\r\n\r\n        setAddressFormData({\r\n            ...addressFormData,\r\n            city: selectedProvince?.name || '',\r\n            district: '',\r\n            ward: ''\r\n        });\r\n\r\n        setDistricts(selectedProvince?.districts || []);\r\n        setWards([]);\r\n    };\r\n\r\n    const handleDistrictChange = (e) => {\r\n        const districtCode = e.target.value;\r\n        const selectedDistrict = districts.find(d => d.code === Number(districtCode));\r\n\r\n        setAddressFormData({\r\n            ...addressFormData,\r\n            district: selectedDistrict?.name || '',\r\n            ward: ''\r\n        });\r\n\r\n        setWards(selectedDistrict?.wards || []);\r\n    };\r\n\r\n    const handleWardChange = (e) => {\r\n        const wardCode = e.target.value;\r\n        const selectedWard = wards.find(w => w.code === Number(wardCode));\r\n\r\n        setAddressFormData({\r\n            ...addressFormData,\r\n            ward: selectedWard?.name || ''\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedTab === 'address') {\r\n            fetchAddresses();\r\n        }\r\n    }, [selectedTab]);\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-6\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Hồ sơ của tôi</h1>\r\n            <div className=\"flex flex-col md:flex-row gap-6\">\r\n                {/* Sidebar */}\r\n                <div className=\"w-full lg:w-1/4 bg-white p-4 rounded shadow-md\">\r\n                    <button\r\n                        className={`w-full text-left px-4 py-2 mb-2 rounded transition duration-200 \r\n                            ${selectedTab === 'info'\r\n                                ? 'bg-gray-600 text-white'\r\n                                : 'bg-gray-100 hover:bg-gray-200'\r\n                            }`}\r\n                        onClick={() => setSelectedTab('info')}\r\n                    >\r\n                        Thông tin cá nhân\r\n                    </button>\r\n                    <button\r\n                        className={`w-full text-left px-4 py-2 mb-2 rounded transition duration-200 \r\n                            ${selectedTab === 'orders'\r\n                                ? 'bg-gray-600 text-white'\r\n                                : 'bg-gray-100 hover:bg-gray-200'\r\n                            }`}\r\n                        onClick={() => {\r\n                            setSelectedTab('orders');\r\n                            setIsEditing(false);\r\n                        }}\r\n                    >\r\n                        Đơn hàng của tôi\r\n                    </button>\r\n                    <button\r\n                        className={`w-full text-left px-4 py-2 mb-2 rounded transition duration-200 \r\n                            ${selectedTab === 'address'\r\n                                ? 'bg-gray-600 text-white'\r\n                                : 'bg-gray-100 hover:bg-gray-200'\r\n                            }`}\r\n                        onClick={() => {\r\n                            setSelectedTab('address');\r\n                            setIsEditing(false);\r\n                        }}\r\n                    >\r\n                        Sổ địa chỉ\r\n                    </button>\r\n                    <button\r\n                        className=\"w-full bg-red-600 text-white px-4 py-2 rounded hover:bg-red-600 \r\n                            transition duration-200 mt-6\"\r\n                        onClick={handleLogout}\r\n                    >\r\n                        Đăng xuất\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Main Content */}\r\n                <div className=\"w-full lg:w-3/4 bg-white p-4 lg:p-6 rounded shadow-md\">\r\n                    {/* Personal Info Tab */}\r\n                    {selectedTab === 'info' && (\r\n                        <div>\r\n                            <div className=\"flex justify-between items-center mb-6\">\r\n                                <h2 className=\"text-xl font-semibold\">Thông tin cá nhân</h2>\r\n                                {!isEditing && (\r\n                                    <button\r\n                                        onClick={() => setIsEditing(true)}\r\n                                        className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                                    >\r\n                                        <FiEdit2 className=\"w-5 h-5 text-gray-600 \" />\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n\r\n                            {userLoading ? (\r\n                                <div className=\"flex justify-center items-center h-40\">\r\n                                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-600\"></div>\r\n                                </div>\r\n                            ) : user ? (\r\n                                isEditing ? (\r\n                                    // Form cập nhật\r\n                                    <form onSubmit={handleUpdateProfile} className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                                        {/* Họ */}\r\n                                        <div className=\"space-y-2\">\r\n                                            <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                Họ <span className=\"text-red-500\">*</span>\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"firstname\"\r\n                                                value={profileData.firstname}\r\n                                                onChange={handleProfileChange}\r\n                                                className=\"w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-gray-200\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n\r\n                                        {/* Tên */}\r\n                                        <div className=\"space-y-2\">\r\n                                            <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                Tên <span className=\"text-red-500\">*</span>\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                name=\"lastname\"\r\n                                                value={profileData.lastname}\r\n                                                onChange={handleProfileChange}\r\n                                                className=\"w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-gray-200\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n\r\n                                        {/* Email - readonly */}\r\n                                        <div className=\"space-y-2\">\r\n                                            <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                value={user.email}\r\n                                                className=\"w-full px-4 py-2 border rounded-lg bg-gray-50\"\r\n                                                disabled\r\n                                            />\r\n                                        </div>\r\n\r\n                                        {/* Số điện thoại */}\r\n                                        <div className=\"space-y-2\">\r\n                                            <label className=\"block text-sm font-medium text-gray-700\">Số điện thoại</label>\r\n                                            <input\r\n                                                type=\"tel\"\r\n                                                name=\"phone\"\r\n                                                value={profileData.phone}\r\n                                                onChange={handleProfileChange}\r\n                                                className=\"w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-gray-200\"\r\n                                            />\r\n                                        </div>\r\n\r\n                                        {/* Giới tính */}\r\n                                        <div className=\"space-y-2\">\r\n                                            <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                Giới tính\r\n                                            </label>\r\n                                            <select\r\n                                                name=\"gender\"\r\n                                                value={profileData.gender}\r\n                                                onChange={handleProfileChange}\r\n                                                className=\"w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-gray-200\"\r\n                                            >\r\n                                                <option value=\"\">Chọn giới tính</option>\r\n                                                <option value=\"male\">Nam</option>\r\n                                                <option value=\"female\">Nữ</option>\r\n                                                <option value=\"other\">Khác</option>\r\n                                            </select>\r\n                                        </div>\r\n\r\n                                        {/* Buttons */}\r\n                                        <div className=\"md:col-span-2 flex justify-end gap-4\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={() => {\r\n                                                    setIsEditing(false);\r\n                                                    setProfileData({\r\n                                                        firstname: user.firstname || '',\r\n                                                        lastname: user.lastname || '',\r\n                                                        phone: user.phone || '',\r\n                                                        gender: user.gender || ''\r\n                                                    });\r\n                                                }}\r\n                                                className=\"px-6 py-2 border border-gray-300 rounded-lg hover:bg-gray-50\"\r\n                                            >\r\n                                                Hủy\r\n                                            </button>\r\n                                            <button\r\n                                                type=\"submit\"\r\n                                                disabled={updateLoading}\r\n                                                className={`px-6 py-2 rounded-lg text-white\r\n                                ${updateLoading ? 'bg-gray-400' : 'bg-green-600 hover:bg-green-700'}`}\r\n                                            >\r\n                                                {updateLoading ? 'Đang cập nhật...' : 'Lưu thay đổi'}\r\n                                            </button>\r\n                                        </div>\r\n                                    </form>\r\n                                ) : (\r\n                                    // Hiển thị thông tin\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                        <div className=\"space-y-2\">\r\n                                            <p className=\"text-sm font-medium text-gray-700\">Họ</p>\r\n                                            <p className=\"\">{user.firstname || 'Chưa cập nhật'}</p>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <p className=\"text-sm font-medium text-gray-700\">Tên</p>\r\n                                            <p className=\"\">{user.lastname || 'Chưa cập nhật'}</p>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <p className=\"text-sm font-medium text-gray-700\">Email</p>\r\n                                            <p className=\"\">{user.email || 'Chưa cập nhật'}</p>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <p className=\"text-sm font-medium text-gray-700\">Số điện thoại</p>\r\n                                            <p className=\"\">{user.phone || 'Chưa cập nhật'}</p>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <p className=\"text-sm font-medium text-gray-700\">Giới tính</p>\r\n                                            <p className=\"\">\r\n                                                {user.gender === \"male\" ? \"Nam\" :\r\n                                                    user.gender === \"female\" ? \"Nữ\" :\r\n                                                        user.gender === \"other\" ? \"Khác\" : \"Chưa cập nhật\"}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            ) : (\r\n                                <div className=\"text-center py-8 text-gray-500\">\r\n                                    <p>Không thể tải thông tin người dùng</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Orders Tab */}\r\n                    {selectedTab === 'orders' && (\r\n                        <div>\r\n                            <h2 className=\"text-xl font-semibold mb-6\">Đơn hàng của tôi</h2>\r\n                            {orderLoading ? (\r\n                                <div className=\"flex justify-center items-center h-40\">\r\n                                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-600\"></div>\r\n                                </div>\r\n                            ) : orders?.data?.orders?.length > 0 ? (\r\n                                <div className=\"space-y-4\">\r\n                                    {orders.data.orders.map((order) => (\r\n                                        <OrderCard\r\n                                            key={order.id}\r\n                                            order={order}\r\n                                            onViewDetail={setSelectedOrder}\r\n                                        />\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"text-center py-8 text-gray-500\">\r\n                                    <p>Bạn chưa có đơn hàng nào</p>\r\n                                </div>\r\n                            )}\r\n\r\n                            {selectedOrder && (\r\n                                <OrderDetail\r\n                                    order={selectedOrder}\r\n                                    onClose={() => setSelectedOrder(null)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Address Tab */}\r\n                    {selectedTab === 'address' && (\r\n                        <div>\r\n                            <div className=\"flex justify-between items-center mb-6\">\r\n                                <h2 className=\"text-xl font-semibold\">Sổ địa chỉ</h2>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        setShowAddressForm(true);\r\n                                        setSelectedAddress(null);\r\n                                    }}\r\n                                    className=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700\"\r\n                                >\r\n                                    Thêm địa chỉ mới\r\n                                </button>\r\n                            </div>\r\n\r\n                            {addressLoading ? (\r\n                                <div className=\"flex justify-center items-center h-40\">\r\n                                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-600\"></div>\r\n                                </div>\r\n                            ) : addresses.length > 0 ? (\r\n                                /* Address List */\r\n                                <div className=\"space-y-4\">\r\n                                    {addresses.map((address) => (\r\n                                        <div key={address.id}\r\n                                            className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition duration-200\">\r\n                                            <div className=\"flex flex-col sm:flex-row justify-between gap-4\">\r\n                                                {/* Address Information */}\r\n                                                <div className=\"flex-1 min-w-0\">\r\n                                                    <div className=\"flex flex-wrap items-center gap-2 mb-3\">\r\n                                                        <span className=\"font-medium text-sm sm:text-base text-gray-800\">\r\n                                                            {address.address_type === 'home' ? 'Nhà riêng' :\r\n                                                                address.address_type === 'office' ? 'Văn phòng' : 'Khác'}\r\n                                                        </span>\r\n                                                        {address.is_default && (\r\n                                                            <span className=\"bg-gray-100 text-gray-800 text-xs px-2.5 py-1 rounded-full \r\n                                                                font-medium flex items-center gap-1\">\r\n                                                                <MdStars className=\"w-4 h-4\" />\r\n                                                                Mặc định\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                    {/* Address Details */}\r\n                                                    <div className=\"space-y-2 text-sm sm:text-base\">\r\n                                                        <div className=\"flex flex-col sm:flex-row sm:items-baseline\">\r\n                                                            <span className=\"text-gray-700 font-medium w-full sm:w-32 shrink-0\">\r\n                                                                Số nhà, Đường:\r\n                                                            </span>\r\n                                                            <span className=\"text-gray-600 break-words\">\r\n                                                                {address.street}\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"flex flex-col sm:flex-row sm:items-baseline\">\r\n                                                            <span className=\"text-gray-700 font-medium w-full sm:w-32 shrink-0\">\r\n                                                                Phường/Xã:\r\n                                                            </span>\r\n                                                            <span className=\"text-gray-600 break-words\">\r\n                                                                {address.ward}\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"flex flex-col sm:flex-row sm:items-baseline\">\r\n                                                            <span className=\"text-gray-700 font-medium w-full sm:w-32 shrink-0\">\r\n                                                                Quận/Huyện:\r\n                                                            </span>\r\n                                                            <span className=\"text-gray-600 break-words\">\r\n                                                                {address.district}\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"flex flex-col sm:flex-row sm:items-baseline\">\r\n                                                            <span className=\"text-gray-700 font-medium w-full sm:w-32 shrink-0\">\r\n                                                                Tỉnh/Thành phố:\r\n                                                            </span>\r\n                                                            <span className=\"text-gray-600 break-words\">\r\n                                                                {address.city}\r\n                                                            </span>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"flex flex-col sm:flex-row sm:items-baseline\">\r\n                                                            <span className=\"text-gray-700 font-medium w-full sm:w-32 shrink-0\">\r\n                                                                Quốc gia:\r\n                                                            </span>\r\n                                                            <span className=\"text-gray-600 break-words\">\r\n                                                                {address.country}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                {/* Action Buttons */}\r\n                                                <div className=\"flex sm:flex-col items-center gap-2\">\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            setSelectedAddress(address);\r\n                                                            setAddressFormData(address);\r\n                                                            setShowAddressForm(true);\r\n                                                        }}\r\n                                                        className=\"p-2 hover:bg-gray-100 rounded-full transition-colors\"\r\n                                                        title=\"Sửa địa chỉ\"\r\n                                                    >\r\n                                                        <FiEdit2 className=\"w-5 h-5 text-gray-600\" />\r\n                                                    </button>\r\n\r\n                                                    <button\r\n                                                        onClick={() => handleDeleteAddress(address.id)}\r\n                                                        className=\"p-2 hover:bg-red-50 rounded-full transition-colors\"\r\n                                                        title=\"Xóa địa chỉ\"\r\n                                                    >\r\n                                                        <RiDeleteBinLine className=\"w-5 h-5 text-red-600\" />\r\n                                                    </button>\r\n\r\n                                                    {!address.is_default && (\r\n                                                        <button\r\n                                                            onClick={() => handleSetDefaultAddress(address.id)}\r\n                                                            className=\"p-2 hover:bg-yellow-50 rounded-full transition-colors\"\r\n                                                            title=\"Đặt làm địa chỉ mặc định\"\r\n                                                        >\r\n                                                            <MdStars className=\"w-5 h-5 text-yellow-600\" />\r\n                                                        </button>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"text-center py-8\">\r\n                                    <div className=\"text-gray-400 mb-3\">\r\n                                        <svg className=\"mx-auto h-12 w-12\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\r\n                                                d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <p className=\"text-gray-500 text-lg\">Chưa có địa chỉ nào được lưu</p>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Address Form Modal */}\r\n                            {showAddressForm && (\r\n                                <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\r\n                                    <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\r\n                                        {/* Header */}\r\n                                        <div className=\"sticky top-0 bg-white px-6 py-4 border-b flex justify-between items-center\">\r\n                                            <h3 className=\"text-lg font-medium text-gray-900\">\r\n                                                {selectedAddress ? 'Cập nhật địa chỉ' : 'Thêm địa chỉ mới'}\r\n                                            </h3>\r\n                                            <button\r\n                                                onClick={() => {\r\n                                                    setShowAddressForm(false);\r\n                                                    setSelectedAddress(null);\r\n                                                }}\r\n                                                className=\"text-gray-400 hover:text-gray-500 transition-colors\"\r\n                                            >\r\n                                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        <form onSubmit={handleAddressSubmit} className=\"p-6 space-y-4\">\r\n                                            {/* Address Type */}\r\n                                            <div className=\"space-y-1\">\r\n                                                <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                    Loại địa chỉ\r\n                                                </label>\r\n                                                <select\r\n                                                    value={addressFormData.address_type}\r\n                                                    onChange={(e) => setAddressFormData({\r\n                                                        ...addressFormData,\r\n                                                        address_type: e.target.value\r\n                                                    })}\r\n                                                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none \r\n                                                                focus:ring-2 focus:ring-gray-500 focus:border-transparent\"\r\n                                                >\r\n                                                    <option value=\"home\">Nhà riêng</option>\r\n                                                    <option value=\"office\">Văn phòng</option>\r\n                                                    <option value=\"other\">Khác</option>\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            {/* Street Address */}\r\n                                            <div className=\"space-y-1\">\r\n                                                <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                    Số nhà, Đường\r\n                                                </label>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={addressFormData.street}\r\n                                                    onChange={(e) => setAddressFormData({\r\n                                                        ...addressFormData,\r\n                                                        street: e.target.value\r\n                                                    })}\r\n                                                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none \r\n                                                                focus:ring-2 focus:ring-gray-500 focus:border-transparent\"\r\n                                                    required\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* City */}\r\n                                            <div className=\"space-y-1\">\r\n                                                <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                    Tỉnh/Thành phố\r\n                                                </label>\r\n                                                <select\r\n                                                    value={provinces.find(p => p.name === addressFormData.city)?.code || ''}\r\n                                                    onChange={handleProvinceChange}\r\n                                                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none \r\n                                                                focus:ring-2 focus:ring-gray-500 focus:border-transparent\"\r\n                                                    required\r\n                                                >\r\n                                                    <option value=\"\">Chọn Tỉnh/Thành phố</option>\r\n                                                    {provinces.map(province => (\r\n                                                        <option key={province.code} value={province.code}>\r\n                                                            {province.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            {/* District */}\r\n                                            <div className=\"space-y-1\">\r\n                                                <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                    Quận/Huyện\r\n                                                </label>\r\n                                                <select\r\n                                                    value={districts.find(d => d.name === addressFormData.district)?.code || ''}\r\n                                                    onChange={handleDistrictChange}\r\n                                                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none \r\n                                                                focus:ring-2 focus:ring-gray-500 focus:border-transparent\"\r\n                                                    required\r\n                                                    disabled={!addressFormData.city}\r\n                                                >\r\n                                                    <option value=\"\">Chọn Quận/Huyện</option>\r\n                                                    {districts.map(district => (\r\n                                                        <option key={district.code} value={district.code}>\r\n                                                            {district.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            {/* Ward */}\r\n                                            <div className=\"space-y-1\">\r\n                                                <label className=\"block text-sm font-medium text-gray-700\">\r\n                                                    Phường/Xã\r\n                                                </label>\r\n                                                <select\r\n                                                    value={wards.find(w => w.name === addressFormData.ward)?.code || ''}\r\n                                                    onChange={handleWardChange}\r\n                                                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none \r\n                                                                focus:ring-2 focus:ring-gray-500 focus:border-transparent\"\r\n                                                    required\r\n                                                    disabled={!addressFormData.district}\r\n                                                >\r\n                                                    <option value=\"\">Chọn Phường/Xã</option>\r\n                                                    {wards.map(ward => (\r\n                                                        <option key={ward.code} value={ward.code}>\r\n                                                            {ward.name}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n                                            {/* Default Address Checkbox */}\r\n                                            <div className=\"flex items-center\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    id=\"is_default\"\r\n                                                    checked={addressFormData.is_default}\r\n                                                    onChange={(e) => setAddressFormData({\r\n                                                        ...addressFormData,\r\n                                                        is_default: e.target.checked\r\n                                                    })}\r\n                                                    className=\"h-4 w-4 text-gray-600 focus:ring-gray-500 border-gray-300 rounded\"\r\n                                                />\r\n                                                <label htmlFor=\"is_default\" className=\"ml-2 text-sm text-gray-700\">\r\n                                                    Đặt làm địa chỉ mặc định\r\n                                                </label>\r\n                                            </div>\r\n                                            {/* Form Actions */}\r\n                                            <div className=\"flex justify-end gap-3 pt-4 border-t\">\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => {\r\n                                                        setShowAddressForm(false);\r\n                                                        setSelectedAddress(null);\r\n                                                    }}\r\n                                                    className=\"px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500 \r\n                                                                transition-colors\"\r\n                                                >\r\n                                                    Hủy\r\n                                                </button>\r\n                                                <button\r\n                                                    type=\"submit\"\r\n                                                    className=\"px-4 py-2 bg-gray-600 text-white text-sm font-medium rounded-lg \r\n                                                                hover:bg-gray-700 transition-colors\"\r\n                                                >\r\n                                                    {selectedAddress ? 'Cập nhật' : 'Thêm mới'}\r\n                                                </button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAKA;AACA;AAFA;AAHA,gPAA0C,WAAW;AAErD,gPAA0C,gBAAgB;AAD1D,gPAAkD,WAAW;;;;;;;;;;;AAQ7D,yCAAyC;AACzC,MAAM,cAAc,CAAC,EAAE,MAAM,EAAE;IAC3B,MAAM,iBAAiB;QACnB,OAAQ,QAAQ;YACZ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAO;QACf;IACJ;IAEA,MAAM,gBAAgB;QAClB,OAAQ,QAAQ;YACZ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAO;QACf;IACJ;IAEA,qBACI,0JAAC;QAAK,WAAW,CAAC,2CAA2C,EAAE,kBAAkB;kBAC5E;;;;;;AAGb;KAxCM;AA0CN,2CAA2C;AAC3C,MAAM,qBAAqB,CAAC,EAAE,MAAM,EAAE;IAClC,MAAM,wBAAwB;QAC1B,OAAQ,QAAQ;YACZ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAO;QACf;IACJ;IAEA,MAAM,uBAAuB;QACzB,OAAQ,QAAQ;YACZ,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO;YACX;gBACI,OAAO;QACf;IACJ;IAEA,qBACI,0JAAC;QAAK,WAAW,CAAC,2CAA2C,EAAE,yBAAyB;kBACnF;;;;;;AAGb;MAhCM;AAkCN,kDAAkD;AAClD,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE;IACtC,MAAM,aAAa,CAAC;QAChB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;YACpD,MAAM;YACN,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;QACZ;IACJ;IAEA,MAAM,cAAc,CAAC;QACjB,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YAClC,OAAO;YACP,UAAU;QACd,GAAG,MAAM,CAAC;IACd;IAEA,qBACI,0JAAC;QAAI,WAAU;;0BAEX,0JAAC;gBAAI,WAAU;;kCACX,0JAAC;wBAAI,WAAU;;0CACX,0JAAC;gCAAE,WAAU;;oCAAmC;oCAAW,MAAM,EAAE;;;;;;;0CACnE,0JAAC;gCAAE,WAAU;0CAAoC,WAAW,MAAM,KAAK,CAAC,UAAU;;;;;;;;;;;;kCAEtF,0JAAC;wBAAY,QAAQ,MAAM,MAAM;;;;;;;;;;;;0BAIrC,0JAAC;gBAAI,WAAU;0BACV,MAAM,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,sBAChC,0JAAC;wBAAgB,WAAU;;0CACvB,0JAAC;gCACG,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,KAAK;gCAC7B,WAAU;gCACV,KAAK,KAAK,OAAO,CAAC,IAAI;;;;;;0CAE1B,0JAAC;gCAAI,WAAU;;oCAAiB;kDAC5B,0JAAC;wCAAE,WAAU;kDACR,KAAK,OAAO,CAAC,IAAI;;;;;;kDAEtB,0JAAC;wCAAE,WAAU;;4CAA4C;4CACnD,KAAK,OAAO,CAAC,KAAK,CAAC,IAAI;4CAAC;4CAAU,KAAK,OAAO,CAAC,IAAI;;;;;;;kDAEzD,0JAAC;wCAAE,WAAU;;4CACR,KAAK,QAAQ;4CAAC;4CAAI,YAAY,KAAK,KAAK;;;;;;;;;;;;;;uBAd3C;;;;;;;;;;0BAsBlB,0JAAC;gBAAI,WAAU;;kCACX,0JAAC;;0CACG,0JAAC;gCAAE,WAAU;0CAAwB;;;;;;0CACrC,0JAAC;gCAAE,WAAU;0CACR,YAAY,MAAM,OAAO,CAAC,WAAW;;;;;;;;;;;;kCAG9C,0JAAC;wBACG,SAAS,IAAM,aAAa;wBAC5B,WAAU;kCACb;;;;;;;;;;;;;;;;;;AAMjB;MAtEM;AAwEN,oCAAoC;AACpC,MAAM,cAAc,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE;IACnC,MAAM,aAAa,CAAC;QAChB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;YACpD,MAAM;YACN,OAAO;YACP,KAAK;YACL,MAAM;YACN,QAAQ;QACZ;IACJ;IAEA,MAAM,cAAc,CAAC;QACjB,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YAClC,OAAO;YACP,UAAU;QACd,GAAG,MAAM,CAAC;IACd;IAEA,qBACI,0JAAC;QAAI,WAAU;kBACX,cAAA,0JAAC;YAAI,WAAU;;8BAEX,0JAAC;oBAAI,WAAU;;sCACX,0JAAC;;8CACG,0JAAC;oCAAG,WAAU;;wCAAsB;wCAAoB,MAAM,EAAE;;;;;;;8CAChE,0JAAC;oCAAY,QAAQ,MAAM,MAAM;;;;;;;;;;;;sCAErC,0JAAC;4BAAO,SAAS;4BAAS,WAAU;sCAChC,cAAA,0JAAC;gCAAI,WAAU;gCAAU,MAAK;gCAAO,QAAO;gCAAe,SAAQ;0CAC/D,cAAA,0JAAC;oCAAK,eAAc;oCAAQ,gBAAe;oCAAQ,aAAY;oCAAI,GAAE;;;;;;;;;;;;;;;;;;;;;;8BAKjF,0JAAC;oBAAI,WAAU;;sCAEX,0JAAC;4BAAI,WAAU;;8CACX,0JAAC;oCAAG,WAAU;8CAAmB;;;;;;8CACjC,0JAAC;oCAAI,WAAU;;sDACX,0JAAC;;8DACG,0JAAC;oDAAE,WAAU;8DAAwB;;;;;;8DACrC,0JAAC;oDAAE,WAAU;8DAAe,MAAM,QAAQ,CAAC,SAAS,CAAC,IAAI;;;;;;;;;;;;sDAE7D,0JAAC;;8DACG,0JAAC;oDAAE,WAAU;8DAAwB;;;;;;8DACrC,0JAAC;oDAAE,WAAU;8DAAe,MAAM,QAAQ,CAAC,SAAS,CAAC,KAAK;;;;;;;;;;;;sDAE9D,0JAAC;;8DACG,0JAAC;oDAAE,WAAU;8DAAwB;;;;;;8DACrC,0JAAC;oDAAE,WAAU;8DAAe,MAAM,QAAQ,CAAC,SAAS,CAAC,KAAK;;;;;;;;;;;;sDAE9D,0JAAC;4CAAI,WAAU;;8DACX,0JAAC;oDAAE,WAAU;8DAAwB;;;;;;8DACrC,0JAAC;oDAAE,WAAU;8DACR,GAAG,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC;oCACtF,EAAE,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;sCAOvG,0JAAC;;8CACG,0JAAC;oCAAG,WAAU;8CAAmB;;;;;;8CACjC,0JAAC;oCAAI,WAAU;8CACV,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,sBACpB,0JAAC;4CAAgB,WAAU;;8DACvB,0JAAC;oDACG,KAAK,KAAK,OAAO,CAAC,KAAK,CAAC,KAAK;oDAC7B,WAAU;oDACV,KAAK,KAAK,OAAO,CAAC,IAAI;;;;;;8DAE1B,0JAAC;oDAAI,WAAU;;sEACX,0JAAC;4DAAE,WAAU;sEAAe,KAAK,OAAO,CAAC,IAAI;;;;;;sEAC7C,0JAAC;4DAAE,WAAU;;gEAAwB;gEAC3B,KAAK,OAAO,CAAC,KAAK,CAAC,IAAI;gEAAC;gEAAU,KAAK,OAAO,CAAC,IAAI;;;;;;;sEAE7D,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEAAE,WAAU;;wEAAU;wEAAW,KAAK,QAAQ;;;;;;;8EAC/C,0JAAC;oEAAE,WAAU;8EAAe,YAAY,KAAK,KAAK;;;;;;;;;;;;;;;;;;;2CAbpD;;;;;;;;;;;;;;;;sCAsBtB,0JAAC;4BAAI,WAAU;;8CACX,0JAAC;oCAAI,WAAU;;sDACX,0JAAC;4CAAG,WAAU;sDAAmB;;;;;;sDACjC,0JAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,0JAAC;4CAAE,WAAU;sDAAoB,MAAM,QAAQ,CAAC,OAAO;;;;;;sDACvD,0JAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,0JAAC;4CAAE,WAAU;sDAAe,YAAY,MAAM,QAAQ,CAAC,YAAY;;;;;;;;;;;;8CAEvE,0JAAC;oCAAI,WAAU;;sDACX,0JAAC;4CAAG,WAAU;sDAAmB;;;;;;sDACjC,0JAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,0JAAC;4CAAE,WAAU;sDACR,MAAM,OAAO,CAAC,MAAM,KAAK,qBAAqB,6BAA6B,MAAM,OAAO,CAAC,MAAM;;;;;;sDAEpG,0JAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,0JAAC;4CAAmB,QAAQ,MAAM,OAAO,CAAC,MAAM;;;;;;;;;;;;;;;;;;sCAKxD,0JAAC;4BAAI,WAAU;sCACX,cAAA,0JAAC;gCAAI,WAAU;;kDACX,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;gDAAK,WAAU;0DAAgB;;;;;;0DAChC,0JAAC;0DAAM,YAAY,MAAM,OAAO,CAAC,cAAc;;;;;;;;;;;;oCAElD,WAAW,MAAM,OAAO,CAAC,eAAe,IAAI,mBACzC,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;gDAAK,WAAU;0DAAgB;;;;;;0DAChC,0JAAC;gDAAK,WAAU;;oDAAe;oDACzB,YAAY,MAAM,OAAO,CAAC,eAAe;;;;;;;;;;;;;kDAIvD,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;gDAAK,WAAU;0DAAgB;;;;;;0DAChC,0JAAC;0DAAM,YAAY,MAAM,QAAQ,CAAC,YAAY;;;;;;;;;;;;kDAElD,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;0DAAK;;;;;;0DACN,0JAAC;gDAAK,WAAU;0DAAiB,YAAY,MAAM,OAAO,CAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtG;MAxIM;AA2IS,SAAS,iBAAiB,EACrC,IAAI,EACJ,WAAW,EACX,YAAY,EACZ,WAAW,EACX,cAAc,EACd,MAAM,EACN,YAAY,EACf;;IACG,sCAAsC;IACtC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;QACnD,QAAQ;QACR,MAAM;QACN,UAAU;QACV,MAAM;QACN,SAAS;QACT,cAAc;QACd,YAAY;IAChB;IACA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;QAC3C,WAAW;QACX,UAAU;QACV,OAAO;QACP,QAAQ;IACZ;IACA,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,WAAW,CAAA,GAAA,qJAAA,CAAA,cAAW,AAAD;IAE3B,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;sCAAE;YACN,IAAI,MAAM;gBACN,eAAe;oBACX,WAAW,KAAK,SAAS,IAAI;oBAC7B,UAAU,KAAK,QAAQ,IAAI;oBAC3B,OAAO,KAAK,KAAK,IAAI;oBACrB,QAAQ,KAAK,MAAM,IAAI;gBAC3B;YACJ;QACJ;qCAAG;QAAC;KAAK;IAET,MAAM,sBAAsB,CAAC;QACzB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,eAAe,CAAA,OAAQ,CAAC;gBACpB,GAAG,IAAI;gBACP,CAAC,KAAK,EAAE;YACZ,CAAC;IACL;IAEA,0BAA0B;IAC1B,MAAM,sBAAsB,OAAO;QAC/B,EAAE,cAAc;QAChB,iBAAiB;QACjB,IAAI;YACA,mCAAmC;YACnC,MAAM,aAAa;gBACf,WAAW,YAAY,SAAS;gBAChC,UAAU,YAAY,QAAQ;gBAC9B,OAAO,YAAY,KAAK;gBACxB,QAAQ,YAAY,MAAM;YAC9B;YAEA,MAAM,SAAS,MAAM,SAAS,CAAA,GAAA,+HAAA,CAAA,gBAAa,AAAD,EAAE,aAAa,MAAM;YAE/D,iCAAiC;YACjC,eAAe;gBACX,WAAW,OAAO,SAAS,IAAI;gBAC/B,UAAU,OAAO,QAAQ,IAAI;gBAC7B,OAAO,OAAO,KAAK,IAAI;gBACvB,QAAQ,OAAO,MAAM,IAAI;YAC7B;YAEA,aAAa;YACb,+IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAClB,EAAE,OAAO,OAAO;YACZ,+IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO,IAAI;QACjC,SAAU;YACN,iBAAiB;QACrB;IACJ;IAIA,kBAAkB;IAClB,MAAM,iBAAiB;QACnB,IAAI;YACA,kBAAkB;YAClB,MAAM,WAAW,MAAM,qHAAA,CAAA,aAAU,CAAC,YAAY;YAC9C,aAAa,SAAS,IAAI;QAC9B,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,8BAA8B;QAChD,SAAU;YACN,kBAAkB;QACtB;IACJ;IAEA,yBAAyB;IACzB,MAAM,sBAAsB,OAAO;QAC/B,EAAE,cAAc;QAChB,IAAI;YACA,IAAI,iBAAiB;gBACjB,MAAM,qHAAA,CAAA,aAAU,CAAC,aAAa,CAAC,gBAAgB,EAAE,EAAE;YACvD,OAAO;gBACH,MAAM,qHAAA,CAAA,aAAU,CAAC,aAAa,CAAC;YACnC;YACA;YACA,mBAAmB;YACnB,mBAAmB;YACnB,mBAAmB;gBACf,QAAQ;gBACR,MAAM;gBACN,UAAU;gBACV,MAAM;gBACN,SAAS;gBACT,cAAc;gBACd,YAAY;YAChB;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,2BAA2B;QAC7C;IACJ;IAEA,0BAA0B;IAC1B,MAAM,sBAAsB,OAAO;QAC/B,IAAI,OAAO,OAAO,CAAC,2CAA2C;YAC1D,IAAI;gBACA,MAAM,qHAAA,CAAA,aAAU,CAAC,aAAa,CAAC;gBAC/B;YACJ,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC/C;QACJ;IACJ;IAEA,iCAAiC;IACjC,MAAM,0BAA0B,OAAO;QACnC,IAAI;YACA,MAAM,qHAAA,CAAA,aAAU,CAAC,iBAAiB,CAAC;YACnC;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,kCAAkC;QACpD;IACJ;IAEA,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;sCAAE;YACN,MAAM;6DAAiB;oBACnB,IAAI;wBACA,MAAM,WAAW,MAAM,MAAM;wBAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,aAAa;oBACjB,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,8BAA8B;oBAChD;gBACJ;;YACA;QACJ;qCAAG,EAAE;IAEL,MAAM,uBAAuB,CAAC;QAC1B,MAAM,eAAe,EAAE,MAAM,CAAC,KAAK;QACnC,MAAM,mBAAmB,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,OAAO;QAE/D,mBAAmB;YACf,GAAG,eAAe;YAClB,MAAM,kBAAkB,QAAQ;YAChC,UAAU;YACV,MAAM;QACV;QAEA,aAAa,kBAAkB,aAAa,EAAE;QAC9C,SAAS,EAAE;IACf;IAEA,MAAM,uBAAuB,CAAC;QAC1B,MAAM,eAAe,EAAE,MAAM,CAAC,KAAK;QACnC,MAAM,mBAAmB,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,OAAO;QAE/D,mBAAmB;YACf,GAAG,eAAe;YAClB,UAAU,kBAAkB,QAAQ;YACpC,MAAM;QACV;QAEA,SAAS,kBAAkB,SAAS,EAAE;IAC1C;IAEA,MAAM,mBAAmB,CAAC;QACtB,MAAM,WAAW,EAAE,MAAM,CAAC,KAAK;QAC/B,MAAM,eAAe,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,OAAO;QAEvD,mBAAmB;YACf,GAAG,eAAe;YAClB,MAAM,cAAc,QAAQ;QAChC;IACJ;IAGA,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD;sCAAE;YACN,IAAI,gBAAgB,WAAW;gBAC3B;YACJ;QACJ;qCAAG;QAAC;KAAY;IAGhB,qBACI,0JAAC;QAAI,WAAU;;0BACX,0JAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,0JAAC;gBAAI,WAAU;;kCAEX,0JAAC;wBAAI,WAAU;;0CACX,0JAAC;gCACG,WAAW,CAAC;4BACR,EAAE,gBAAgB,SACZ,2BACA,iCACJ;gCACN,SAAS,IAAM,eAAe;0CACjC;;;;;;0CAGD,0JAAC;gCACG,WAAW,CAAC;4BACR,EAAE,gBAAgB,WACZ,2BACA,iCACJ;gCACN,SAAS;oCACL,eAAe;oCACf,aAAa;gCACjB;0CACH;;;;;;0CAGD,0JAAC;gCACG,WAAW,CAAC;4BACR,EAAE,gBAAgB,YACZ,2BACA,iCACJ;gCACN,SAAS;oCACL,eAAe;oCACf,aAAa;gCACjB;0CACH;;;;;;0CAGD,0JAAC;gCACG,WAAU;gCAEV,SAAS;0CACZ;;;;;;;;;;;;kCAML,0JAAC;wBAAI,WAAU;;4BAEV,gBAAgB,wBACb,0JAAC;;kDACG,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;gDAAG,WAAU;0DAAwB;;;;;;4CACrC,CAAC,2BACE,0JAAC;gDACG,SAAS,IAAM,aAAa;gDAC5B,WAAU;0DAEV,cAAA,0JAAC,0IAAA,CAAA,UAAO;oDAAC,WAAU;;;;;;;;;;;;;;;;;oCAK9B,4BACG,0JAAC;wCAAI,WAAU;kDACX,cAAA,0JAAC;4CAAI,WAAU;;;;;;;;;;+CAEnB,OACA,YACI,gBAAgB;kDAChB,0JAAC;wCAAK,UAAU;wCAAqB,WAAU;;0DAE3C,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAM,WAAU;;4DAA0C;0EACpD,0JAAC;gEAAK,WAAU;0EAAe;;;;;;;;;;;;kEAEtC,0JAAC;wDACG,MAAK;wDACL,MAAK;wDACL,OAAO,YAAY,SAAS;wDAC5B,UAAU;wDACV,WAAU;wDACV,QAAQ;;;;;;;;;;;;0DAKhB,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAM,WAAU;;4DAA0C;0EACnD,0JAAC;gEAAK,WAAU;0EAAe;;;;;;;;;;;;kEAEvC,0JAAC;wDACG,MAAK;wDACL,MAAK;wDACL,OAAO,YAAY,QAAQ;wDAC3B,UAAU;wDACV,WAAU;wDACV,QAAQ;;;;;;;;;;;;0DAKhB,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAM,WAAU;kEAA0C;;;;;;kEAC3D,0JAAC;wDACG,MAAK;wDACL,OAAO,KAAK,KAAK;wDACjB,WAAU;wDACV,QAAQ;;;;;;;;;;;;0DAKhB,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAM,WAAU;kEAA0C;;;;;;kEAC3D,0JAAC;wDACG,MAAK;wDACL,MAAK;wDACL,OAAO,YAAY,KAAK;wDACxB,UAAU;wDACV,WAAU;;;;;;;;;;;;0DAKlB,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAM,WAAU;kEAA0C;;;;;;kEAG3D,0JAAC;wDACG,MAAK;wDACL,OAAO,YAAY,MAAM;wDACzB,UAAU;wDACV,WAAU;;0EAEV,0JAAC;gEAAO,OAAM;0EAAG;;;;;;0EACjB,0JAAC;gEAAO,OAAM;0EAAO;;;;;;0EACrB,0JAAC;gEAAO,OAAM;0EAAS;;;;;;0EACvB,0JAAC;gEAAO,OAAM;0EAAQ;;;;;;;;;;;;;;;;;;0DAK9B,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDACG,MAAK;wDACL,SAAS;4DACL,aAAa;4DACb,eAAe;gEACX,WAAW,KAAK,SAAS,IAAI;gEAC7B,UAAU,KAAK,QAAQ,IAAI;gEAC3B,OAAO,KAAK,KAAK,IAAI;gEACrB,QAAQ,KAAK,MAAM,IAAI;4DAC3B;wDACJ;wDACA,WAAU;kEACb;;;;;;kEAGD,0JAAC;wDACG,MAAK;wDACL,UAAU;wDACV,WAAW,CAAC;gCAC5B,EAAE,gBAAgB,gBAAgB,mCAAmC;kEAEpD,gBAAgB,qBAAqB;;;;;;;;;;;;;;;;;+CAKlD,qBAAqB;kDACrB,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAE,WAAU;kEAAoC;;;;;;kEACjD,0JAAC;wDAAE,WAAU;kEAAI,KAAK,SAAS,IAAI;;;;;;;;;;;;0DAEvC,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAE,WAAU;kEAAoC;;;;;;kEACjD,0JAAC;wDAAE,WAAU;kEAAI,KAAK,QAAQ,IAAI;;;;;;;;;;;;0DAEtC,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAE,WAAU;kEAAoC;;;;;;kEACjD,0JAAC;wDAAE,WAAU;kEAAI,KAAK,KAAK,IAAI;;;;;;;;;;;;0DAEnC,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAE,WAAU;kEAAoC;;;;;;kEACjD,0JAAC;wDAAE,WAAU;kEAAI,KAAK,KAAK,IAAI;;;;;;;;;;;;0DAEnC,0JAAC;gDAAI,WAAU;;kEACX,0JAAC;wDAAE,WAAU;kEAAoC;;;;;;kEACjD,0JAAC;wDAAE,WAAU;kEACR,KAAK,MAAM,KAAK,SAAS,QACtB,KAAK,MAAM,KAAK,WAAW,OACvB,KAAK,MAAM,KAAK,UAAU,SAAS;;;;;;;;;;;;;;;;;6DAM3D,0JAAC;wCAAI,WAAU;kDACX,cAAA,0JAAC;sDAAE;;;;;;;;;;;;;;;;;4BAOlB,gBAAgB,0BACb,0JAAC;;kDACG,0JAAC;wCAAG,WAAU;kDAA6B;;;;;;oCAC1C,6BACG,0JAAC;wCAAI,WAAU;kDACX,cAAA,0JAAC;4CAAI,WAAU;;;;;;;;;;+CAEnB,QAAQ,MAAM,QAAQ,SAAS,kBAC/B,0JAAC;wCAAI,WAAU;kDACV,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,sBACrB,0JAAC;gDAEG,OAAO;gDACP,cAAc;+CAFT,MAAM,EAAE;;;;;;;;;6DAOzB,0JAAC;wCAAI,WAAU;kDACX,cAAA,0JAAC;sDAAE;;;;;;;;;;;oCAIV,+BACG,0JAAC;wCACG,OAAO;wCACP,SAAS,IAAM,iBAAiB;;;;;;;;;;;;4BAO/C,gBAAgB,2BACb,0JAAC;;kDACG,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;gDAAG,WAAU;0DAAwB;;;;;;0DACtC,0JAAC;gDACG,SAAS;oDACL,mBAAmB;oDACnB,mBAAmB;gDACvB;gDACA,WAAU;0DACb;;;;;;;;;;;;oCAKJ,+BACG,0JAAC;wCAAI,WAAU;kDACX,cAAA,0JAAC;4CAAI,WAAU;;;;;;;;;;+CAEnB,UAAU,MAAM,GAAG,IACnB,gBAAgB,iBAChB,0JAAC;wCAAI,WAAU;kDACV,UAAU,GAAG,CAAC,CAAC,wBACZ,0JAAC;gDACG,WAAU;0DACV,cAAA,0JAAC;oDAAI,WAAU;;sEAEX,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEAAI,WAAU;;sFACX,0JAAC;4EAAK,WAAU;sFACX,QAAQ,YAAY,KAAK,SAAS,cAC/B,QAAQ,YAAY,KAAK,WAAW,cAAc;;;;;;wEAEzD,QAAQ,UAAU,kBACf,0JAAC;4EAAK,WAAU;;8FAEZ,0JAAC,0IAAA,CAAA,UAAO;oFAAC,WAAU;;;;;;gFAAY;;;;;;;;;;;;;8EAO3C,0JAAC;oEAAI,WAAU;;sFACX,0JAAC;4EAAI,WAAU;;8FACX,0JAAC;oFAAK,WAAU;8FAAoD;;;;;;8FAGpE,0JAAC;oFAAK,WAAU;8FACX,QAAQ,MAAM;;;;;;;;;;;;sFAIvB,0JAAC;4EAAI,WAAU;;8FACX,0JAAC;oFAAK,WAAU;8FAAoD;;;;;;8FAGpE,0JAAC;oFAAK,WAAU;8FACX,QAAQ,IAAI;;;;;;;;;;;;sFAIrB,0JAAC;4EAAI,WAAU;;8FACX,0JAAC;oFAAK,WAAU;8FAAoD;;;;;;8FAGpE,0JAAC;oFAAK,WAAU;8FACX,QAAQ,QAAQ;;;;;;;;;;;;sFAIzB,0JAAC;4EAAI,WAAU;;8FACX,0JAAC;oFAAK,WAAU;8FAAoD;;;;;;8FAGpE,0JAAC;oFAAK,WAAU;8FACX,QAAQ,IAAI;;;;;;;;;;;;sFAIrB,0JAAC;4EAAI,WAAU;;8FACX,0JAAC;oFAAK,WAAU;8FAAoD;;;;;;8FAGpE,0JAAC;oFAAK,WAAU;8FACX,QAAQ,OAAO;;;;;;;;;;;;;;;;;;;;;;;;sEAOhC,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEACG,SAAS;wEACL,mBAAmB;wEACnB,mBAAmB;wEACnB,mBAAmB;oEACvB;oEACA,WAAU;oEACV,OAAM;8EAEN,cAAA,0JAAC,0IAAA,CAAA,UAAO;wEAAC,WAAU;;;;;;;;;;;8EAGvB,0JAAC;oEACG,SAAS,IAAM,oBAAoB,QAAQ,EAAE;oEAC7C,WAAU;oEACV,OAAM;8EAEN,cAAA,0JAAC,0IAAA,CAAA,kBAAe;wEAAC,WAAU;;;;;;;;;;;gEAG9B,CAAC,QAAQ,UAAU,kBAChB,0JAAC;oEACG,SAAS,IAAM,wBAAwB,QAAQ,EAAE;oEACjD,WAAU;oEACV,OAAM;8EAEN,cAAA,0JAAC,0IAAA,CAAA,UAAO;wEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;+CAhG7B,QAAQ,EAAE;;;;;;;;;6DAyG5B,0JAAC;wCAAI,WAAU;;0DACX,0JAAC;gDAAI,WAAU;0DACX,cAAA,0JAAC;oDAAI,WAAU;oDAAoB,MAAK;oDAAO,SAAQ;oDAAY,QAAO;8DACtE,cAAA,0JAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAC5D,GAAE;;;;;;;;;;;;;;;;0DAGd,0JAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;;oCAK5C,iCACG,0JAAC;wCAAI,WAAU;kDACX,cAAA,0JAAC;4CAAI,WAAU;;8DAEX,0JAAC;oDAAI,WAAU;;sEACX,0JAAC;4DAAG,WAAU;sEACT,kBAAkB,qBAAqB;;;;;;sEAE5C,0JAAC;4DACG,SAAS;gEACL,mBAAmB;gEACnB,mBAAmB;4DACvB;4DACA,WAAU;sEAEV,cAAA,0JAAC;gEAAI,WAAU;gEAAU,MAAK;gEAAO,QAAO;gEAAe,SAAQ;0EAC/D,cAAA,0JAAC;oEAAK,eAAc;oEAAQ,gBAAe;oEAAQ,aAAY;oEAAI,GAAE;;;;;;;;;;;;;;;;;;;;;;8DAKjF,0JAAC;oDAAK,UAAU;oDAAqB,WAAU;;sEAE3C,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEAAM,WAAU;8EAA0C;;;;;;8EAG3D,0JAAC;oEACG,OAAO,gBAAgB,YAAY;oEACnC,UAAU,CAAC,IAAM,mBAAmB;4EAChC,GAAG,eAAe;4EAClB,cAAc,EAAE,MAAM,CAAC,KAAK;wEAChC;oEACA,WAAU;;sFAGV,0JAAC;4EAAO,OAAM;sFAAO;;;;;;sFACrB,0JAAC;4EAAO,OAAM;sFAAS;;;;;;sFACvB,0JAAC;4EAAO,OAAM;sFAAQ;;;;;;;;;;;;;;;;;;sEAK9B,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEAAM,WAAU;8EAA0C;;;;;;8EAG3D,0JAAC;oEACG,MAAK;oEACL,OAAO,gBAAgB,MAAM;oEAC7B,UAAU,CAAC,IAAM,mBAAmB;4EAChC,GAAG,eAAe;4EAClB,QAAQ,EAAE,MAAM,CAAC,KAAK;wEAC1B;oEACA,WAAU;oEAEV,QAAQ;;;;;;;;;;;;sEAKhB,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEAAM,WAAU;8EAA0C;;;;;;8EAG3D,0JAAC;oEACG,OAAO,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,gBAAgB,IAAI,GAAG,QAAQ;oEACrE,UAAU;oEACV,WAAU;oEAEV,QAAQ;;sFAER,0JAAC;4EAAO,OAAM;sFAAG;;;;;;wEAChB,UAAU,GAAG,CAAC,CAAA,yBACX,0JAAC;gFAA2B,OAAO,SAAS,IAAI;0FAC3C,SAAS,IAAI;+EADL,SAAS,IAAI;;;;;;;;;;;;;;;;;sEAQtC,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEAAM,WAAU;8EAA0C;;;;;;8EAG3D,0JAAC;oEACG,OAAO,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,gBAAgB,QAAQ,GAAG,QAAQ;oEACzE,UAAU;oEACV,WAAU;oEAEV,QAAQ;oEACR,UAAU,CAAC,gBAAgB,IAAI;;sFAE/B,0JAAC;4EAAO,OAAM;sFAAG;;;;;;wEAChB,UAAU,GAAG,CAAC,CAAA,yBACX,0JAAC;gFAA2B,OAAO,SAAS,IAAI;0FAC3C,SAAS,IAAI;+EADL,SAAS,IAAI;;;;;;;;;;;;;;;;;sEAQtC,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEAAM,WAAU;8EAA0C;;;;;;8EAG3D,0JAAC;oEACG,OAAO,MAAM,IAAI,CAAC,CAAA,IAAK,EAAE,IAAI,KAAK,gBAAgB,IAAI,GAAG,QAAQ;oEACjE,UAAU;oEACV,WAAU;oEAEV,QAAQ;oEACR,UAAU,CAAC,gBAAgB,QAAQ;;sFAEnC,0JAAC;4EAAO,OAAM;sFAAG;;;;;;wEAChB,MAAM,GAAG,CAAC,CAAA,qBACP,0JAAC;gFAAuB,OAAO,KAAK,IAAI;0FACnC,KAAK,IAAI;+EADD,KAAK,IAAI;;;;;;;;;;;;;;;;;sEAOlC,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEACG,MAAK;oEACL,IAAG;oEACH,SAAS,gBAAgB,UAAU;oEACnC,UAAU,CAAC,IAAM,mBAAmB;4EAChC,GAAG,eAAe;4EAClB,YAAY,EAAE,MAAM,CAAC,OAAO;wEAChC;oEACA,WAAU;;;;;;8EAEd,0JAAC;oEAAM,SAAQ;oEAAa,WAAU;8EAA6B;;;;;;;;;;;;sEAKvE,0JAAC;4DAAI,WAAU;;8EACX,0JAAC;oEACG,MAAK;oEACL,SAAS;wEACL,mBAAmB;wEACnB,mBAAmB;oEACvB;oEACA,WAAU;8EAEb;;;;;;8EAGD,0JAAC;oEACG,MAAK;oEACL,WAAU;8EAGT,kBAAkB,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAapF;GA9vBwB;;QAmCH,qJAAA,CAAA,cAAW;;;MAnCR"}},
    {"offset": {"line": 5176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5182, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/store/slices/cartSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { cartApi } from '../../utils/apiClient';\r\n\r\n// **Async thunks**\r\n\r\n// Tạo giỏ hàng cho khách\r\nexport const createCartForGuest = createAsyncThunk(\r\n    'cart/createCartForGuest',\r\n    async (cartData, { rejectWithValue }) => {\r\n        try {\r\n            const response = await cartApi.createCartForGuest(cartData);\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || 'Failed to create cart for guest.');\r\n        }\r\n    }\r\n);\r\n\r\n// Tạo hoặc lấy giỏ hàng cho người dùng đã đăng nhập\r\nexport const createCartForUser = createAsyncThunk(\r\n    'cart/createCartForUser',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const response = await cartApi.createCartForUser();\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || 'Failed to create or retrieve cart for user.');\r\n        }\r\n    }\r\n);\r\n\r\n// Lấy chi tiết giỏ hàng theo ID\r\nexport const getCartById = createAsyncThunk(\r\n    'cart/getCartById',\r\n    async (cartId, { rejectWithValue }) => {\r\n        try {\r\n            const response = await cartApi.getCartById(cartId);\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || 'Failed to fetch cart details.');\r\n        }\r\n    }\r\n);\r\n\r\n// Thêm sản phẩm vào giỏ hàng\r\nexport const addItemToCart = createAsyncThunk(\r\n    'cart/addItemToCart',\r\n    async ({ cartId, itemData }, { rejectWithValue }) => {\r\n        try {\r\n            const response = await cartApi.addItemToCart(cartId, itemData);\r\n            return response.data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || 'Failed to add item to cart.');\r\n        }\r\n    }\r\n);\r\n\r\n// Xóa sản phẩm khỏi giỏ hàng\r\nexport const removeCartItem = createAsyncThunk(\r\n    'cart/removeCartItem',\r\n    async (itemId, { rejectWithValue }) => {\r\n        try {\r\n            const response = await cartApi.removeCartItem(itemId);\r\n            return response;\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || 'Failed to remove item from cart.');\r\n        }\r\n    }\r\n);\r\n\r\n// Lấy tất cả sản phẩm trong giỏ hàng\r\nexport const getCartItems = createAsyncThunk(\r\n    'cart/getCartItems',\r\n    async (cartId, { rejectWithValue }) => {\r\n        try {\r\n            const response = await cartApi.getCartItems(cartId);\r\n            return response.data; // Lấy phần `data` từ kết quả API\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || 'Failed to fetch cart items.');\r\n        }\r\n    }\r\n);\r\n\r\n// Cập nhật số lượng sản phẩm trong giỏ hàng\r\nexport const updateCartItemQuantity = createAsyncThunk(\r\n    'cart/updateCartItemQuantity',\r\n    async ({ itemId, quantity }, { rejectWithValue }) => {\r\n        try {\r\n            const response = await cartApi.updateCartItemQuantity(itemId, quantity);\r\n            return response.data; // Đảm bảo trả về đầy đủ dữ liệu sản phẩm\r\n        } catch (error) {\r\n            return rejectWithValue(error.response?.data || 'Failed to update cart item quantity.');\r\n        }\r\n    }\r\n);\r\n\r\n\r\n// **Slice**\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cart: null,\r\n        items: [],\r\n        loading: false,\r\n        updating: {}, // Theo dõi trạng thái cập nhật cho từng sản phẩm\r\n        error: null,\r\n    },\r\n    reducers: {\r\n        resetCartState: (state) => {\r\n            state.cart = null;\r\n            state.items = [];\r\n            state.loading = false;\r\n            state.updating = {};\r\n            state.error = null;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            // Create cart for guest\r\n            .addCase(createCartForGuest.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(createCartForGuest.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.cart = action.payload;\r\n            })\r\n            .addCase(createCartForGuest.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            })\r\n\r\n            // Create or retrieve cart for user\r\n            .addCase(createCartForUser.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(createCartForUser.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.cart = action.payload;\r\n            })\r\n            .addCase(createCartForUser.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            })\r\n\r\n            // Get cart by ID\r\n            .addCase(getCartById.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(getCartById.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.cart = action.payload;\r\n            })\r\n            .addCase(getCartById.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            })\r\n\r\n            // Add item to cart\r\n            .addCase(addItemToCart.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(addItemToCart.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                state.items.push(action.payload);\r\n            })\r\n            .addCase(addItemToCart.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            })\r\n\r\n            // Remove item from cart\r\n            // Remove item from cart\r\n            .addCase(removeCartItem.pending, (state, action) => {\r\n                const itemId = action.meta.arg; // Capture the item ID being removed\r\n                state.updating[itemId] = true; // Mark the specific item as updating\r\n                state.error = null;\r\n            })\r\n            .addCase(removeCartItem.fulfilled, (state, action) => {\r\n                const itemId = action.meta.arg; // Retrieve the ID of the removed item\r\n                state.items = state.items.filter((item) => item.id !== itemId); // Remove the item from the state\r\n                delete state.updating[itemId]; // Remove the \"updating\" flag for the item\r\n            })\r\n            .addCase(removeCartItem.rejected, (state, action) => {\r\n                const itemId = action.meta.arg; // Retrieve the ID of the item that failed to be removed\r\n                state.updating[itemId] = false; // Reset the \"updating\" flag\r\n                state.error = action.payload; // Store the error message\r\n            })\r\n\r\n            // Get cart items\r\n            .addCase(getCartItems.pending, (state) => {\r\n                state.loading = true;\r\n                state.error = null;\r\n            })\r\n            .addCase(getCartItems.fulfilled, (state, action) => {\r\n                state.loading = false;\r\n                if (JSON.stringify(state.items) !== JSON.stringify(action.payload)) {\r\n                    state.items = action.payload;\r\n                }\r\n            })\r\n            .addCase(getCartItems.rejected, (state, action) => {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            })\r\n            // Update cart item quantity\r\n            .addCase(updateCartItemQuantity.pending, (state, action) => {\r\n                const { itemId } = action.meta.arg;\r\n                state.updating[itemId] = true; // Đánh dấu sản phẩm đang cập nhật\r\n                state.error = null;\r\n            })\r\n            .addCase(updateCartItemQuantity.fulfilled, (state, action) => {\r\n                const updatedItem = action.payload;\r\n                const itemIndex = state.items.findIndex((item) => item.id === updatedItem.id);\r\n                if (itemIndex !== -1) {\r\n                    state.items[itemIndex] = {\r\n                        ...state.items[itemIndex],\r\n                        ...updatedItem, // Cập nhật dữ liệu sản phẩm\r\n                    };\r\n                }\r\n                delete state.updating[updatedItem.id]; // Xóa trạng thái cập nhật\r\n            })\r\n            .addCase(updateCartItemQuantity.rejected, (state, action) => {\r\n                const { itemId } = action.meta.arg;\r\n                state.updating[itemId] = false; // Đánh dấu cập nhật thất bại\r\n                state.error = action.payload;\r\n            });\r\n    },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const { resetCartState } = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5372, "column": 0}, "map": {"version":3,"sources":["file://D%3A/1_KLTN_HK2_2024_25/A1/fe_web_app/src/pages/account/profile.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport { getUserInfo, logoutUser, loginUser, registerUser, verifyOtp } from '../../store/slices/userSlice';\r\nimport { getToken, getCartId } from '../../utils/storage';\r\nimport { orderApi, userApi } from '../../utils/apiClient';\r\n// Dynamic import\r\nconst Layout = dynamic(() => import('../../components/Layout'), {\r\n    ssr: false\r\n});\r\nimport AuthInterface from '../../components/profiles/AuthInterface';\r\nimport ProfileInterface from '../../components/profiles/ProfileInterface';\r\nimport {\r\n    createCartForGuest,\r\n    createCartForUser,\r\n    getCartItems,\r\n    resetCartState,\r\n} from '../../store/slices/cartSlice';\r\n\r\nexport default function Profile() {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { user, loading } = useSelector((state) => state.auth);\r\n\r\n    const [isMounted, setIsMounted] = useState(false);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [authStep, setAuthStep] = useState('login');\r\n    const [selectedTab, setSelectedTab] = useState('info');\r\n    const [otp, setOtp] = useState('');\r\n    const [orders, setOrders] = useState([]);\r\n    const [orderLoading, setOrderLoading] = useState(false);\r\n    const [passwordVisibility, setPasswordVisibility] = useState({\r\n        password: false,\r\n        confirmPassword: false,\r\n    });\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        phone: '',\r\n        gender: '',\r\n        newPassword: '',\r\n        confirmNewPassword: '',\r\n    });\r\n    const [error, setError] = useState(null);\r\n    const controller = new AbortController();\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    // Mounted effect\r\n    useEffect(() => {\r\n        setIsMounted(true);\r\n    }, []);\r\n\r\n    // Authentication effect\r\n    useEffect(() => {\r\n        const initializeAuth = async () => {\r\n            const token = getToken();\r\n            if (token) {\r\n                setIsAuthenticated(true);\r\n                try {\r\n                    await dispatch(getUserInfo()).unwrap();\r\n                    setError(null);\r\n                } catch (err) {\r\n                    console.error('Failed to get user info:', err);\r\n                    setError(err.message || 'Failed to authenticate');\r\n                    setIsAuthenticated(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (isMounted) {\r\n            initializeAuth();\r\n        }\r\n    }, [dispatch, isMounted]);\r\n\r\n    // Thêm function để lấy orders\r\n    const fetchOrders = async () => {\r\n        try {\r\n            setOrderLoading(true);\r\n            const response = await orderApi.getOrdersByUser({ page: 1, limit: 10 });\r\n            setOrders(response);\r\n        } catch (error) {\r\n            console.error('Failed to fetch orders:', error);\r\n        } finally {\r\n            setOrderLoading(false);\r\n        }\r\n    };\r\n\r\n    // Thêm useEffect để gọi API khi tab orders được chọn\r\n    useEffect(() => {\r\n        if (selectedTab === 'orders') {\r\n            fetchOrders();\r\n        }\r\n    }, [selectedTab]);\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await dispatch(logoutUser()).unwrap();\r\n            // Thêm dispatch resetCartState để xóa state cart cũ\r\n            dispatch(resetCartState());\r\n            setIsAuthenticated(false);\r\n        } catch (err) {\r\n            console.error('Failed to logout:', err);\r\n        }\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setError(null); // Reset error state\r\n\r\n        try {\r\n            const result = await dispatch(loginUser({\r\n                email: formData.email,\r\n                password: formData.password\r\n            })).unwrap();\r\n\r\n            if (result.status === 'success') {\r\n                setIsAuthenticated(true);\r\n                await dispatch(getUserInfo());\r\n                const cartId = getCartId();\r\n                if (cartId) {\r\n                    await dispatch(getCartItems(cartId));\r\n                } else {\r\n                    const cartResponse = await dispatch(\r\n                        !getToken() ? createCartForGuest() : createCartForUser()\r\n                    ).unwrap();\r\n\r\n                    if (cartResponse?.id) {\r\n                        await dispatch(getCartItems(cartResponse.id));\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            setError(err);\r\n            console.error('Login error:', err);\r\n        }\r\n    };\r\n\r\n\r\n    // Thêm hàm xử lý quên mật khẩu\r\n    const handleForgotPassword = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await userApi.forgotPassword({ email: formData.email });\r\n            alert('Mã OTP đã được gửi đến email của bạn');\r\n            setAuthStep('reset-password');\r\n        } catch (error) {\r\n            alert(error.message || 'Có lỗi xảy ra');\r\n        }\r\n    };\r\n\r\n    // Thêm hàm xử lý reset mật khẩu\r\n    const handleResetPassword = async (e) => {\r\n        e.preventDefault();\r\n        if (formData.newPassword !== formData.confirmNewPassword) {\r\n            alert('Mật khẩu mới không khớp');\r\n            return;\r\n        }\r\n        try {\r\n            await userApi.resetPassword({\r\n                email: formData.email,\r\n                otp: otp,\r\n                newPassword: formData.newPassword\r\n            });\r\n            alert('Đặt lại mật khẩu thành công');\r\n            setAuthStep('login');\r\n            setFormData({\r\n                ...formData,\r\n                newPassword: '',\r\n                confirmNewPassword: ''\r\n            });\r\n            setOtp('');\r\n        } catch (error) {\r\n            alert(error.message || 'Có lỗi xảy ra');\r\n        }\r\n    };\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        setError(null); // Reset error state before attempting registration\r\n\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setError('Mật khẩu không khớp. Vui lòng thử lại.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const result = await dispatch(registerUser(formData)).unwrap();\r\n            if (result.status === 'success') {\r\n                setAuthStep('otp');\r\n            }\r\n        } catch (err) {\r\n            setError(err); // Lưu lỗi vào state\r\n            console.error('Registration error:', err);\r\n        }\r\n    };\r\n\r\n\r\n    const handleOtpSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const result = await dispatch(verifyOtp({ email: formData.email, otp }));\r\n        if (result.meta.requestStatus === 'fulfilled') {\r\n            alert('Verification successful! You can now log in.');\r\n            setAuthStep('login');\r\n        } else {\r\n            alert('Invalid OTP. Please try again.');\r\n        }\r\n    };\r\n\r\n    const togglePasswordVisibility = (field) => {\r\n        setPasswordVisibility({\r\n            ...passwordVisibility,\r\n            [field]: !passwordVisibility[field],\r\n        });\r\n    };\r\n\r\n    if (!isMounted) {\r\n        return null;\r\n    }\r\n\r\n    if (!isAuthenticated) {\r\n        return (\r\n            <Layout>\r\n                <AuthInterface\r\n                    authStep={authStep}\r\n                    setAuthStep={setAuthStep}\r\n                    formData={formData}\r\n                    setFormData={setFormData}\r\n                    handleChange={handleChange}\r\n                    handleLogin={handleLogin}\r\n                    handleRegister={handleRegister}\r\n                    handleOtpSubmit={handleOtpSubmit}\r\n                    handleForgotPassword={handleForgotPassword}\r\n                    handleResetPassword={handleResetPassword}\r\n                    otp={otp}\r\n                    setOtp={setOtp}\r\n                    passwordVisibility={passwordVisibility}\r\n                    togglePasswordVisibility={togglePasswordVisibility}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <ProfileInterface\r\n                user={user}\r\n                selectedTab={selectedTab}\r\n                setSelectedTab={setSelectedTab}\r\n                handleLogout={handleLogout}\r\n                orders={orders}\r\n                orderLoading={orderLoading}\r\n                userLoading={loading}\r\n            />\r\n        </Layout>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5686, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/account/profile\";\n\n/// <reference types=\"next/client\" />\n\n// inserted by rust code\ndeclare const PAGE_PATH: string\n\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\n;(window.__NEXT_P = window.__NEXT_P || []).push([\n  PAGE_PATH,\n  () => {\n    return require('PAGE')\n  },\n])\n// @ts-expect-error module.hot exists\nif (module.hot) {\n  // @ts-expect-error module.hot exists\n  module.hot.dispose(function () {\n    window.__NEXT_P.push([PAGE_PATH])\n  })\n}\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0]}},
    {"offset": {"line": 5702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}